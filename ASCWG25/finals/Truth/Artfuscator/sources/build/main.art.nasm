section .data

reg_a: dd 0
reg_b: dd 0
reg_c: dd 0
reg_d: dd 0
reg_bp: dd 0
reg_sp: dd 0
reg_pc: dd 0

putc: dd 0
mem:
 dd 0x800000
 dd 0x400000
 dd 0x200000
 dd 0x100000
 dd 0x80000
 dd 0x40000
 dd 0x20000
 dd 0x10000
 dd 0x8000
 dd 0x4000
 dd 0x2000
 dd 0x1000
 dd 0x800
 dd 0x400
 dd 0x200
 dd 0x100
 dd 0x80
 dd 0x40
 dd 0x20
 dd 0x10
 dd 0x8
 dd 0x4
 dd 0x2
 dd 0x1
 dd 0x6e
 dd 0x6f
 dd 0x20
 dd 0x6d
 dd 0x65
 dd 0x6d
 dd 0x6f
 dd 0x72
 dd 0x79
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x0
 dd 0x1
 dd 0x2
 dd 0x3
 dd 0x4
 dd 0x5
 dd 0x6
 dd 0x7
 dd 0x8
 dd 0x9
 dd 0xa
 dd 0xb
 dd 0xc
 dd 0xd
 dd 0xe
 dd 0xf
 dd 0x10
 dd 0x11
 dd 0x12
 dd 0x13
 dd 0x14
 dd 0x15
 dd 0x16
 dd 0x17
 dd 0x18
 dd 0x19
 dd 0x1a
 dd 0x1b
 dd 0x1c
 dd 0x1d
 dd 0x1e
 dd 0x1f
 dd 0x20
 dd 0x21
 dd 0x22
 dd 0x23
 dd 0x24
 dd 0x25
 dd 0x26
 dd 0x27
 dd 0x28
 dd 0x29
 dd 0x2a
 dd 0x2b
 dd 0x2c
 dd 0x2d
 dd 0x2e
 dd 0x2f
 dd 0x30
 dd 0x31
 dd 0x32
 dd 0x33
 dd 0x34
 dd 0x35
 dd 0x36
 dd 0x37
 dd 0x38
 dd 0x39
 dd 0x3a
 dd 0x3b
 dd 0x3c
 dd 0x3d
 dd 0x3e
 dd 0x3f
 dd 0x40
 dd 0x61
 dd 0x62
 dd 0x63
 dd 0x64
 dd 0x65
 dd 0x66
 dd 0x67
 dd 0x68
 dd 0x69
 dd 0x6a
 dd 0x6b
 dd 0x6c
 dd 0x6d
 dd 0x6e
 dd 0x6f
 dd 0x70
 dd 0x71
 dd 0x72
 dd 0x73
 dd 0x74
 dd 0x75
 dd 0x76
 dd 0x77
 dd 0x78
 dd 0x79
 dd 0x7a
 dd 0x5b
 dd 0x5c
 dd 0x5d
 dd 0x5e
 dd 0x5f
 dd 0x60
 dd 0x61
 dd 0x62
 dd 0x63
 dd 0x64
 dd 0x65
 dd 0x66
 dd 0x67
 dd 0x68
 dd 0x69
 dd 0x6a
 dd 0x6b
 dd 0x6c
 dd 0x6d
 dd 0x6e
 dd 0x6f
 dd 0x70
 dd 0x71
 dd 0x72
 dd 0x73
 dd 0x74
 dd 0x75
 dd 0x76
 dd 0x77
 dd 0x78
 dd 0x79
 dd 0x7a
 dd 0x7b
 dd 0x7c
 dd 0x7d
 dd 0x7e
 dd 0x7f
 dd 0xffff80
 dd 0xffff81
 dd 0xffff82
 dd 0xffff83
 dd 0xffff84
 dd 0xffff85
 dd 0xffff86
 dd 0xffff87
 dd 0xffff88
 dd 0xffff89
 dd 0xffff8a
 dd 0xffff8b
 dd 0xffff8c
 dd 0xffff8d
 dd 0xffff8e
 dd 0xffff8f
 dd 0xffff90
 dd 0xffff91
 dd 0xffff92
 dd 0xffff93
 dd 0xffff94
 dd 0xffff95
 dd 0xffff96
 dd 0xffff97
 dd 0xffff98
 dd 0xffff99
 dd 0xffff9a
 dd 0xffff9b
 dd 0xffff9c
 dd 0xffff9d
 dd 0xffff9e
 dd 0xffff9f
 dd 0xffffa0
 dd 0xffffa1
 dd 0xffffa2
 dd 0xffffa3
 dd 0xffffa4
 dd 0xffffa5
 dd 0xffffa6
 dd 0xffffa7
 dd 0xffffa8
 dd 0xffffa9
 dd 0xffffaa
 dd 0xffffab
 dd 0xffffac
 dd 0xffffad
 dd 0xffffae
 dd 0xffffaf
 dd 0xffffb0
 dd 0xffffb1
 dd 0xffffb2
 dd 0xffffb3
 dd 0xffffb4
 dd 0xffffb5
 dd 0xffffb6
 dd 0xffffb7
 dd 0xffffb8
 dd 0xffffb9
 dd 0xffffba
 dd 0xffffbb
 dd 0xffffbc
 dd 0xffffbd
 dd 0xffffbe
 dd 0xffffbf
 dd 0xffffc0
 dd 0xffffc1
 dd 0xffffc2
 dd 0xffffc3
 dd 0xffffc4
 dd 0xffffc5
 dd 0xffffc6
 dd 0xffffc7
 dd 0xffffc8
 dd 0xffffc9
 dd 0xffffca
 dd 0xffffcb
 dd 0xffffcc
 dd 0xffffcd
 dd 0xffffce
 dd 0xffffcf
 dd 0xffffd0
 dd 0xffffd1
 dd 0xffffd2
 dd 0xffffd3
 dd 0xffffd4
 dd 0xffffd5
 dd 0xffffd6
 dd 0xffffd7
 dd 0xffffd8
 dd 0xffffd9
 dd 0xffffda
 dd 0xffffdb
 dd 0xffffdc
 dd 0xffffdd
 dd 0xffffde
 dd 0xffffdf
 dd 0xffffe0
 dd 0xffffe1
 dd 0xffffe2
 dd 0xffffe3
 dd 0xffffe4
 dd 0xffffe5
 dd 0xffffe6
 dd 0xffffe7
 dd 0xffffe8
 dd 0xffffe9
 dd 0xffffea
 dd 0xffffeb
 dd 0xffffec
 dd 0xffffed
 dd 0xffffee
 dd 0xffffef
 dd 0xfffff0
 dd 0xfffff1
 dd 0xfffff2
 dd 0xfffff3
 dd 0xfffff4
 dd 0xfffff5
 dd 0xfffff6
 dd 0xfffff7
 dd 0xfffff8
 dd 0xfffff9
 dd 0xfffffa
 dd 0xfffffb
 dd 0xfffffc
 dd 0xfffffd
 dd 0xfffffe
 dd 0xffffff
 dd 0x20
 dd 0x69
 dd 0x6e
 dd 0x20
 dd 0x0
 dd 0x3a
 dd 0x20
 dd 0x75
 dd 0x6e
 dd 0x6b
 dd 0x6e
 dd 0x6f
 dd 0x77
 dd 0x6e
 dd 0x20
 dd 0x66
 dd 0x6f
 dd 0x72
 dd 0x6d
 dd 0x61
 dd 0x74
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x1
 dd 0x1
 dd 0x1
 dd 0xffffff
 dd 0x0
 dd 0x55
 dd 0x73
 dd 0x61
 dd 0x67
 dd 0x65
 dd 0x3a
 dd 0x20
 dd 0x25
 dd 0x73
 dd 0x20
 dd 0x3c
 dd 0x6b
 dd 0x65
 dd 0x79
 dd 0x3e
 dd 0x0
 dd 0x152

mem1:
 dd 0x800000
 dd 0x400000
 dd 0x200000
 dd 0x100000
 dd 0x80000
 dd 0x40000
 dd 0x20000
 dd 0x10000
 dd 0x8000
 dd 0x4000
 dd 0x2000
 dd 0x1000
 dd 0x800
 dd 0x400
 dd 0x200
 dd 0x100
 dd 0x80
 dd 0x40
 dd 0x20
 dd 0x10
 dd 0x8
 dd 0x4
 dd 0x2
 dd 0x1
 dd 0x6e
 dd 0x6f
 dd 0x20
 dd 0x6d
 dd 0x65
 dd 0x6d
 dd 0x6f
 dd 0x72
 dd 0x79
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x25

mem2:
 dd 0x800000
 dd 0x400000
 dd 0x200000
 dd 0x100000
 dd 0x80000
 dd 0x40000
 dd 0x20000
 dd 0x10000
 dd 0x8000
 dd 0x4000
 dd 0x2000
 dd 0x1000
 dd 0x800
 dd 0x400
 dd 0x200
 dd 0x100
 dd 0x80
 dd 0x40
 dd 0x20
 dd 0x10
 dd 0x8
 dd 0x4
 dd 0x2
 dd 0x1
 dd 0x6e
 dd 0x6f
 dd 0x20
 dd 0x6d
 dd 0x65
 dd 0x6d
 dd 0x6f
 dd 0x72
 dd 0x79
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x25

mem3:
 dd 0x800000
 dd 0x400000
 dd 0x200000
 dd 0x100000
 dd 0x80000
 dd 0x40000
 dd 0x20000
 dd 0x10000
 dd 0x8000
 dd 0x4000
 dd 0x2000
 dd 0x1000
 dd 0x800
 dd 0x400
 dd 0x200
 dd 0x100
 dd 0x80
 dd 0x40
 dd 0x20
 dd 0x10
 dd 0x8
 dd 0x4
 dd 0x2
 dd 0x1
 dd 0x6e
 dd 0x6f
 dd 0x20
 dd 0x6d
 dd 0x65
 dd 0x6d
 dd 0x6f
 dd 0x72
 dd 0x79
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x25

mem4:
 dd 0x800000
 dd 0x400000
 dd 0x200000
 dd 0x100000
 dd 0x80000
 dd 0x40000
 dd 0x20000
 dd 0x10000
 dd 0x8000
 dd 0x4000
 dd 0x2000
 dd 0x1000
 dd 0x800
 dd 0x400
 dd 0x200
 dd 0x100
 dd 0x80
 dd 0x40
 dd 0x20
 dd 0x10
 dd 0x8
 dd 0x4
 dd 0x2
 dd 0x1
 dd 0x6e
 dd 0x6f
 dd 0x20
 dd 0x6d
 dd 0x65
 dd 0x6d
 dd 0x6f
 dd 0x72
 dd 0x79
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x0
 dd 0x1
 dd 0x2
 dd 0x3
 dd 0x4
 dd 0x5
 dd 0x6
 dd 0x7
 dd 0x8
 dd 0x9
 dd 0xa
 dd 0xb
 dd 0xc
 dd 0xd
 dd 0xe
 dd 0xf
 dd 0x10
 dd 0x11
 dd 0x12
 dd 0x13
 dd 0x14
 dd 0x15
 dd 0x16
 dd 0x17
 dd 0x18
 dd 0x19
 dd 0x1a
 dd 0x1b
 dd 0x1c
 dd 0x1d
 dd 0x1e
 dd 0x1f
 dd 0x20
 dd 0x21
 dd 0x22
 dd 0x23
 dd 0x24
 dd 0x25
 dd 0x26
 dd 0x27
 dd 0x28
 dd 0x29
 dd 0x2a
 dd 0x2b
 dd 0x2c
 dd 0x2d
 dd 0x2e
 dd 0x2f
 dd 0x30
 dd 0x31
 dd 0x32
 dd 0x33
 dd 0x34
 dd 0x35
 dd 0x36
 dd 0x37
 dd 0x38
 dd 0x39
 dd 0x3a
 dd 0x3b
 dd 0x3c
 dd 0x3d
 dd 0x3e
 dd 0x3f
 dd 0x40
 dd 0x61
 dd 0x62
 dd 0x63
 dd 0x64
 dd 0x65
 dd 0x66
 dd 0x67
 dd 0x68
 dd 0x69
 dd 0x6a
 dd 0x6b
 dd 0x6c
 dd 0x6d
 dd 0x6e
 dd 0x6f
 dd 0x70
 dd 0x71
 dd 0x72
 dd 0x73
 dd 0x74
 dd 0x75
 dd 0x76
 dd 0x77
 dd 0x78
 dd 0x79
 dd 0x7a
 dd 0x5b
 dd 0x5c
 dd 0x5d
 dd 0x5e
 dd 0x5f
 dd 0x60
 dd 0x61
 dd 0x62
 dd 0x63
 dd 0x64
 dd 0x65
 dd 0x66
 dd 0x67
 dd 0x68
 dd 0x69
 dd 0x6a
 dd 0x6b
 dd 0x6c
 dd 0x6d
 dd 0x6e
 dd 0x6f
 dd 0x70
 dd 0x71
 dd 0x72
 dd 0x73
 dd 0x74
 dd 0x75
 dd 0x76
 dd 0x77
 dd 0x78
 dd 0x79
 dd 0x7a
 dd 0x7b
 dd 0x7c
 dd 0x7d
 dd 0x7e
 dd 0x7f
 dd 0xffff80
 dd 0xffff81
 dd 0xffff82
 dd 0xffff83
 dd 0xffff84
 dd 0xffff85
 dd 0xffff86
 dd 0xffff87
 dd 0xffff88
 dd 0xffff89
 dd 0xffff8a
 dd 0xffff8b
 dd 0xffff8c
 dd 0xffff8d
 dd 0xffff8e
 dd 0xffff8f
 dd 0xffff90
 dd 0xffff91
 dd 0xffff92
 dd 0xffff93
 dd 0xffff94
 dd 0xffff95
 dd 0xffff96
 dd 0xffff97
 dd 0xffff98
 dd 0xffff99
 dd 0xffff9a
 dd 0xffff9b
 dd 0xffff9c
 dd 0xffff9d
 dd 0xffff9e
 dd 0xffff9f
 dd 0xffffa0
 dd 0xffffa1
 dd 0xffffa2
 dd 0xffffa3
 dd 0xffffa4
 dd 0xffffa5
 dd 0xffffa6
 dd 0xffffa7
 dd 0xffffa8
 dd 0xffffa9
 dd 0xffffaa
 dd 0xffffab
 dd 0xffffac
 dd 0xffffad
 dd 0xffffae
 dd 0xffffaf
 dd 0xffffb0
 dd 0xffffb1
 dd 0xffffb2
 dd 0xffffb3
 dd 0xffffb4
 dd 0xffffb5
 dd 0xffffb6
 dd 0xffffb7
 dd 0xffffb8
 dd 0xffffb9
 dd 0xffffba
 dd 0xffffbb
 dd 0xffffbc
 dd 0xffffbd
 dd 0xffffbe
 dd 0xffffbf
 dd 0xffffc0
 dd 0xffffc1
 dd 0xffffc2
 dd 0xffffc3
 dd 0xffffc4
 dd 0xffffc5
 dd 0xffffc6
 dd 0xffffc7
 dd 0xffffc8
 dd 0xffffc9
 dd 0xffffca
 dd 0xffffcb
 dd 0xffffcc
 dd 0xffffcd
 dd 0xffffce
 dd 0xffffcf
 dd 0xffffd0
 dd 0xffffd1
 dd 0xffffd2
 dd 0xffffd3
 dd 0xffffd4
 dd 0xffffd5
 dd 0xffffd6
 dd 0xffffd7
 dd 0xffffd8
 dd 0xffffd9
 dd 0xffffda
 dd 0xffffdb
 dd 0xffffdc
 dd 0xffffdd
 dd 0xffffde
 dd 0xffffdf
 dd 0xffffe0
 dd 0xffffe1
 dd 0xffffe2
 dd 0xffffe3
 dd 0xffffe4
 dd 0xffffe5
 dd 0xffffe6
 dd 0xffffe7
 dd 0xffffe8
 dd 0xffffe9
 dd 0xffffea
 dd 0xffffeb
 dd 0xffffec
 dd 0xffffed
 dd 0xffffee
 dd 0xffffef
 dd 0xfffff0
 dd 0xfffff1
 dd 0xfffff2
 dd 0xfffff3
 dd 0xfffff4
 dd 0xfffff5
 dd 0xfffff6
 dd 0xfffff7
 dd 0xfffff8
 dd 0xfffff9
 dd 0xfffffa
 dd 0xfffffb
 dd 0xfffffc
 dd 0xfffffd
 dd 0xfffffe
 dd 0xffffff
 dd 0x20
 dd 0x69
 dd 0x6e
 dd 0x20
 dd 0x0
 dd 0x3a
 dd 0x20
 dd 0x75
 dd 0x6e
 dd 0x6b
 dd 0x6e
 dd 0x6f
 dd 0x77
 dd 0x6e
 dd 0x20
 dd 0x66
 dd 0x6f
 dd 0x72
 dd 0x6d
 dd 0x61
 dd 0x74
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x1
 dd 0x1
 dd 0x1
 dd 0xffffff
 dd 0x0
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0xff
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x0
 dd 0x52a

mem5:
 dd 0x800000
 dd 0x400000
 dd 0x200000
 dd 0x100000
 dd 0x80000
 dd 0x40000
 dd 0x20000
 dd 0x10000
 dd 0x8000
 dd 0x4000
 dd 0x2000
 dd 0x1000
 dd 0x800
 dd 0x400
 dd 0x200
 dd 0x100
 dd 0x80
 dd 0x40
 dd 0x20
 dd 0x10
 dd 0x8
 dd 0x4
 dd 0x2
 dd 0x1
 dd 0x6e
 dd 0x6f
 dd 0x20
 dd 0x6d
 dd 0x65
 dd 0x6d
 dd 0x6f
 dd 0x72
 dd 0x79
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x0
 dd 0x1
 dd 0x2
 dd 0x3
 dd 0x4
 dd 0x5
 dd 0x6
 dd 0x7
 dd 0x8
 dd 0x9
 dd 0xa
 dd 0xb
 dd 0xc
 dd 0xd
 dd 0xe
 dd 0xf
 dd 0x10
 dd 0x11
 dd 0x12
 dd 0x13
 dd 0x14
 dd 0x15
 dd 0x16
 dd 0x17
 dd 0x18
 dd 0x19
 dd 0x1a
 dd 0x1b
 dd 0x1c
 dd 0x1d
 dd 0x1e
 dd 0x1f
 dd 0x20
 dd 0x21
 dd 0x22
 dd 0x23
 dd 0x24
 dd 0x25
 dd 0x26
 dd 0x27
 dd 0x28
 dd 0x29
 dd 0x2a
 dd 0x2b
 dd 0x2c
 dd 0x2d
 dd 0x2e
 dd 0x2f
 dd 0x30
 dd 0x31
 dd 0x32
 dd 0x33
 dd 0x34
 dd 0x35
 dd 0x36
 dd 0x37
 dd 0x38
 dd 0x39
 dd 0x3a
 dd 0x3b
 dd 0x3c
 dd 0x3d
 dd 0x3e
 dd 0x3f
 dd 0x40
 dd 0x61
 dd 0x62
 dd 0x63
 dd 0x64
 dd 0x65
 dd 0x66
 dd 0x67
 dd 0x68
 dd 0x69
 dd 0x6a
 dd 0x6b
 dd 0x6c
 dd 0x6d
 dd 0x6e
 dd 0x6f
 dd 0x70
 dd 0x71
 dd 0x72
 dd 0x73
 dd 0x74
 dd 0x75
 dd 0x76
 dd 0x77
 dd 0x78
 dd 0x79
 dd 0x7a
 dd 0x5b
 dd 0x5c
 dd 0x5d
 dd 0x5e
 dd 0x5f
 dd 0x60
 dd 0x61
 dd 0x62
 dd 0x63
 dd 0x64
 dd 0x65
 dd 0x66
 dd 0x67
 dd 0x68
 dd 0x69
 dd 0x6a
 dd 0x6b
 dd 0x6c
 dd 0x6d
 dd 0x6e
 dd 0x6f
 dd 0x70
 dd 0x71
 dd 0x72
 dd 0x73
 dd 0x74
 dd 0x75
 dd 0x76
 dd 0x77
 dd 0x78
 dd 0x79
 dd 0x7a
 dd 0x7b
 dd 0x7c
 dd 0x7d
 dd 0x7e
 dd 0x7f
 dd 0xffff80
 dd 0xffff81
 dd 0xffff82
 dd 0xffff83
 dd 0xffff84
 dd 0xffff85
 dd 0xffff86
 dd 0xffff87
 dd 0xffff88
 dd 0xffff89
 dd 0xffff8a
 dd 0xffff8b
 dd 0xffff8c
 dd 0xffff8d
 dd 0xffff8e
 dd 0xffff8f
 dd 0xffff90
 dd 0xffff91
 dd 0xffff92
 dd 0xffff93
 dd 0xffff94
 dd 0xffff95
 dd 0xffff96
 dd 0xffff97
 dd 0xffff98
 dd 0xffff99
 dd 0xffff9a
 dd 0xffff9b
 dd 0xffff9c
 dd 0xffff9d
 dd 0xffff9e
 dd 0xffff9f
 dd 0xffffa0
 dd 0xffffa1
 dd 0xffffa2
 dd 0xffffa3
 dd 0xffffa4
 dd 0xffffa5
 dd 0xffffa6
 dd 0xffffa7
 dd 0xffffa8
 dd 0xffffa9
 dd 0xffffaa
 dd 0xffffab
 dd 0xffffac
 dd 0xffffad
 dd 0xffffae
 dd 0xffffaf
 dd 0xffffb0
 dd 0xffffb1
 dd 0xffffb2
 dd 0xffffb3
 dd 0xffffb4
 dd 0xffffb5
 dd 0xffffb6
 dd 0xffffb7
 dd 0xffffb8
 dd 0xffffb9
 dd 0xffffba
 dd 0xffffbb
 dd 0xffffbc
 dd 0xffffbd
 dd 0xffffbe
 dd 0xffffbf
 dd 0xffffc0
 dd 0xffffc1
 dd 0xffffc2
 dd 0xffffc3
 dd 0xffffc4
 dd 0xffffc5
 dd 0xffffc6
 dd 0xffffc7
 dd 0xffffc8
 dd 0xffffc9
 dd 0xffffca
 dd 0xffffcb
 dd 0xffffcc
 dd 0xffffcd
 dd 0xffffce
 dd 0xffffcf
 dd 0xffffd0
 dd 0xffffd1
 dd 0xffffd2
 dd 0xffffd3
 dd 0xffffd4
 dd 0xffffd5
 dd 0xffffd6
 dd 0xffffd7
 dd 0xffffd8
 dd 0xffffd9
 dd 0xffffda
 dd 0xffffdb
 dd 0xffffdc
 dd 0xffffdd
 dd 0xffffde
 dd 0xffffdf
 dd 0xffffe0
 dd 0xffffe1
 dd 0xffffe2
 dd 0xffffe3
 dd 0xffffe4
 dd 0xffffe5
 dd 0xffffe6
 dd 0xffffe7
 dd 0xffffe8
 dd 0xffffe9
 dd 0xffffea
 dd 0xffffeb
 dd 0xffffec
 dd 0xffffed
 dd 0xffffee
 dd 0xffffef
 dd 0xfffff0
 dd 0xfffff1
 dd 0xfffff2
 dd 0xfffff3
 dd 0xfffff4
 dd 0xfffff5
 dd 0xfffff6
 dd 0xfffff7
 dd 0xfffff8
 dd 0xfffff9
 dd 0xfffffa
 dd 0xfffffb
 dd 0xfffffc
 dd 0xfffffd
 dd 0xfffffe
 dd 0xffffff
 dd 0x20
 dd 0x69
 dd 0x6e
 dd 0x20
 dd 0x0
 dd 0x3a
 dd 0x20
 dd 0x75
 dd 0x6e
 dd 0x6b
 dd 0x6e
 dd 0x6f
 dd 0x77
 dd 0x6e
 dd 0x20
 dd 0x66
 dd 0x6f
 dd 0x72
 dd 0x6d
 dd 0x61
 dd 0x74
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x1
 dd 0x1
 dd 0x1
 dd 0xffffff
 dd 0x0
 dd 0x49
 dd 0x20
 dd 0x73
 dd 0x65
 dd 0x65
 dd 0x20
 dd 0x79
 dd 0x6f
 dd 0x75
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x14e
 times 0xfffeb3 dd 0



buf: times 0x1000 dd 0

SECTION .bss
argc        resd 1
argv        resd 1
total_len   resd 1


section .text
global _start
_start:

;;;        ==== ASM ARGS ===== 

; args_copy.asm (NASM, 32-bit Linux)
; Allocates buffer with mmap2 and copies argv strings (NUL-terminated, back-to-back).
; On exit: EAX = buffer address, EDX = total bytes copied.


    ; Stack layout at process start:
    ; [esp+0] = argc
    ; [esp+4] = argv[0] (char*)
    ; [esp+8] = argv[1]
    ; ...
    ; Grab argc and argv base.
    mov     eax, [esp]        ; argc
    lea     ebx, [esp+4]      ; &argv[0]
    mov     [argc], eax
    mov     [argv], ebx

    ; ------------------------------------------------------------
    ; 1) Compute total size = sum(len(argv[i]) + 1 for the '\0')
    ; ------------------------------------------------------------
    xor     ecx, ecx          ; ecx = i = 0
    xor     edi, edi          ; edi = total_len = 0

.len_loop:
    cmp     ecx, [argc]
    jge     .len_done

    mov     ebx, [argv]
    mov     esi, [ebx + ecx*4]    ; esi = argv[i]
    xor     eax, eax              ; eax = current length
.count_chars:
    cmp     byte [esi+eax], 0
    je      .len_add
    inc     eax
    jmp     .count_chars

.len_add:
    add     eax, 1            ; include the trailing '\0'
    add     edi, eax          ; total_len += (len+1)
    inc     ecx
    jmp     .len_loop

.len_done:
    mov     [total_len], edi

    ; ------------------------------------------------------------
    ; 2) mmap2 to allocate buffer (RW, private, anonymous)
    ;    void* mmap2(NULL, len, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANON, -1, 0)
    ;    eax=192 (SYS_mmap2), ebx=addr, ecx=len, edx=prot, esi=flags, edi=fd, ebp=offset
    ; ------------------------------------------------------------
    ; xor     ebx, ebx                  ; addr = NULL
    ; mov     ecx, [total_len]          ; length
    ; mov     edx, 0x3                  ; PROT_READ(1) | PROT_WRITE(2)
    ; mov     esi, 0x22                 ; MAP_PRIVATE(0x2) | MAP_ANONYMOUS(0x20)
    ; mov     edi, -1                   ; fd = -1
    ; xor     ebp, ebp                  ; pgoffset = 0
    ; mov     eax, 192                  ; SYS_mmap2 on i386
    ; int     0x80
    ; ; On success, EAX = buf; on error, EAX = -errno
    ; mov     [buf], eax

mine:
    NOP
    ; lea edi, dword [buf]
    ;mov dword [mem4 + 321 * 4], eax
    ; ------------------------------------------------------------
    ; 3) Copy argv[i] strings (including '\0') into the buffer
    ;    destination grows sequentially.
    ; ------------------------------------------------------------
    lea     edi, dword [mem4 + 321 * 4]            ; destination pointer
    xor     ecx, ecx              ; i = 0

    cld                         ; make sure direction flag is clear

  .copy_arg_loop:
      cmp     ecx, [argc]
      jge     .done_copy

      mov     ebx, [argv]
      mov     esi, [ebx + ecx*4]  ; ESI = argv[i] (byte string, e.g., ASCII/UTF-8)

  .copy_char_utf32:
      lodsb                       ; AL = *ESI++, read one source byte
      movzx   eax, al             ; EAX = 0x000000XX
      stosd                       ; store 4 bytes: XX 00 00 00 (UTF-32-LE code unit)
      test    al, al
      jne     .copy_char_utf32    ; keep going until we just stored the NUL (00 00 00 00)

      inc     ecx
      jmp     .copy_arg_loop

  .done_copy:
    nop



;;;;       ==== ASM END ARGS ====
 mov ebx, 0x1 ; fd
 mov edx, 1 ; len
 mov edi, 0
 mov eax, 1

; ----- Start of 0 -----
func_0:
 PCJMP_f0:
  cmp eax, 1
  je _PCJMP_f0
  ret
 _PCJMP_f0:
  pop eax
  mov eax, [JMP_TABLE_f0 + 4*edi]
  sub eax, 0x0badf00d
  jz BBf0_0
  jmp eax
BBf0_0:
 ; op: JMP
 mov edi, 0x269
 mov eax, 1
 call PCJMP_f0

BBf0_1:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x34
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffd0
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_2:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffe8
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffce
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffce
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0x4
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_3:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffce
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_4:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x6
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_5:
 ; op: JMP
 mov edi, 0x8
 mov eax, 1
 call PCJMP_f0

BBf0_6:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffd0
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffd0
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffd0
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffce
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_7:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x2
 mov eax, 1
 call PCJMP_f0

BBf0_8:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcd
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_9:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffe8
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0xb
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_10:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffd0
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_11:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0xd
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_12:
 ; op: JMP
 mov edi, 0xe
 mov eax, 1
 call PCJMP_f0

BBf0_13:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: SUB
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x9
 mov eax, 1
 call PCJMP_f0

BBf0_14:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_15:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x35
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x11
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_16:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_17:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x13
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_18:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_19:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x15
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_20:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_21:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_22:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffe5
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffcd
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0x18
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_23:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_24:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_25:
 ; op: JMP
 mov edi, 0x1c
 mov eax, 1
 call PCJMP_f0

BBf0_26:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_27:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x16
 mov eax, 1
 call PCJMP_f0

BBf0_28:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcb
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_29:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffcd
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1f
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_30:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffe5
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcb
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffcd
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_31:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x21
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_32:
 ; op: JMP
 mov edi, 0x22
 mov eax, 1
 call PCJMP_f0

BBf0_33:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: SUB
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x1d
 mov eax, 1
 call PCJMP_f0

BBf0_34:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffcb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_35:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_36:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x26
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_37:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_38:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xfffffe
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x27
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f0

BBf0_39:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_40:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_41:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xfffffe
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x2a
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f0

BBf0_42:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_43:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_44:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x5
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_45:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x18
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x2f
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_46:
 ; op: JMP
 mov edi, 0x30
 mov eax, 1
 call PCJMP_f0

BBf0_47:
 ; op: JMP
 mov edi, 0x3b
 mov eax, 1
 call PCJMP_f0

BBf0_48:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x32
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_49:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: JMP
 mov edi, 0x33
 mov eax, 1
 call PCJMP_f0

BBf0_50:
 ; op: MOV
 mov dword [reg_a], 0x0

BBf0_51:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x35
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_52:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: JMP
 mov edi, 0x36
 mov eax, 1
 call PCJMP_f0

BBf0_53:
 ; op: MOV
 mov dword [reg_a], 0x0

BBf0_54:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x0
 ; op: JMPc
 mov edi, 0x38
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_55:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_56:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x3a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_57:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_58:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x2d
 mov eax, 1
 call PCJMP_f0

BBf0_59:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_60:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_61:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x5
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_62:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x18
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x40
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_63:
 ; op: JMP
 mov edi, 0x41
 mov eax, 1
 call PCJMP_f0

BBf0_64:
 ; op: JMP
 mov edi, 0x4c
 mov eax, 1
 call PCJMP_f0

BBf0_65:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x43
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_66:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: JMP
 mov edi, 0x44
 mov eax, 1
 call PCJMP_f0

BBf0_67:
 ; op: MOV
 mov dword [reg_a], 0x0

BBf0_68:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x46
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_69:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: JMP
 mov edi, 0x47
 mov eax, 1
 call PCJMP_f0

BBf0_70:
 ; op: MOV
 mov dword [reg_a], 0x0

BBf0_71:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0x49
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_72:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_73:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x4b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_74:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_75:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x3e
 mov eax, 1
 call PCJMP_f0

BBf0_76:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_77:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_78:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x5
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_79:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x18
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x51
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_80:
 ; op: JMP
 mov edi, 0x52
 mov eax, 1
 call PCJMP_f0

BBf0_81:
 ; op: JMP
 mov edi, 0x5b
 mov eax, 1
 call PCJMP_f0

BBf0_82:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x54
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_83:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: JMP
 mov edi, 0x55
 mov eax, 1
 call PCJMP_f0

BBf0_84:
 ; op: MOV
 mov dword [reg_a], 0x0

BBf0_85:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x57
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_86:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: JMP
 mov edi, 0x58
 mov eax, 1
 call PCJMP_f0

BBf0_87:
 ; op: MOV
 mov dword [reg_a], 0x0

BBf0_88:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x5a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_89:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_90:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x4f
 mov eax, 1
 call PCJMP_f0

BBf0_91:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_92:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_93:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_94:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x18
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x60
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_95:
 ; op: JMP
 mov edi, 0x61
 mov eax, 1
 call PCJMP_f0

BBf0_96:
 ; op: JMP
 mov edi, 0x67
 mov eax, 1
 call PCJMP_f0

BBf0_97:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x63
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_98:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: JMP
 mov edi, 0x64
 mov eax, 1
 call PCJMP_f0

BBf0_99:
 ; op: MOV
 mov dword [reg_a], 0x0

BBf0_100:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: CMP
 cmp dword [reg_a], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x66
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_101:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_102:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x5e
 mov eax, 1
 call PCJMP_f0

BBf0_103:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_104:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_105:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_106:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x18
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x6c
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_107:
 ; op: JMP
 mov edi, 0x6d
 mov eax, 1
 call PCJMP_f0

BBf0_108:
 ; op: JMP
 mov edi, 0x73
 mov eax, 1
 call PCJMP_f0

BBf0_109:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x6f
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_110:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: JMP
 mov edi, 0x70
 mov eax, 1
 call PCJMP_f0

BBf0_111:
 ; op: MOV
 mov dword [reg_a], 0x0

BBf0_112:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x72
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_113:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_114:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x6a
 mov eax, 1
 call PCJMP_f0

BBf0_115:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_116:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_117:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_118:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x18
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x78
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_119:
 ; op: JMP
 mov edi, 0x79
 mov eax, 1
 call PCJMP_f0

BBf0_120:
 ; op: JMP
 mov edi, 0x7f
 mov eax, 1
 call PCJMP_f0

BBf0_121:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x7b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_122:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: JMP
 mov edi, 0x7c
 mov eax, 1
 call PCJMP_f0

BBf0_123:
 ; op: MOV
 mov dword [reg_a], 0x0

BBf0_124:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x7e
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_125:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_126:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x76
 mov eax, 1
 call PCJMP_f0

BBf0_127:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_128:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_129:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax

BBf0_130:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x84
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_131:
 ; op: JMP
 mov edi, 0x85
 mov eax, 1
 call PCJMP_f0

BBf0_132:
 ; op: JMP
 mov edi, 0x87
 mov eax, 1
 call PCJMP_f0

BBf0_133:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: PUTC
 mov eax, 0x4
 mov ecx, reg_a
 int 0x80
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_134:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x82
 mov eax, 1
 call PCJMP_f0

BBf0_135:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_136:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_137:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: SUB
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xa
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x8a
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f0

BBf0_138:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x30
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xa
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x8b
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f0

BBf0_139:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x8d
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_140:
 ; op: JMP
 mov edi, 0x89
 mov eax, 1
 call PCJMP_f0

BBf0_141:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_142:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_143:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x20
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffe0
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x20
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x90
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f0

BBf0_144:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x91
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f0

BBf0_145:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_146:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x94
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_147:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_148:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: SUB
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x10
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x95
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f0

BBf0_149:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xa
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x97
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_150:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x30
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: JMP
 mov edi, 0x98
 mov eax, 1
 call PCJMP_f0

BBf0_151:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xa
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x61
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff

BBf0_152:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x10
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x99
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f0

BBf0_153:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x9b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_154:
 ; op: JMP
 mov edi, 0x94
 mov eax, 1
 call PCJMP_f0

BBf0_155:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x9d
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_156:
 ; op: MOV
 mov dword [reg_a], 0x2d
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: SUB
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_157:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_158:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_159:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xc
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xa1
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_160:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xa
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_161:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xa3
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_162:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xd
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_163:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xa5
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_164:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x9
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_165:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xa7
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_166:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xb
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_167:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xa9
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_168:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x20
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_169:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_170:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_171:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_a], 0x30
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x0
 ; op: JMPc
 mov edi, 0xad
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_172:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x39
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_173:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_174:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_175:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xb0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f0

BBf0_176:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xb4
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_177:
 ; op: MOV
 mov dword [reg_a], 0x61
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x0
 ; op: JMPc
 mov edi, 0xb3
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_178:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x66
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_179:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_180:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xb8
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_181:
 ; op: MOV
 mov dword [reg_a], 0x41
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x0
 ; op: JMPc
 mov edi, 0xb7
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_182:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x46
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_183:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_184:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_185:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_186:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_a], 0x41
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x0
 ; op: JMPc
 mov edi, 0xbc
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_187:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x5a
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_188:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_189:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_190:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_a], 0x61
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x0
 ; op: JMPc
 mov edi, 0xc0
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_191:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x7a
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_192:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xc4
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_193:
 ; op: MOV
 mov dword [reg_a], 0x41
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x0
 ; op: JMPc
 mov edi, 0xc3
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_194:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x5a
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_195:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_196:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_197:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_198:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xc7
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f0

BBf0_199:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xca
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_200:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xc9
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f0

BBf0_201:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_202:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_203:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_204:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xcd
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f0

BBf0_205:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xd1
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_206:
 ; op: MOV
 mov dword [reg_a], 0x20
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x0
 ; op: JMPc
 mov edi, 0xd0
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_207:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x7f
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_208:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_209:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_210:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_211:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: EXIT
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_212:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov dword [reg_b], 0x151
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_b], 0x151
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x151
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_b], 0x151
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0xd7
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_213:
 ; op: MOV
 mov dword [reg_a], 0x18
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xd6
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f0

BBf0_214:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: EXIT
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_215:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_216:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_217:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xda
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f0

BBf0_218:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xdb
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f0

BBf0_219:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_220:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_221:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_222:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x7
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xe0
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_223:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_224:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xe2
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_225:
 ; op: MOV
 mov dword [reg_a], 0x24
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_226:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0xe6
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_227:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0xe5
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_228:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_229:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_230:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_231:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xe8
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f0

BBf0_232:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMPc
 mov edi, 0xea
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_233:
 ; op: JMP
 mov edi, 0xe7
 mov eax, 1
 call PCJMP_f0

BBf0_234:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x2d
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0xec
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_235:
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0xee
 mov eax, 1
 call PCJMP_f0

BBf0_236:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x2b
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0xee
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_237:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_238:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xf0
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_239:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x10
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_240:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x0
 ; op: JMPc
 mov edi, 0xf2
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_241:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x30
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_242:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x0
 ; op: JMPc
 mov edi, 0xf6
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_243:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x78
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0xf5
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_244:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x58
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_245:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_246:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0xf8
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_247:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x2
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x10
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_248:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0xfd
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_249:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x30
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0xfb
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_250:
 ; op: MOV
 mov dword [reg_a], 0x8
 ; op: JMP
 mov edi, 0xfc
 mov eax, 1
 call PCJMP_f0

BBf0_251:
 ; op: MOV
 mov dword [reg_a], 0xa

BBf0_252:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_253:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x101
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_254:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffff9
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x100
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_255:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffff9
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffff9
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_256:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffff9
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffff9
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_257:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_258:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x103
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f0

BBf0_259:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMPc
 mov edi, 0x105
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_260:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x30
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f0

BBf0_261:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x106
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f0

BBf0_262:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMPc
 mov edi, 0x10c
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_263:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x108
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xba
 mov eax, 1
 call PCJMP_f0

BBf0_264:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMPc
 mov edi, 0x10a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_265:
 ; op: MOV
 mov dword [reg_a], 0x41
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xa
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: JMP
 mov edi, 0x10b
 mov eax, 1
 call PCJMP_f0

BBf0_266:
 ; op: MOV
 mov dword [reg_a], 0x61
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xa
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff

BBf0_267:
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f0

BBf0_268:
 ; op: JMP
 mov edi, 0x117
 mov eax, 1
 call PCJMP_f0

BBf0_269:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x10f
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_270:
 ; op: JMP
 mov edi, 0x117
 mov eax, 1
 call PCJMP_f0

BBf0_271:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x111
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_272:
 ; op: JMP
 mov edi, 0x116
 mov eax, 1
 call PCJMP_f0

BBf0_273:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x114
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_274:
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x113
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f0

BBf0_275:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x116
 mov eax, 1
 call PCJMP_f0

BBf0_276:
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x115
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f0

BBf0_277:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_278:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x102
 mov eax, 1
 call PCJMP_f0

BBf0_279:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x11c
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_280:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x11a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_281:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: JMP
 mov edi, 0x11b
 mov eax, 1
 call PCJMP_f0

BBf0_282:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax

BBf0_283:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_284:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_285:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_286:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x11f
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f0

BBf0_287:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_288:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_289:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x122
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f0

BBf0_290:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_291:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_292:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x125
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f0

BBf0_293:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_294:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_295:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_296:
 ; op: MOV
 mov dword [reg_a], 0x30
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x0
 ; op: JMPc
 mov edi, 0x12a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_297:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x39
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_298:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x12e
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_299:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x3
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x12c
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f0

BBf0_300:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x12d
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f0

BBf0_301:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x30
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x12f
 mov eax, 1
 call PCJMP_f0

BBf0_302:
 ; op: JMP
 mov edi, 0x130
 mov eax, 1
 call PCJMP_f0

BBf0_303:
 ; op: JMP
 mov edi, 0x128
 mov eax, 1
 call PCJMP_f0

BBf0_304:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_305:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_306:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_307:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_308:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x6
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x136
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_309:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_310:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x2
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x137
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f0

BBf0_311:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x138
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f0

BBf0_312:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x139
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f0

BBf0_313:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_314:
 ; op: MOV
 mov dword [reg_a], 0x8000
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: MOV
 mov dword [reg_a], 0x13b
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, dword [reg_c]
 mov eax, 1
 call PCJMP_f0

BBf0_315:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x13d
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_316:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x13e
 mov eax, 1
 call PCJMP_f0

BBf0_317:
 ; op: JMP
 mov edi, 0x13f
 mov eax, 1
 call PCJMP_f0

BBf0_318:
 ; op: JMP
 mov edi, 0x13a
 mov eax, 1
 call PCJMP_f0

BBf0_319:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: MOV
 mov dword [reg_a], 0x140
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, dword [reg_c]
 mov eax, 1
 call PCJMP_f0

BBf0_320:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x8000
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x142
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_321:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x143
 mov eax, 1
 call PCJMP_f0

BBf0_322:
 ; op: JMP
 mov edi, 0x144
 mov eax, 1
 call PCJMP_f0

BBf0_323:
 ; op: JMP
 mov edi, 0x13f
 mov eax, 1
 call PCJMP_f0

BBf0_324:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x146
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_325:
 ; op: JMP
 mov edi, 0x152
 mov eax, 1
 call PCJMP_f0

BBf0_326:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_327:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x149
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_328:
 ; op: JMP
 mov edi, 0x14a
 mov eax, 1
 call PCJMP_f0

BBf0_329:
 ; op: JMP
 mov edi, 0x14c
 mov eax, 1
 call PCJMP_f0

BBf0_330:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_331:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x147
 mov eax, 1
 call PCJMP_f0

BBf0_332:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x14e
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_333:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x150
 mov eax, 1
 call PCJMP_f0

BBf0_334:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x150
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_335:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_336:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_337:
 ; op: JMP
 mov edi, 0x13a
 mov eax, 1
 call PCJMP_f0

BBf0_338:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x153
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f0

BBf0_339:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x154
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f0

BBf0_340:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x155
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f0

BBf0_341:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x156
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f0

BBf0_342:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x157
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f0

BBf0_343:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_344:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_345:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x15b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_346:
 ; op: JMP
 mov edi, 0x15c
 mov eax, 1
 call PCJMP_f0

BBf0_347:
 ; op: JMP
 mov edi, 0x15e
 mov eax, 1
 call PCJMP_f0

BBf0_348:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_349:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x159
 mov eax, 1
 call PCJMP_f0

BBf0_350:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_351:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_352:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_353:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x163
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_354:
 ; op: JMP
 mov edi, 0x164
 mov eax, 1
 call PCJMP_f0

BBf0_355:
 ; op: JMP
 mov edi, 0x166
 mov eax, 1
 call PCJMP_f0

BBf0_356:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_357:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x161
 mov eax, 1
 call PCJMP_f0

BBf0_358:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_359:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_360:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_361:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x16b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_362:
 ; op: JMP
 mov edi, 0x16c
 mov eax, 1
 call PCJMP_f0

BBf0_363:
 ; op: JMP
 mov edi, 0x16d
 mov eax, 1
 call PCJMP_f0

BBf0_364:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x169
 mov eax, 1
 call PCJMP_f0

BBf0_365:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_366:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_367:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_368:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x172
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_369:
 ; op: JMP
 mov edi, 0x173
 mov eax, 1
 call PCJMP_f0

BBf0_370:
 ; op: JMP
 mov edi, 0x174
 mov eax, 1
 call PCJMP_f0

BBf0_371:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x170
 mov eax, 1
 call PCJMP_f0

BBf0_372:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x176
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_373:
 ; op: JMP
 mov edi, 0x177
 mov eax, 1
 call PCJMP_f0

BBf0_374:
 ; op: JMP
 mov edi, 0x179
 mov eax, 1
 call PCJMP_f0

BBf0_375:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_376:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x174
 mov eax, 1
 call PCJMP_f0

BBf0_377:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_378:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_379:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_380:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x17e
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_381:
 ; op: JMP
 mov edi, 0x17f
 mov eax, 1
 call PCJMP_f0

BBf0_382:
 ; op: JMP
 mov edi, 0x181
 mov eax, 1
 call PCJMP_f0

BBf0_383:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_384:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x17c
 mov eax, 1
 call PCJMP_f0

BBf0_385:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_386:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_387:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax

BBf0_388:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0x186
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_389:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_390:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x188
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_391:
 ; op: JMP
 mov edi, 0x189
 mov eax, 1
 call PCJMP_f0

BBf0_392:
 ; op: JMP
 mov edi, 0x18e
 mov eax, 1
 call PCJMP_f0

BBf0_393:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x18b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_394:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_395:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x18d
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_396:
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_397:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x184
 mov eax, 1
 call PCJMP_f0

BBf0_398:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_399:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_400:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_401:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x1
 ; op: JMPc
 mov edi, 0x193
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_402:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_403:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x0
 ; op: JMPc
 mov edi, 0x195
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_404:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_405:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x197
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_406:
 ; op: JMP
 mov edi, 0x198
 mov eax, 1
 call PCJMP_f0

BBf0_407:
 ; op: JMP
 mov edi, 0x19d
 mov eax, 1
 call PCJMP_f0

BBf0_408:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x19a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_409:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_410:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x19c
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_411:
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_412:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x191
 mov eax, 1
 call PCJMP_f0

BBf0_413:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_414:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_415:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax

BBf0_416:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1a2
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_417:
 ; op: JMP
 mov edi, 0x1a3
 mov eax, 1
 call PCJMP_f0

BBf0_418:
 ; op: JMP
 mov edi, 0x1a6
 mov eax, 1
 call PCJMP_f0

BBf0_419:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1a5
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_420:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_421:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x1a0
 mov eax, 1
 call PCJMP_f0

BBf0_422:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_423:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_424:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1a9
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x168
 mov eax, 1
 call PCJMP_f0

BBf0_425:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1aa
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f0

BBf0_426:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1ab
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f0

BBf0_427:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_428:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_429:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x0
 ; op: JMPc
 mov edi, 0x1af
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_430:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: CMP
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax

BBf0_431:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1b1
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_432:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_433:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_434:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1b4
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_435:
 ; op: JMP
 mov edi, 0x1b5
 mov eax, 1
 call PCJMP_f0

BBf0_436:
 ; op: JMP
 mov edi, 0x1b8
 mov eax, 1
 call PCJMP_f0

BBf0_437:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1b7
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_438:
 ; op: JMP
 mov edi, 0x1b1
 mov eax, 1
 call PCJMP_f0

BBf0_439:
 ; op: JMP
 mov edi, 0x1b2
 mov eax, 1
 call PCJMP_f0

BBf0_440:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1ba
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_441:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_442:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_443:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_444:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1c1
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_445:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1bf
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_446:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x1c0
 mov eax, 1
 call PCJMP_f0

BBf0_447:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_448:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_449:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1c3
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_450:
 ; op: JMP
 mov edi, 0x1bc
 mov eax, 1
 call PCJMP_f0

BBf0_451:
 ; op: JMP
 mov edi, 0x1bb
 mov eax, 1
 call PCJMP_f0

BBf0_452:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_453:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov dword [reg_a], 0x24
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_454:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1ca
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_455:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1c9
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_456:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_457:
 ; op: JMP
 mov edi, 0x1cb
 mov eax, 1
 call PCJMP_f0

BBf0_458:
 ; op: JMP
 mov edi, 0x1cc
 mov eax, 1
 call PCJMP_f0

BBf0_459:
 ; op: JMP
 mov edi, 0x1c6
 mov eax, 1
 call PCJMP_f0

BBf0_460:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: SUB
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_461:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_462:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1d6
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_463:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov dword [reg_a], 0x24
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_464:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1d2
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_465:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: SUB
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_466:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1d4
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_467:
 ; op: JMP
 mov edi, 0x1d6
 mov eax, 1
 call PCJMP_f0

BBf0_468:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: SUB
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1d6
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_469:
 ; op: JMP
 mov edi, 0x1d0
 mov eax, 1
 call PCJMP_f0

BBf0_470:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_471:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_472:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff

BBf0_473:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1e2
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_474:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_475:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1dd
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_476:
 ; op: JMP
 mov edi, 0x1de
 mov eax, 1
 call PCJMP_f0

BBf0_477:
 ; op: JMP
 mov edi, 0x1e1
 mov eax, 1
 call PCJMP_f0

BBf0_478:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1e0
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_479:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_480:
 ; op: JMP
 mov edi, 0x1db
 mov eax, 1
 call PCJMP_f0

BBf0_481:
 ; op: JMP
 mov edi, 0x1e3
 mov eax, 1
 call PCJMP_f0

BBf0_482:
 ; op: JMP
 mov edi, 0x1e4
 mov eax, 1
 call PCJMP_f0

BBf0_483:
 ; op: JMP
 mov edi, 0x1d9
 mov eax, 1
 call PCJMP_f0

BBf0_484:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_485:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_486:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1e7
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f0

BBf0_487:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0xa
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: PUTC
 mov eax, 0x4
 mov ecx, reg_a
 int 0x80
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_488:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x26
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_489:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1eb
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_490:
 ; op: JMP
 mov edi, 0x1ec
 mov eax, 1
 call PCJMP_f0

BBf0_491:
 ; op: JMP
 mov edi, 0x216
 mov eax, 1
 call PCJMP_f0

BBf0_492:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x25
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1f2
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_493:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: CMP
 cmp dword [reg_a], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1f1
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_494:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1f0
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_495:
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x1f1
 mov eax, 1
 call PCJMP_f0

BBf0_496:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_497:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x215
 mov eax, 1
 call PCJMP_f0

BBf0_498:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdb
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x6c
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1f4
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_499:
 ; op: JMP
 mov edi, 0x201
 mov eax, 1
 call PCJMP_f0

BBf0_500:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x64
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1f6
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_501:
 ; op: JMP
 mov edi, 0x202
 mov eax, 1
 call PCJMP_f0

BBf0_502:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x75
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1f8
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_503:
 ; op: JMP
 mov edi, 0x202
 mov eax, 1
 call PCJMP_f0

BBf0_504:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x78
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1fa
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_505:
 ; op: JMP
 mov edi, 0x204
 mov eax, 1
 call PCJMP_f0

BBf0_506:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x73
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1fc
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_507:
 ; op: JMP
 mov edi, 0x206
 mov eax, 1
 call PCJMP_f0

BBf0_508:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x63
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x1fe
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_509:
 ; op: JMP
 mov edi, 0x207
 mov eax, 1
 call PCJMP_f0

BBf0_510:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdb
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x25
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x200
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_511:
 ; op: JMP
 mov edi, 0x208
 mov eax, 1
 call PCJMP_f0

BBf0_512:
 ; op: JMP
 mov edi, 0x209
 mov eax, 1
 call PCJMP_f0

BBf0_513:
 ; op: JMP
 mov edi, 0x1f2
 mov eax, 1
 call PCJMP_f0

BBf0_514:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x20
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x203
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f0

BBf0_515:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f0

BBf0_516:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x20
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x205
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x92
 mov eax, 1
 call PCJMP_f0

BBf0_517:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f0

BBf0_518:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f0

BBf0_519:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f0

BBf0_520:
 ; op: MOV
 mov dword [reg_a], 0x25
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: JMP
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f0

BBf0_521:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x20a
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x8f
 mov eax, 1
 call PCJMP_f0

BBf0_522:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x124
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x20b
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f0

BBf0_523:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x20c
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f0

BBf0_524:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x129
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x20d
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f0

BBf0_525:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: EXIT
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_526:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x20f
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x168
 mov eax, 1
 call PCJMP_f0

BBf0_527:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffda
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: CMP
 cmp dword [reg_a], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x214
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_528:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffda
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x212
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_529:
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x214
 mov eax, 1
 call PCJMP_f0

BBf0_530:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x213
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f0

BBf0_531:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff

BBf0_532:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffda
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_533:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x1e9
 mov eax, 1
 call PCJMP_f0

BBf0_534:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_535:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_536:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x100
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x219
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f0

BBf0_537:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_538:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_539:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0x4
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x21c
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f0

BBf0_540:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_541:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_542:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0x3
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x21f
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x218
 mov eax, 1
 call PCJMP_f0

BBf0_543:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_544:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_545:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x101
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x100
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffff00
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x222
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f0

BBf0_546:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffeff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffff00
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffeff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0xffff00
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x223
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f0

BBf0_547:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffeff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_548:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_549:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0x2
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x226
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f0

BBf0_550:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_551:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_552:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_a], 0x3
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x229
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f0

BBf0_553:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_554:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x22b
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f0

BBf0_555:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_556:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_557:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_558:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_559:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_b], 0x13c
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_560:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_561:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_562:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_563:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x234
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f0

BBf0_564:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_565:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x237
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_566:
 ; op: JMP
 mov edi, 0x238
 mov eax, 1
 call PCJMP_f0

BBf0_567:
 ; op: JMP
 mov edi, 0x23a
 mov eax, 1
 call PCJMP_f0

BBf0_568:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: PUTC
 mov eax, 0x4
 mov ecx, reg_a
 int 0x80
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff

BBf0_569:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, 0x235
 mov eax, 1
 call PCJMP_f0

BBf0_570:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_571:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_572:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x23d
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f0

BBf0_573:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_574:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_b], 0x13f
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x244
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_575:
 ; op: MOV
 mov dword [reg_b], 0x140
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x241
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_576:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_577:
 ; op: GETC
 mov eax, 0x3
 mov ecx, reg_a
 int 0x80
 ; op: JMPc
 mov edi, 0x243
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f0

BBf0_578:
 ; op: MOV
 mov dword [reg_a], 0xffffff

BBf0_579:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x140
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_580:
 ; op: MOV
 mov dword [reg_b], 0x13f
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov dword [reg_b], 0x13f
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_581:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_582:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x247
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f0

BBf0_583:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_584:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_585:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_b], 0x13f
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x24b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_586:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_b], 0x13f
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_587:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_588:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_589:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: PUTC
 mov eax, 0x4
 mov ecx, reg_a
 int 0x80
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_590:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_591:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: PUTC
 mov eax, 0x4
 mov ecx, reg_a
 int 0x80
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_592:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_593:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: SUB
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x253
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_594:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_595:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax

BBf0_596:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x25d
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_597:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x256
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f0

BBf0_598:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: SUB
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x25a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_599:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x259
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_600:
 ; op: JMP
 mov edi, 0x25f
 mov eax, 1
 call PCJMP_f0

BBf0_601:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_602:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: ADD
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xa
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x25c
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_603:
 ; op: JMP
 mov edi, 0x25f
 mov eax, 1
 call PCJMP_f0

BBf0_604:
 ; op: JMP
 mov edi, 0x25e
 mov eax, 1
 call PCJMP_f0

BBf0_605:
 ; op: JMP
 mov edi, 0x25f
 mov eax, 1
 call PCJMP_f0

BBf0_606:
 ; op: JMP
 mov edi, 0x254
 mov eax, 1
 call PCJMP_f0

BBf0_607:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_608:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_609:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_a], 0x1111
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_610:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_611:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_a], 0x2222
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_612:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_613:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_a], 0x3333
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_614:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_615:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_a], 0x4444
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_616:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_617:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x1; argc == 1
 ; op: MOV
 mov eax, dword [argc]
 mov dword [reg_b], eax
 ; op: LOAD
 mov dword [reg_a], 1
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [argc]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x26c
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_618:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: ADD
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: MOV
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x141
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x26b
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x225
 mov eax, 1
 call PCJMP_f0

BBf0_619:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x1330
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: EXIT
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 ; op: JMP
 mov edi, 0x278
 mov eax, 1
 call PCJMP_f0

BBf0_620:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 3 ; argc == 3 
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov dword [reg_a], 3
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [argc]
 cmp dword [reg_a], eax

 je _start2  ;; GO TO FUN 2 (argc 3)

 cmp dword [argc], 2
; jne to the target function
 je _start1   ;;; === FIRST HOOK 

 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x26f
 cmp dword [reg_a], 0x0

 sete  al
 call PCJMP_f0

BBf0_621:
 ; op: MOV
 mov dword [reg_a], 0xaaaa
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x26e
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x261
 mov eax, 1
 call PCJMP_f0

BBf0_622:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x1331
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: EXIT
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 ; op: JMP
 mov edi, 0x278
 mov eax, 1
 call PCJMP_f0

BBf0_623:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xa003
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x272
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_624:
 ; op: MOV
 mov dword [reg_a], 0xaaaa
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x271
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x263
 mov eax, 1
 call PCJMP_f0

BBf0_625:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x1332
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: EXIT
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 ; op: JMP
 mov edi, 0x278
 mov eax, 1
 call PCJMP_f0

BBf0_626:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xa004 ; argc == 4
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [reg_b]
 cmp dword [argc], 0x4

 je _start3

 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x275
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

BBf0_627:
 ; op: MOV
 mov dword [reg_a], 0xaaaa
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x274
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x265
 mov eax, 1
 call PCJMP_f0

BBf0_628:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x1334
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: EXIT
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 ; op: JMP
 mov edi, 0x278
 mov eax, 1
 call PCJMP_f0

BBf0_629:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 ; op: ADD
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 ; op: LOAD
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0xa005 ; argc == 5
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: CMP
 mov eax, dword [argc]
 cmp eax, 0x5

je _start4

 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 ; op: JMPc
 mov edi, 0x278
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f0

jc _start5


BBf0_630:
 ; op: MOV
 mov dword [reg_a], 0xaaaa
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov dword [reg_a], 0x277
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x267
 mov eax, 1
 call PCJMP_f0

BBf0_631:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov dword [reg_a], 0x1334
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: EXIT
 mov eax, ebx
 mov ebx, 0x0
 int 0x80

BBf0_632:
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: EXIT
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 ; op: EXIT
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
JMP_TABLE_f0:
 dd BBf0_0 + 0x0badf00d
 dd BBf0_1 + 0x0badf00d
 dd BBf0_2 + 0x0badf00d
 dd BBf0_3 + 0x0badf00d
 dd BBf0_4 + 0x0badf00d
 dd BBf0_5 + 0x0badf00d
 dd BBf0_6 + 0x0badf00d
 dd BBf0_7 + 0x0badf00d
 dd BBf0_8 + 0x0badf00d
 dd BBf0_9 + 0x0badf00d
 dd BBf0_10 + 0x0badf00d
 dd BBf0_11 + 0x0badf00d
 dd BBf0_12 + 0x0badf00d
 dd BBf0_13 + 0x0badf00d
 dd BBf0_14 + 0x0badf00d
 dd BBf0_15 + 0x0badf00d
 dd BBf0_16 + 0x0badf00d
 dd BBf0_17 + 0x0badf00d
 dd BBf0_18 + 0x0badf00d
 dd BBf0_19 + 0x0badf00d
 dd BBf0_20 + 0x0badf00d
 dd BBf0_21 + 0x0badf00d
 dd BBf0_22 + 0x0badf00d
 dd BBf0_23 + 0x0badf00d
 dd BBf0_24 + 0x0badf00d
 dd BBf0_25 + 0x0badf00d
 dd BBf0_26 + 0x0badf00d
 dd BBf0_27 + 0x0badf00d
 dd BBf0_28 + 0x0badf00d
 dd BBf0_29 + 0x0badf00d
 dd BBf0_30 + 0x0badf00d
 dd BBf0_31 + 0x0badf00d
 dd BBf0_32 + 0x0badf00d
 dd BBf0_33 + 0x0badf00d
 dd BBf0_34 + 0x0badf00d
 dd BBf0_35 + 0x0badf00d
 dd BBf0_36 + 0x0badf00d
 dd BBf0_37 + 0x0badf00d
 dd BBf0_38 + 0x0badf00d
 dd BBf0_39 + 0x0badf00d
 dd BBf0_40 + 0x0badf00d
 dd BBf0_41 + 0x0badf00d
 dd BBf0_42 + 0x0badf00d
 dd BBf0_43 + 0x0badf00d
 dd BBf0_44 + 0x0badf00d
 dd BBf0_45 + 0x0badf00d
 dd BBf0_46 + 0x0badf00d
 dd BBf0_47 + 0x0badf00d
 dd BBf0_48 + 0x0badf00d
 dd BBf0_49 + 0x0badf00d
 dd BBf0_50 + 0x0badf00d
 dd BBf0_51 + 0x0badf00d
 dd BBf0_52 + 0x0badf00d
 dd BBf0_53 + 0x0badf00d
 dd BBf0_54 + 0x0badf00d
 dd BBf0_55 + 0x0badf00d
 dd BBf0_56 + 0x0badf00d
 dd BBf0_57 + 0x0badf00d
 dd BBf0_58 + 0x0badf00d
 dd BBf0_59 + 0x0badf00d
 dd BBf0_60 + 0x0badf00d
 dd BBf0_61 + 0x0badf00d
 dd BBf0_62 + 0x0badf00d
 dd BBf0_63 + 0x0badf00d
 dd BBf0_64 + 0x0badf00d
 dd BBf0_65 + 0x0badf00d
 dd BBf0_66 + 0x0badf00d
 dd BBf0_67 + 0x0badf00d
 dd BBf0_68 + 0x0badf00d
 dd BBf0_69 + 0x0badf00d
 dd BBf0_70 + 0x0badf00d
 dd BBf0_71 + 0x0badf00d
 dd BBf0_72 + 0x0badf00d
 dd BBf0_73 + 0x0badf00d
 dd BBf0_74 + 0x0badf00d
 dd BBf0_75 + 0x0badf00d
 dd BBf0_76 + 0x0badf00d
 dd BBf0_77 + 0x0badf00d
 dd BBf0_78 + 0x0badf00d
 dd BBf0_79 + 0x0badf00d
 dd BBf0_80 + 0x0badf00d
 dd BBf0_81 + 0x0badf00d
 dd BBf0_82 + 0x0badf00d
 dd BBf0_83 + 0x0badf00d
 dd BBf0_84 + 0x0badf00d
 dd BBf0_85 + 0x0badf00d
 dd BBf0_86 + 0x0badf00d
 dd BBf0_87 + 0x0badf00d
 dd BBf0_88 + 0x0badf00d
 dd BBf0_89 + 0x0badf00d
 dd BBf0_90 + 0x0badf00d
 dd BBf0_91 + 0x0badf00d
 dd BBf0_92 + 0x0badf00d
 dd BBf0_93 + 0x0badf00d
 dd BBf0_94 + 0x0badf00d
 dd BBf0_95 + 0x0badf00d
 dd BBf0_96 + 0x0badf00d
 dd BBf0_97 + 0x0badf00d
 dd BBf0_98 + 0x0badf00d
 dd BBf0_99 + 0x0badf00d
 dd BBf0_100 + 0x0badf00d
 dd BBf0_101 + 0x0badf00d
 dd BBf0_102 + 0x0badf00d
 dd BBf0_103 + 0x0badf00d
 dd BBf0_104 + 0x0badf00d
 dd BBf0_105 + 0x0badf00d
 dd BBf0_106 + 0x0badf00d
 dd BBf0_107 + 0x0badf00d
 dd BBf0_108 + 0x0badf00d
 dd BBf0_109 + 0x0badf00d
 dd BBf0_110 + 0x0badf00d
 dd BBf0_111 + 0x0badf00d
 dd BBf0_112 + 0x0badf00d
 dd BBf0_113 + 0x0badf00d
 dd BBf0_114 + 0x0badf00d
 dd BBf0_115 + 0x0badf00d
 dd BBf0_116 + 0x0badf00d
 dd BBf0_117 + 0x0badf00d
 dd BBf0_118 + 0x0badf00d
 dd BBf0_119 + 0x0badf00d
 dd BBf0_120 + 0x0badf00d
 dd BBf0_121 + 0x0badf00d
 dd BBf0_122 + 0x0badf00d
 dd BBf0_123 + 0x0badf00d
 dd BBf0_124 + 0x0badf00d
 dd BBf0_125 + 0x0badf00d
 dd BBf0_126 + 0x0badf00d
 dd BBf0_127 + 0x0badf00d
 dd BBf0_128 + 0x0badf00d
 dd BBf0_129 + 0x0badf00d
 dd BBf0_130 + 0x0badf00d
 dd BBf0_131 + 0x0badf00d
 dd BBf0_132 + 0x0badf00d
 dd BBf0_133 + 0x0badf00d
 dd BBf0_134 + 0x0badf00d
 dd BBf0_135 + 0x0badf00d
 dd BBf0_136 + 0x0badf00d
 dd BBf0_137 + 0x0badf00d
 dd BBf0_138 + 0x0badf00d
 dd BBf0_139 + 0x0badf00d
 dd BBf0_140 + 0x0badf00d
 dd BBf0_141 + 0x0badf00d
 dd BBf0_142 + 0x0badf00d
 dd BBf0_143 + 0x0badf00d
 dd BBf0_144 + 0x0badf00d
 dd BBf0_145 + 0x0badf00d
 dd BBf0_146 + 0x0badf00d
 dd BBf0_147 + 0x0badf00d
 dd BBf0_148 + 0x0badf00d
 dd BBf0_149 + 0x0badf00d
 dd BBf0_150 + 0x0badf00d
 dd BBf0_151 + 0x0badf00d
 dd BBf0_152 + 0x0badf00d
 dd BBf0_153 + 0x0badf00d
 dd BBf0_154 + 0x0badf00d
 dd BBf0_155 + 0x0badf00d
 dd BBf0_156 + 0x0badf00d
 dd BBf0_157 + 0x0badf00d
 dd BBf0_158 + 0x0badf00d
 dd BBf0_159 + 0x0badf00d
 dd BBf0_160 + 0x0badf00d
 dd BBf0_161 + 0x0badf00d
 dd BBf0_162 + 0x0badf00d
 dd BBf0_163 + 0x0badf00d
 dd BBf0_164 + 0x0badf00d
 dd BBf0_165 + 0x0badf00d
 dd BBf0_166 + 0x0badf00d
 dd BBf0_167 + 0x0badf00d
 dd BBf0_168 + 0x0badf00d
 dd BBf0_169 + 0x0badf00d
 dd BBf0_170 + 0x0badf00d
 dd BBf0_171 + 0x0badf00d
 dd BBf0_172 + 0x0badf00d
 dd BBf0_173 + 0x0badf00d
 dd BBf0_174 + 0x0badf00d
 dd BBf0_175 + 0x0badf00d
 dd BBf0_176 + 0x0badf00d
 dd BBf0_177 + 0x0badf00d
 dd BBf0_178 + 0x0badf00d
 dd BBf0_179 + 0x0badf00d
 dd BBf0_180 + 0x0badf00d
 dd BBf0_181 + 0x0badf00d
 dd BBf0_182 + 0x0badf00d
 dd BBf0_183 + 0x0badf00d
 dd BBf0_184 + 0x0badf00d
 dd BBf0_185 + 0x0badf00d
 dd BBf0_186 + 0x0badf00d
 dd BBf0_187 + 0x0badf00d
 dd BBf0_188 + 0x0badf00d
 dd BBf0_189 + 0x0badf00d
 dd BBf0_190 + 0x0badf00d
 dd BBf0_191 + 0x0badf00d
 dd BBf0_192 + 0x0badf00d
 dd BBf0_193 + 0x0badf00d
 dd BBf0_194 + 0x0badf00d
 dd BBf0_195 + 0x0badf00d
 dd BBf0_196 + 0x0badf00d
 dd BBf0_197 + 0x0badf00d
 dd BBf0_198 + 0x0badf00d
 dd BBf0_199 + 0x0badf00d
 dd BBf0_200 + 0x0badf00d
 dd BBf0_201 + 0x0badf00d
 dd BBf0_202 + 0x0badf00d
 dd BBf0_203 + 0x0badf00d
 dd BBf0_204 + 0x0badf00d
 dd BBf0_205 + 0x0badf00d
 dd BBf0_206 + 0x0badf00d
 dd BBf0_207 + 0x0badf00d
 dd BBf0_208 + 0x0badf00d
 dd BBf0_209 + 0x0badf00d
 dd BBf0_210 + 0x0badf00d
 dd BBf0_211 + 0x0badf00d
 dd BBf0_212 + 0x0badf00d
 dd BBf0_213 + 0x0badf00d
 dd BBf0_214 + 0x0badf00d
 dd BBf0_215 + 0x0badf00d
 dd BBf0_216 + 0x0badf00d
 dd BBf0_217 + 0x0badf00d
 dd BBf0_218 + 0x0badf00d
 dd BBf0_219 + 0x0badf00d
 dd BBf0_220 + 0x0badf00d
 dd BBf0_221 + 0x0badf00d
 dd BBf0_222 + 0x0badf00d
 dd BBf0_223 + 0x0badf00d
 dd BBf0_224 + 0x0badf00d
 dd BBf0_225 + 0x0badf00d
 dd BBf0_226 + 0x0badf00d
 dd BBf0_227 + 0x0badf00d
 dd BBf0_228 + 0x0badf00d
 dd BBf0_229 + 0x0badf00d
 dd BBf0_230 + 0x0badf00d
 dd BBf0_231 + 0x0badf00d
 dd BBf0_232 + 0x0badf00d
 dd BBf0_233 + 0x0badf00d
 dd BBf0_234 + 0x0badf00d
 dd BBf0_235 + 0x0badf00d
 dd BBf0_236 + 0x0badf00d
 dd BBf0_237 + 0x0badf00d
 dd BBf0_238 + 0x0badf00d
 dd BBf0_239 + 0x0badf00d
 dd BBf0_240 + 0x0badf00d
 dd BBf0_241 + 0x0badf00d
 dd BBf0_242 + 0x0badf00d
 dd BBf0_243 + 0x0badf00d
 dd BBf0_244 + 0x0badf00d
 dd BBf0_245 + 0x0badf00d
 dd BBf0_246 + 0x0badf00d
 dd BBf0_247 + 0x0badf00d
 dd BBf0_248 + 0x0badf00d
 dd BBf0_249 + 0x0badf00d
 dd BBf0_250 + 0x0badf00d
 dd BBf0_251 + 0x0badf00d
 dd BBf0_252 + 0x0badf00d
 dd BBf0_253 + 0x0badf00d
 dd BBf0_254 + 0x0badf00d
 dd BBf0_255 + 0x0badf00d
 dd BBf0_256 + 0x0badf00d
 dd BBf0_257 + 0x0badf00d
 dd BBf0_258 + 0x0badf00d
 dd BBf0_259 + 0x0badf00d
 dd BBf0_260 + 0x0badf00d
 dd BBf0_261 + 0x0badf00d
 dd BBf0_262 + 0x0badf00d
 dd BBf0_263 + 0x0badf00d
 dd BBf0_264 + 0x0badf00d
 dd BBf0_265 + 0x0badf00d
 dd BBf0_266 + 0x0badf00d
 dd BBf0_267 + 0x0badf00d
 dd BBf0_268 + 0x0badf00d
 dd BBf0_269 + 0x0badf00d
 dd BBf0_270 + 0x0badf00d
 dd BBf0_271 + 0x0badf00d
 dd BBf0_272 + 0x0badf00d
 dd BBf0_273 + 0x0badf00d
 dd BBf0_274 + 0x0badf00d
 dd BBf0_275 + 0x0badf00d
 dd BBf0_276 + 0x0badf00d
 dd BBf0_277 + 0x0badf00d
 dd BBf0_278 + 0x0badf00d
 dd BBf0_279 + 0x0badf00d
 dd BBf0_280 + 0x0badf00d
 dd BBf0_281 + 0x0badf00d
 dd BBf0_282 + 0x0badf00d
 dd BBf0_283 + 0x0badf00d
 dd BBf0_284 + 0x0badf00d
 dd BBf0_285 + 0x0badf00d
 dd BBf0_286 + 0x0badf00d
 dd BBf0_287 + 0x0badf00d
 dd BBf0_288 + 0x0badf00d
 dd BBf0_289 + 0x0badf00d
 dd BBf0_290 + 0x0badf00d
 dd BBf0_291 + 0x0badf00d
 dd BBf0_292 + 0x0badf00d
 dd BBf0_293 + 0x0badf00d
 dd BBf0_294 + 0x0badf00d
 dd BBf0_295 + 0x0badf00d
 dd BBf0_296 + 0x0badf00d
 dd BBf0_297 + 0x0badf00d
 dd BBf0_298 + 0x0badf00d
 dd BBf0_299 + 0x0badf00d
 dd BBf0_300 + 0x0badf00d
 dd BBf0_301 + 0x0badf00d
 dd BBf0_302 + 0x0badf00d
 dd BBf0_303 + 0x0badf00d
 dd BBf0_304 + 0x0badf00d
 dd BBf0_305 + 0x0badf00d
 dd BBf0_306 + 0x0badf00d
 dd BBf0_307 + 0x0badf00d
 dd BBf0_308 + 0x0badf00d
 dd BBf0_309 + 0x0badf00d
 dd BBf0_310 + 0x0badf00d
 dd BBf0_311 + 0x0badf00d
 dd BBf0_312 + 0x0badf00d
 dd BBf0_313 + 0x0badf00d
 dd BBf0_314 + 0x0badf00d
 dd BBf0_315 + 0x0badf00d
 dd BBf0_316 + 0x0badf00d
 dd BBf0_317 + 0x0badf00d
 dd BBf0_318 + 0x0badf00d
 dd BBf0_319 + 0x0badf00d
 dd BBf0_320 + 0x0badf00d
 dd BBf0_321 + 0x0badf00d
 dd BBf0_322 + 0x0badf00d
 dd BBf0_323 + 0x0badf00d
 dd BBf0_324 + 0x0badf00d
 dd BBf0_325 + 0x0badf00d
 dd BBf0_326 + 0x0badf00d
 dd BBf0_327 + 0x0badf00d
 dd BBf0_328 + 0x0badf00d
 dd BBf0_329 + 0x0badf00d
 dd BBf0_330 + 0x0badf00d
 dd BBf0_331 + 0x0badf00d
 dd BBf0_332 + 0x0badf00d
 dd BBf0_333 + 0x0badf00d
 dd BBf0_334 + 0x0badf00d
 dd BBf0_335 + 0x0badf00d
 dd BBf0_336 + 0x0badf00d
 dd BBf0_337 + 0x0badf00d
 dd BBf0_338 + 0x0badf00d
 dd BBf0_339 + 0x0badf00d
 dd BBf0_340 + 0x0badf00d
 dd BBf0_341 + 0x0badf00d
 dd BBf0_342 + 0x0badf00d
 dd BBf0_343 + 0x0badf00d
 dd BBf0_344 + 0x0badf00d
 dd BBf0_345 + 0x0badf00d
 dd BBf0_346 + 0x0badf00d
 dd BBf0_347 + 0x0badf00d
 dd BBf0_348 + 0x0badf00d
 dd BBf0_349 + 0x0badf00d
 dd BBf0_350 + 0x0badf00d
 dd BBf0_351 + 0x0badf00d
 dd BBf0_352 + 0x0badf00d
 dd BBf0_353 + 0x0badf00d
 dd BBf0_354 + 0x0badf00d
 dd BBf0_355 + 0x0badf00d
 dd BBf0_356 + 0x0badf00d
 dd BBf0_357 + 0x0badf00d
 dd BBf0_358 + 0x0badf00d
 dd BBf0_359 + 0x0badf00d
 dd BBf0_360 + 0x0badf00d
 dd BBf0_361 + 0x0badf00d
 dd BBf0_362 + 0x0badf00d
 dd BBf0_363 + 0x0badf00d
 dd BBf0_364 + 0x0badf00d
 dd BBf0_365 + 0x0badf00d
 dd BBf0_366 + 0x0badf00d
 dd BBf0_367 + 0x0badf00d
 dd BBf0_368 + 0x0badf00d
 dd BBf0_369 + 0x0badf00d
 dd BBf0_370 + 0x0badf00d
 dd BBf0_371 + 0x0badf00d
 dd BBf0_372 + 0x0badf00d
 dd BBf0_373 + 0x0badf00d
 dd BBf0_374 + 0x0badf00d
 dd BBf0_375 + 0x0badf00d
 dd BBf0_376 + 0x0badf00d
 dd BBf0_377 + 0x0badf00d
 dd BBf0_378 + 0x0badf00d
 dd BBf0_379 + 0x0badf00d
 dd BBf0_380 + 0x0badf00d
 dd BBf0_381 + 0x0badf00d
 dd BBf0_382 + 0x0badf00d
 dd BBf0_383 + 0x0badf00d
 dd BBf0_384 + 0x0badf00d
 dd BBf0_385 + 0x0badf00d
 dd BBf0_386 + 0x0badf00d
 dd BBf0_387 + 0x0badf00d
 dd BBf0_388 + 0x0badf00d
 dd BBf0_389 + 0x0badf00d
 dd BBf0_390 + 0x0badf00d
 dd BBf0_391 + 0x0badf00d
 dd BBf0_392 + 0x0badf00d
 dd BBf0_393 + 0x0badf00d
 dd BBf0_394 + 0x0badf00d
 dd BBf0_395 + 0x0badf00d
 dd BBf0_396 + 0x0badf00d
 dd BBf0_397 + 0x0badf00d
 dd BBf0_398 + 0x0badf00d
 dd BBf0_399 + 0x0badf00d
 dd BBf0_400 + 0x0badf00d
 dd BBf0_401 + 0x0badf00d
 dd BBf0_402 + 0x0badf00d
 dd BBf0_403 + 0x0badf00d
 dd BBf0_404 + 0x0badf00d
 dd BBf0_405 + 0x0badf00d
 dd BBf0_406 + 0x0badf00d
 dd BBf0_407 + 0x0badf00d
 dd BBf0_408 + 0x0badf00d
 dd BBf0_409 + 0x0badf00d
 dd BBf0_410 + 0x0badf00d
 dd BBf0_411 + 0x0badf00d
 dd BBf0_412 + 0x0badf00d
 dd BBf0_413 + 0x0badf00d
 dd BBf0_414 + 0x0badf00d
 dd BBf0_415 + 0x0badf00d
 dd BBf0_416 + 0x0badf00d
 dd BBf0_417 + 0x0badf00d
 dd BBf0_418 + 0x0badf00d
 dd BBf0_419 + 0x0badf00d
 dd BBf0_420 + 0x0badf00d
 dd BBf0_421 + 0x0badf00d
 dd BBf0_422 + 0x0badf00d
 dd BBf0_423 + 0x0badf00d
 dd BBf0_424 + 0x0badf00d
 dd BBf0_425 + 0x0badf00d
 dd BBf0_426 + 0x0badf00d
 dd BBf0_427 + 0x0badf00d
 dd BBf0_428 + 0x0badf00d
 dd BBf0_429 + 0x0badf00d
 dd BBf0_430 + 0x0badf00d
 dd BBf0_431 + 0x0badf00d
 dd BBf0_432 + 0x0badf00d
 dd BBf0_433 + 0x0badf00d
 dd BBf0_434 + 0x0badf00d
 dd BBf0_435 + 0x0badf00d
 dd BBf0_436 + 0x0badf00d
 dd BBf0_437 + 0x0badf00d
 dd BBf0_438 + 0x0badf00d
 dd BBf0_439 + 0x0badf00d
 dd BBf0_440 + 0x0badf00d
 dd BBf0_441 + 0x0badf00d
 dd BBf0_442 + 0x0badf00d
 dd BBf0_443 + 0x0badf00d
 dd BBf0_444 + 0x0badf00d
 dd BBf0_445 + 0x0badf00d
 dd BBf0_446 + 0x0badf00d
 dd BBf0_447 + 0x0badf00d
 dd BBf0_448 + 0x0badf00d
 dd BBf0_449 + 0x0badf00d
 dd BBf0_450 + 0x0badf00d
 dd BBf0_451 + 0x0badf00d
 dd BBf0_452 + 0x0badf00d
 dd BBf0_453 + 0x0badf00d
 dd BBf0_454 + 0x0badf00d
 dd BBf0_455 + 0x0badf00d
 dd BBf0_456 + 0x0badf00d
 dd BBf0_457 + 0x0badf00d
 dd BBf0_458 + 0x0badf00d
 dd BBf0_459 + 0x0badf00d
 dd BBf0_460 + 0x0badf00d
 dd BBf0_461 + 0x0badf00d
 dd BBf0_462 + 0x0badf00d
 dd BBf0_463 + 0x0badf00d
 dd BBf0_464 + 0x0badf00d
 dd BBf0_465 + 0x0badf00d
 dd BBf0_466 + 0x0badf00d
 dd BBf0_467 + 0x0badf00d
 dd BBf0_468 + 0x0badf00d
 dd BBf0_469 + 0x0badf00d
 dd BBf0_470 + 0x0badf00d
 dd BBf0_471 + 0x0badf00d
 dd BBf0_472 + 0x0badf00d
 dd BBf0_473 + 0x0badf00d
 dd BBf0_474 + 0x0badf00d
 dd BBf0_475 + 0x0badf00d
 dd BBf0_476 + 0x0badf00d
 dd BBf0_477 + 0x0badf00d
 dd BBf0_478 + 0x0badf00d
 dd BBf0_479 + 0x0badf00d
 dd BBf0_480 + 0x0badf00d
 dd BBf0_481 + 0x0badf00d
 dd BBf0_482 + 0x0badf00d
 dd BBf0_483 + 0x0badf00d
 dd BBf0_484 + 0x0badf00d
 dd BBf0_485 + 0x0badf00d
 dd BBf0_486 + 0x0badf00d
 dd BBf0_487 + 0x0badf00d
 dd BBf0_488 + 0x0badf00d
 dd BBf0_489 + 0x0badf00d
 dd BBf0_490 + 0x0badf00d
 dd BBf0_491 + 0x0badf00d
 dd BBf0_492 + 0x0badf00d
 dd BBf0_493 + 0x0badf00d
 dd BBf0_494 + 0x0badf00d
 dd BBf0_495 + 0x0badf00d
 dd BBf0_496 + 0x0badf00d
 dd BBf0_497 + 0x0badf00d
 dd BBf0_498 + 0x0badf00d
 dd BBf0_499 + 0x0badf00d
 dd BBf0_500 + 0x0badf00d
 dd BBf0_501 + 0x0badf00d
 dd BBf0_502 + 0x0badf00d
 dd BBf0_503 + 0x0badf00d
 dd BBf0_504 + 0x0badf00d
 dd BBf0_505 + 0x0badf00d
 dd BBf0_506 + 0x0badf00d
 dd BBf0_507 + 0x0badf00d
 dd BBf0_508 + 0x0badf00d
 dd BBf0_509 + 0x0badf00d
 dd BBf0_510 + 0x0badf00d
 dd BBf0_511 + 0x0badf00d
 dd BBf0_512 + 0x0badf00d
 dd BBf0_513 + 0x0badf00d
 dd BBf0_514 + 0x0badf00d
 dd BBf0_515 + 0x0badf00d
 dd BBf0_516 + 0x0badf00d
 dd BBf0_517 + 0x0badf00d
 dd BBf0_518 + 0x0badf00d
 dd BBf0_519 + 0x0badf00d
 dd BBf0_520 + 0x0badf00d
 dd BBf0_521 + 0x0badf00d
 dd BBf0_522 + 0x0badf00d
 dd BBf0_523 + 0x0badf00d
 dd BBf0_524 + 0x0badf00d
 dd BBf0_525 + 0x0badf00d
 dd BBf0_526 + 0x0badf00d
 dd BBf0_527 + 0x0badf00d
 dd BBf0_528 + 0x0badf00d
 dd BBf0_529 + 0x0badf00d
 dd BBf0_530 + 0x0badf00d
 dd BBf0_531 + 0x0badf00d
 dd BBf0_532 + 0x0badf00d
 dd BBf0_533 + 0x0badf00d
 dd BBf0_534 + 0x0badf00d
 dd BBf0_535 + 0x0badf00d
 dd BBf0_536 + 0x0badf00d
 dd BBf0_537 + 0x0badf00d
 dd BBf0_538 + 0x0badf00d
 dd BBf0_539 + 0x0badf00d
 dd BBf0_540 + 0x0badf00d
 dd BBf0_541 + 0x0badf00d
 dd BBf0_542 + 0x0badf00d
 dd BBf0_543 + 0x0badf00d
 dd BBf0_544 + 0x0badf00d
 dd BBf0_545 + 0x0badf00d
 dd BBf0_546 + 0x0badf00d
 dd BBf0_547 + 0x0badf00d
 dd BBf0_548 + 0x0badf00d
 dd BBf0_549 + 0x0badf00d
 dd BBf0_550 + 0x0badf00d
 dd BBf0_551 + 0x0badf00d
 dd BBf0_552 + 0x0badf00d
 dd BBf0_553 + 0x0badf00d
 dd BBf0_554 + 0x0badf00d
 dd BBf0_555 + 0x0badf00d
 dd BBf0_556 + 0x0badf00d
 dd BBf0_557 + 0x0badf00d
 dd BBf0_558 + 0x0badf00d
 dd BBf0_559 + 0x0badf00d
 dd BBf0_560 + 0x0badf00d
 dd BBf0_561 + 0x0badf00d
 dd BBf0_562 + 0x0badf00d
 dd BBf0_563 + 0x0badf00d
 dd BBf0_564 + 0x0badf00d
 dd BBf0_565 + 0x0badf00d
 dd BBf0_566 + 0x0badf00d
 dd BBf0_567 + 0x0badf00d
 dd BBf0_568 + 0x0badf00d
 dd BBf0_569 + 0x0badf00d
 dd BBf0_570 + 0x0badf00d
 dd BBf0_571 + 0x0badf00d
 dd BBf0_572 + 0x0badf00d
 dd BBf0_573 + 0x0badf00d
 dd BBf0_574 + 0x0badf00d
 dd BBf0_575 + 0x0badf00d
 dd BBf0_576 + 0x0badf00d
 dd BBf0_577 + 0x0badf00d
 dd BBf0_578 + 0x0badf00d
 dd BBf0_579 + 0x0badf00d
 dd BBf0_580 + 0x0badf00d
 dd BBf0_581 + 0x0badf00d
 dd BBf0_582 + 0x0badf00d
 dd BBf0_583 + 0x0badf00d
 dd BBf0_584 + 0x0badf00d
 dd BBf0_585 + 0x0badf00d
 dd BBf0_586 + 0x0badf00d
 dd BBf0_587 + 0x0badf00d
 dd BBf0_588 + 0x0badf00d
 dd BBf0_589 + 0x0badf00d
 dd BBf0_590 + 0x0badf00d
 dd BBf0_591 + 0x0badf00d
 dd BBf0_592 + 0x0badf00d
 dd BBf0_593 + 0x0badf00d
 dd BBf0_594 + 0x0badf00d
 dd BBf0_595 + 0x0badf00d
 dd BBf0_596 + 0x0badf00d
 dd BBf0_597 + 0x0badf00d
 dd BBf0_598 + 0x0badf00d
 dd BBf0_599 + 0x0badf00d
 dd BBf0_600 + 0x0badf00d
 dd BBf0_601 + 0x0badf00d
 dd BBf0_602 + 0x0badf00d
 dd BBf0_603 + 0x0badf00d
 dd BBf0_604 + 0x0badf00d
 dd BBf0_605 + 0x0badf00d
 dd BBf0_606 + 0x0badf00d
 dd BBf0_607 + 0x0badf00d
 dd BBf0_608 + 0x0badf00d
 dd BBf0_609 + 0x0badf00d
 dd BBf0_610 + 0x0badf00d
 dd BBf0_611 + 0x0badf00d
 dd BBf0_612 + 0x0badf00d
 dd BBf0_613 + 0x0badf00d
 dd BBf0_614 + 0x0badf00d
 dd BBf0_615 + 0x0badf00d
 dd BBf0_616 + 0x0badf00d
 dd BBf0_617 + 0x0badf00d
 dd BBf0_618 + 0x0badf00d
 dd BBf0_619 + 0x0badf00d
 dd BBf0_620 + 0x0badf00d
 dd BBf0_621 + 0x0badf00d
 dd BBf0_622 + 0x0badf00d
 dd BBf0_623 + 0x0badf00d
 dd BBf0_624 + 0x0badf00d
 dd BBf0_625 + 0x0badf00d
 dd BBf0_626 + 0x0badf00d
 dd BBf0_627 + 0x0badf00d
 dd BBf0_628 + 0x0badf00d
 dd BBf0_629 + 0x0badf00d
 dd BBf0_630 + 0x0badf00d
 dd BBf0_631 + 0x0badf00d
 dd BBf0_632 + 0x0badf00d
; ----- End of func 0 -----

;;;;;;;;;;;;;;;;; ================================ Function 1 

code_1:
  section .data

reg_a1: dd 0
reg_b1: dd 0
reg_c1: dd 0
reg_d1: dd 0
reg_bp1: dd 0
reg_sp1: dd 0
reg_pc1: dd 0

section .text
global _start1
_start1:
 mov ebx, 0x1 ; fd
 mov edx, 1 ; len
 mov edi, 0
 mov eax, 1
; ----- Start of 0 -----
func_1:
 PCJMP_f1:
  cmp eax, 1
  je _PCJMP_f1
  ret
 _PCJMP_f1:
  pop eax
  mov eax, [JMP_TABLE_f1 + 4*edi]
  sub eax, 0x13371337
  jz PIX_START_f1
  jmp eax
PIX_START_f1:
 mov esi, [PIX_TABLE_f1 + 4*esi]
 jmp esi
PIXf1_0_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_0: mov edi, 0x158
 mov eax, 1
 call PCJMP_f1
BBf1_1: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x34
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_0_1
PIXf1_1_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_1_1
PIXf1_2_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_2_1
PIXf1_3_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_3_1
PIXf1_4_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x21
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_32: mov edi, 0x22
 mov eax, 1
 jmp PIXf1_4_1
PIXf1_5_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_35: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 jmp PIXf1_5_1
PIXf1_6_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x26
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_37: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_6_1
PIXf1_7_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_7_1
PIXf1_8_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x5
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 jmp PIXf1_8_1
PIXf1_9_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_75: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_9_1
PIXf1_10_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x58
 mov eax, 1
 call PCJMP_f1
BBf1_87: mov dword [reg_a1], 0x0
BBf1_88: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_10_1
PIXf1_11_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x64
 mov eax, 1
 call PCJMP_f1
BBf1_99: mov dword [reg_a1], 0x0
BBf1_100: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_11_1
PIXf1_12_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x1
 mov edi, 0x70
 mov eax, 1
 call PCJMP_f1
BBf1_111: mov dword [reg_a1], 0x0
BBf1_112: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x72
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_113: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_12_1
PIXf1_13_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 jmp PIXf1_13_1
PIXf1_14_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 int 0x80
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_134: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf1_14_1
PIXf1_15_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_15_1
PIXf1_16_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_16_1
PIXf1_17_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x10
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf1_17_1
PIXf1_18_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xd
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 jmp PIXf1_18_1
PIXf1_19_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xb7
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_182: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x46
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_19_1
PIXf1_20_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f1
BBf1_201: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_202: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_20_1
PIXf1_21_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 jmp PIXf1_21_1
PIXf1_22_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xd7
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_213: mov dword [reg_a1], 0x18
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xd6
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_22_1
PIXf1_23_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], 0x1
 mov edi, 0xe0
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_223: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_23_1
PIXf1_24_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0xee
 mov eax, 1
 call PCJMP_f1
BBf1_236: mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 jmp PIXf1_24_1
PIXf1_25_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x2
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_25_1
PIXf1_26_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_26_1
PIXf1_27_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_27_1
PIXf1_28_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x11f
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_28_1
PIXf1_29_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf1_29_1
PIXf1_30_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_30_1
PIXf1_31_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f1
BBf1_312: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_31_1
PIXf1_32_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x13e
 mov eax, 1
 call PCJMP_f1
BBf1_317: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f1
BBf1_318: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f1
 jmp PIXf1_32_1
PIXf1_33_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x142
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_321: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_33_1
PIXf1_34_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_34_1
PIXf1_35_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_35_1
PIXf1_36_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_36_1
PIXf1_37_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x44
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdd
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x55
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffd8
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x22
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 jmp PIXf1_37_1
PIXf1_0_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffd0
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 jmp PIXf1_0_2
PIXf1_1_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf1_1_2
PIXf1_2_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_15: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_2_2
PIXf1_3_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 jmp PIXf1_3_2
PIXf1_4_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_2
PIXf1_5_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_2
PIXf1_6_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_6_2
PIXf1_7_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_7_2
PIXf1_8_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_8_2
PIXf1_9_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_9_2
PIXf1_10_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_10_2
PIXf1_11_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_11_2
PIXf1_12_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_12_2
PIXf1_13_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 jmp PIXf1_13_2
PIXf1_14_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x82
 mov eax, 1
 call PCJMP_f1
BBf1_135: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_14_2
PIXf1_15_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x8b
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_15_2
PIXf1_16_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_16_2
PIXf1_17_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x95
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_17_2
PIXf1_18_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_163: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xa5
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_164: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_18_2
PIXf1_19_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_183: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_184: mov eax, dword [reg_b1]
 jmp PIXf1_19_2
PIXf1_20_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_203: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 jmp PIXf1_20_2
PIXf1_21_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_212: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_21_2
PIXf1_22_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f1
BBf1_214: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_215: mov eax, dword [reg_bp1]
 jmp PIXf1_22_2
PIXf1_23_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_23_2
PIXf1_24_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_24_2
PIXf1_25_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_25_2
PIXf1_26_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_26_2
PIXf1_27_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_27_2
PIXf1_28_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_28_2
PIXf1_29_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_29_2
PIXf1_30_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_30_2
PIXf1_31_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_31_2
PIXf1_32_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_319: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf1_32_2
PIXf1_33_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_33_2
PIXf1_34_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_34_2
PIXf1_35_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 jmp PIXf1_35_2
PIXf1_36_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_36_2
PIXf1_37_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffd7
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x5
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffd6
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_345: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffd6
 and dword [reg_b1], 0xffffff
 jmp PIXf1_37_2
PIXf1_0_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_0_3
PIXf1_1_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffce
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_1_3
PIXf1_2_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x35
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_2_3
PIXf1_3_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_3_3
PIXf1_4_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_3
PIXf1_5_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_3
PIXf1_6_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_6_3
PIXf1_7_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_7_3
PIXf1_8_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_8_3
PIXf1_9_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_9_3
PIXf1_10_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_10_3
PIXf1_11_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_11_3
PIXf1_12_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_12_3
PIXf1_13_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_13_3
PIXf1_14_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_14_3
PIXf1_15_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f1
BBf1_139: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x8d
 jmp PIXf1_15_3
PIXf1_16_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x90
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf1_16_3
PIXf1_17_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f1
BBf1_149: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf1_17_3
PIXf1_18_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x9
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_165: mov eax, dword [reg_b1]
 jmp PIXf1_18_3
PIXf1_19_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_185: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_19_3
PIXf1_20_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_204: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_20_3
PIXf1_21_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_b1], 0x24
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_b1], 0x24
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_21_3
PIXf1_22_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_22_3
PIXf1_23_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_23_3
PIXf1_24_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_24_3
PIXf1_25_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_25_3
PIXf1_26_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x106
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xbe
 jmp PIXf1_26_3
PIXf1_27_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf1_27_3
PIXf1_28_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_28_3
PIXf1_29_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_29_3
PIXf1_30_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_30_3
PIXf1_31_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_31_3
PIXf1_32_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_3
PIXf1_33_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x143
 mov eax, 1
 call PCJMP_f1
BBf1_322: mov edi, 0x144
 mov eax, 1
 call PCJMP_f1
BBf1_323: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f1
BBf1_324: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_33_3
PIXf1_34_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf1_34_3
PIXf1_35_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_35_3
PIXf1_36_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf1_36_3
PIXf1_37_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffd8
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_37_3
PIXf1_0_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_2: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_0_4
PIXf1_1_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_7: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_1_4
PIXf1_2_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x11
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_16: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf1_2_4
PIXf1_3_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0x18
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_23: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_3_4
PIXf1_4_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_4
PIXf1_5_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_4
PIXf1_6_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_38: mov eax, dword [reg_bp1]
 jmp PIXf1_6_4
PIXf1_7_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_7_4
PIXf1_8_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_62: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x18
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_8_4
PIXf1_9_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x3e
 mov eax, 1
 call PCJMP_f1
BBf1_76: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 jmp PIXf1_9_4
PIXf1_10_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x5a
 cmp dword [reg_a1], 0x0
 sete  al
 jmp PIXf1_10_4
PIXf1_11_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 cmp dword [reg_a1], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x66
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_101: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_11_4
PIXf1_12_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_12_4
PIXf1_13_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_13_4
PIXf1_14_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_14_4
PIXf1_15_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_140: mov edi, 0x89
 mov eax, 1
 call PCJMP_f1
 jmp PIXf1_15_4
PIXf1_16_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f1
BBf1_144: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x91
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_16_4
PIXf1_17_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x97
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_150: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_17_4
PIXf1_18_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xa7
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_166: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xb
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_18_4
PIXf1_19_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_186: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x41
 mov eax, dword [reg_sp1]
 jmp PIXf1_19_4
PIXf1_20_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xcd
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f1
BBf1_205: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 jmp PIXf1_20_4
PIXf1_21_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_21_4
PIXf1_22_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_22_4
PIXf1_23_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_23_4
PIXf1_24_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x2b
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 jmp PIXf1_24_4
PIXf1_25_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x10
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 jmp PIXf1_25_4
PIXf1_26_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_262: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x10c
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_263: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_26_4
PIXf1_27_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x115
 jmp PIXf1_27_4
PIXf1_28_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f1
BBf1_287: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_28_4
PIXf1_29_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0x12a
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_297: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf1_29_4
PIXf1_30_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_30_4
PIXf1_31_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_31_4
PIXf1_32_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_4
PIXf1_33_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_33_4
PIXf1_34_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf1_34_4
PIXf1_35_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 jmp PIXf1_35_4
PIXf1_36_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x156
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f1
BBf1_342: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf1_36_4
PIXf1_37_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x15b
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_346: mov edi, 0x15c
 mov eax, 1
 call PCJMP_f1
BBf1_347: mov edi, 0x160
 mov eax, 1
 call PCJMP_f1
BBf1_348: mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffde
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_37_4
PIXf1_0_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffe8
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_0_5
PIXf1_1_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x2
 mov eax, 1
 call PCJMP_f1
BBf1_8: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcd
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_9: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffe8
 jmp PIXf1_1_5
PIXf1_2_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_2_5
PIXf1_3_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_3_5
PIXf1_4_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_5
PIXf1_5_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_5
PIXf1_6_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xfffffe
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_6_5
PIXf1_7_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x32
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
 jmp PIXf1_7_5
PIXf1_8_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x40
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_63: mov edi, 0x41
 mov eax, 1
 call PCJMP_f1
BBf1_64: mov edi, 0x4c
 mov eax, 1
 call PCJMP_f1
BBf1_65: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_8_5
PIXf1_9_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_77: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_9_5
PIXf1_10_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_89: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_10_5
PIXf1_11_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_11_5
PIXf1_12_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_12_5
PIXf1_13_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_13_5
PIXf1_14_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_14_5
PIXf1_15_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_15_5
PIXf1_16_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f1
BBf1_145: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
 jmp PIXf1_16_5
PIXf1_17_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 jmp PIXf1_17_5
PIXf1_18_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_167: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xa9
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_168: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_18_5
PIXf1_19_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 jmp PIXf1_19_5
PIXf1_20_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_20_5
PIXf1_21_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_21_5
PIXf1_22_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_22_5
PIXf1_23_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_224: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xe2
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_225: mov dword [reg_a1], 0x24
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf1_23_5
PIXf1_24_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0xee
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_237: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 jmp PIXf1_24_5
PIXf1_25_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_248: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_25_5
PIXf1_26_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x108
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_26_5
PIXf1_27_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f1
BBf1_277: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_27_5
PIXf1_28_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_288: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_289: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf1_28_5
PIXf1_29_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_29_5
PIXf1_30_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x12f
 mov eax, 1
 call PCJMP_f1
BBf1_302: mov edi, 0x130
 mov eax, 1
 call PCJMP_f1
BBf1_303: mov edi, 0x128
 mov eax, 1
 call PCJMP_f1
BBf1_304: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_30_5
PIXf1_31_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_31_5
PIXf1_32_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_5
PIXf1_33_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_33_5
PIXf1_34_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 jmp PIXf1_34_5
PIXf1_35_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_337: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f1
BBf1_338: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 jmp PIXf1_35_5
PIXf1_36_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x157
 mov eax, dword [reg_sp1]
 jmp PIXf1_36_5
PIXf1_37_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffd6
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_37_5
PIXf1_0_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 jmp PIXf1_0_6
PIXf1_1_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_1_6
PIXf1_2_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_17: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_2_6
PIXf1_3_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_24: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0x1a
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_25: mov edi, 0x1c
 mov eax, 1
 call PCJMP_f1
BBf1_26: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_3_6
PIXf1_4_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_6
PIXf1_5_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_6
PIXf1_6_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x27
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_6_6
PIXf1_7_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_49: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_7_6
PIXf1_8_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_8_6
PIXf1_9_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_78: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 jmp PIXf1_9_6
PIXf1_10_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_90: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_10_6
PIXf1_11_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_102: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_11_6
PIXf1_12_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_12_6
PIXf1_13_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x7b
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_122: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_13_6
PIXf1_14_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_14_6
PIXf1_15_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_15_6
PIXf1_16_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_16_6
PIXf1_17_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x98
 mov eax, 1
 call PCJMP_f1
BBf1_151: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_17_6
PIXf1_18_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x20
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 jmp PIXf1_18_6
PIXf1_19_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xbc
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_187: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x5a
 mov eax, dword [reg_a1]
 jmp PIXf1_19_6
PIXf1_20_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_20_6
PIXf1_21_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_21_6
PIXf1_22_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
 jmp PIXf1_22_6
PIXf1_23_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 jmp PIXf1_23_6
PIXf1_24_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_238: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 jmp PIXf1_24_6
PIXf1_25_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xfd
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_249: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_25_6
PIXf1_26_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xba
 mov eax, 1
 call PCJMP_f1
BBf1_264: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x10a
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_265: mov dword [reg_a1], 0x41
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 jmp PIXf1_26_6
PIXf1_27_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_27_6
PIXf1_28_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_28_6
PIXf1_29_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_29_6
PIXf1_30_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_305: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_30_6
PIXf1_31_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf1_31_6
PIXf1_32_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_6
PIXf1_33_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_33_6
PIXf1_34_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_34_6
PIXf1_35_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 jmp PIXf1_35_6
PIXf1_36_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f1
BBf1_343: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x4
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_36_6
PIXf1_37_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_37_6
PIXf1_0_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_0_7
PIXf1_1_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 jmp PIXf1_1_7
PIXf1_2_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x13
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_18: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf1_2_7
PIXf1_3_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_27: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 jmp PIXf1_3_7
PIXf1_4_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_7
PIXf1_5_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_7
PIXf1_6_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f1
BBf1_39: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_6_7
PIXf1_7_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x33
 mov eax, 1
 call PCJMP_f1
BBf1_50: mov dword [reg_a1], 0x0
BBf1_51: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_7_7
PIXf1_8_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 jmp PIXf1_8_7
PIXf1_9_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 sub dword [reg_sp1], 0x5
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_79: mov eax, dword [reg_bp1]
 jmp PIXf1_9_7
PIXf1_10_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x4f
 mov eax, 1
 call PCJMP_f1
 jmp PIXf1_10_7
PIXf1_11_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x5e
 mov eax, 1
 call PCJMP_f1
BBf1_103: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_11_7
PIXf1_12_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 jmp PIXf1_12_7
PIXf1_13_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_13_7
PIXf1_14_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_14_7
PIXf1_15_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_15_7
PIXf1_16_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_16_7
PIXf1_17_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x61
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 jmp PIXf1_17_7
PIXf1_18_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_169: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_18_7
PIXf1_19_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_188: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_19_7
PIXf1_20_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_20_7
PIXf1_21_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_21_7
PIXf1_22_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_216: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_217: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_22_7
PIXf1_23_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_226: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0xe6
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_227: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_23_7
PIXf1_24_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 jmp PIXf1_24_7
PIXf1_25_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xfb
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_250: mov dword [reg_a1], 0x8
 mov edi, 0xfc
 mov eax, 1
 call PCJMP_f1
BBf1_251: mov dword [reg_a1], 0xa
BBf1_252: mov eax, dword [reg_bp1]
 jmp PIXf1_25_7
PIXf1_26_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov edi, 0x10b
 mov eax, 1
 call PCJMP_f1
BBf1_266: mov dword [reg_a1], 0x61
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_26_7
PIXf1_27_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_278: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_27_7
PIXf1_28_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf1_28_7
PIXf1_29_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x39
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 jmp PIXf1_29_7
PIXf1_30_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_306: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x0
 jmp PIXf1_30_7
PIXf1_31_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf1_31_7
PIXf1_32_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_7
PIXf1_33_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_33_7
PIXf1_34_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_34_7
PIXf1_35_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_35_7
PIXf1_36_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_344: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2a
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_36_7
PIXf1_37_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffd9
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_37_7
PIXf1_0_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 jmp PIXf1_0_8
PIXf1_1_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf1_1_8
PIXf1_2_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_19: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 jmp PIXf1_2_8
PIXf1_3_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x16
 mov eax, 1
 call PCJMP_f1
BBf1_28: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcb
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 jmp PIXf1_3_8
PIXf1_4_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_8
PIXf1_5_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_8
PIXf1_6_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_40: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_6_8
PIXf1_7_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 jmp PIXf1_7_8
PIXf1_8_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_8_8
PIXf1_9_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x18
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 jmp PIXf1_9_8
PIXf1_10_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_91: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 jmp PIXf1_10_8
PIXf1_11_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_104: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 jmp PIXf1_11_8
PIXf1_12_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_12_8
PIXf1_13_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x7c
 mov eax, 1
 call PCJMP_f1
BBf1_123: mov dword [reg_a1], 0x0
BBf1_124: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 jmp PIXf1_13_8
PIXf1_14_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_136: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_14_8
PIXf1_15_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_15_8
PIXf1_16_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_16_8
PIXf1_17_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_152: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 jmp PIXf1_17_8
PIXf1_18_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_170: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_171: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_18_8
PIXf1_19_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_189: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_19_8
PIXf1_20_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_20_8
PIXf1_21_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_21_8
PIXf1_22_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_22_8
PIXf1_23_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xe5
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_228: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf1_23_8
PIXf1_24_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], 0x1
 mov edi, 0xf0
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_239: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x10
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_24_8
PIXf1_25_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_253: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x101
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_254: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_25_8
PIXf1_26_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
BBf1_267: mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_26_8
PIXf1_27_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_27_8
PIXf1_28_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x122
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f1
BBf1_290: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_28_8
PIXf1_29_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_298: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0x12e
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_299: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x3
 jmp PIXf1_29_8
PIXf1_30_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_307: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_30_8
PIXf1_31_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_31_8
PIXf1_32_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_8
PIXf1_33_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_33_8
PIXf1_34_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_34_8
PIXf1_35_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 jmp PIXf1_35_8
PIXf1_36_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffde
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x66
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdf
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x4a
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffe0
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x52
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffe1
 jmp PIXf1_36_8
PIXf1_37_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffd6
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffd7
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_37_8
PIXf1_0_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffce
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf1_0_9
PIXf1_1_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xb
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_10: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_1_9
PIXf1_2_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 jmp PIXf1_2_9
PIXf1_3_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_29: mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffcd
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_3_9
PIXf1_4_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_9
PIXf1_5_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_9
PIXf1_6_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_41: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xfffffe
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_6_9
PIXf1_7_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x35
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_52: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_7_9
PIXf1_8_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x43
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_66: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf1_8_9
PIXf1_9_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x51
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_80: mov edi, 0x52
 mov eax, 1
 call PCJMP_f1
BBf1_81: mov edi, 0x5b
 mov eax, 1
 call PCJMP_f1
BBf1_82: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_9_9
PIXf1_10_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_92: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_93: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_10_9
PIXf1_11_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_105: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x4
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_11_9
PIXf1_12_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_114: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf1_12_9
PIXf1_13_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x7e
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_125: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 jmp PIXf1_13_9
PIXf1_14_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_137: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_14_9
PIXf1_15_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_15_9
PIXf1_16_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_16_9
PIXf1_17_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x10
 jmp PIXf1_17_9
PIXf1_18_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf1_18_9
PIXf1_19_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_190: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x61
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_19_9
PIXf1_20_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_20_9
PIXf1_21_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_21_9
PIXf1_22_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_22_9
PIXf1_23_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf1_23_9
PIXf1_24_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_240: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xf2
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_241: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 jmp PIXf1_24_9
PIXf1_25_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff9
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x100
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
 jmp PIXf1_25_9
PIXf1_26_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f1
BBf1_268: mov edi, 0x117
 mov eax, 1
 call PCJMP_f1
BBf1_269: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 jmp PIXf1_26_9
PIXf1_27_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x102
 mov eax, 1
 call PCJMP_f1
BBf1_279: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 jmp PIXf1_27_9
PIXf1_28_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_291: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_28_9
PIXf1_29_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf1_29_9
PIXf1_30_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_308: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x6
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 jmp PIXf1_30_9
PIXf1_31_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_31_9
PIXf1_32_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_9
PIXf1_33_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_33_9
PIXf1_34_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_34_9
PIXf1_35_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_35_9
PIXf1_36_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffe2
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x75
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffe3
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x70
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffe4
 and dword [reg_b1], 0xffffff
 jmp PIXf1_36_9
PIXf1_37_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf1_37_9
PIXf1_0_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffce
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_0_10
PIXf1_1_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffcd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffd0
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_1_10
PIXf1_2_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov edi, 0x15
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_20: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
 jmp PIXf1_2_10
PIXf1_3_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_3_10
PIXf1_4_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_10
PIXf1_5_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_10
PIXf1_6_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf1_6_10
PIXf1_7_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_7_10
PIXf1_8_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_8_10
PIXf1_9_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_9_10
PIXf1_10_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x4
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 jmp PIXf1_10_10
PIXf1_11_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_106: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_11_10
PIXf1_12_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x6a
 mov eax, 1
 call PCJMP_f1
BBf1_115: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf1_12_10
PIXf1_13_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_13_10
PIXf1_14_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 sub dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_14_10
PIXf1_15_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_15_10
PIXf1_16_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_16_10
PIXf1_17_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf1_17_10
PIXf1_18_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xad
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_172: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf1_18_10
PIXf1_19_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xc0
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
 jmp PIXf1_19_10
PIXf1_20_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_20_10
PIXf1_21_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_21_10
PIXf1_22_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xda
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f1
BBf1_218: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_22_10
PIXf1_23_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_229: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_23_10
PIXf1_24_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 jmp PIXf1_24_10
PIXf1_25_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_255: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff9
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_25_10
PIXf1_26_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x10f
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_270: mov edi, 0x117
 mov eax, 1
 call PCJMP_f1
BBf1_271: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_26_10
PIXf1_27_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x11c
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_280: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x11a
 cmp dword [reg_a1], 0x0
 sete  al
 jmp PIXf1_27_10
PIXf1_28_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_292: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_28_10
PIXf1_29_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x12c
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f1
BBf1_300: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_29_10
PIXf1_30_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 jmp PIXf1_30_10
PIXf1_31_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x139
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f1
BBf1_313: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_31_10
PIXf1_32_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_10
PIXf1_33_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_33_10
PIXf1_34_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_34_10
PIXf1_35_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_35_10
PIXf1_36_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x50
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffe5
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x56
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffe6
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x64
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffe7
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x2c
 jmp PIXf1_36_10
PIXf1_37_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x15d
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f1
BBf1_349: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_37_10
PIXf1_0_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0x4
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_3: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffce
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_0_11
PIXf1_1_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_1_11
PIXf1_2_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_21: mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_2_11
PIXf1_3_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_3_11
PIXf1_4_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_11
PIXf1_5_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_11
PIXf1_6_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x2a
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f1
 jmp PIXf1_6_11
PIXf1_7_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x36
 mov eax, 1
 call PCJMP_f1
BBf1_53: mov dword [reg_a1], 0x0
BBf1_54: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 jmp PIXf1_7_11
PIXf1_8_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x44
 mov eax, 1
 call PCJMP_f1
BBf1_67: mov dword [reg_a1], 0x0
BBf1_68: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 jmp PIXf1_8_11
PIXf1_9_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_9_11
PIXf1_10_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_94: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x18
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_10_11
PIXf1_11_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x18
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x6c
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
 jmp PIXf1_11_11
PIXf1_12_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_116: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_12_11
PIXf1_13_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_13_11
PIXf1_14_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf1_14_11
PIXf1_15_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_15_11
PIXf1_16_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_16_11
PIXf1_17_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x99
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f1
BBf1_153: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_17_11
PIXf1_18_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x39
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 jmp PIXf1_18_11
PIXf1_19_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_191: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x7a
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_19_11
PIXf1_20_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_20_11
PIXf1_21_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_21_11
PIXf1_22_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xdb
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f1
BBf1_219: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_22_11
PIXf1_23_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_230: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_231: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_23_11
PIXf1_24_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_242: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xf6
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_243: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_24_11
PIXf1_25_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff9
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf1_25_11
PIXf1_26_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 jmp PIXf1_26_11
PIXf1_27_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_281: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_27_11
PIXf1_28_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_28_11
PIXf1_29_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_29_11
PIXf1_30_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x136
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_309: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_310: mov dword [reg_a1], 0x0
 jmp PIXf1_30_11
PIXf1_31_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_314: mov dword [reg_a1], 0x8000
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf1_31_11
PIXf1_32_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_11
PIXf1_33_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_33_11
PIXf1_34_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_34_11
PIXf1_35_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_35_11
PIXf1_36_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffe8
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x7e
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffe9
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x57
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffea
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x13
 mov eax, dword [reg_a1]
 jmp PIXf1_36_11
PIXf1_37_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_37_11
PIXf1_0_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 jmp PIXf1_0_12
PIXf1_1_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_1_12
PIXf1_2_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_22: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffe5
 and dword [reg_a1], 0xffffff
 jmp PIXf1_2_12
PIXf1_3_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1f
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_30: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_3_12
PIXf1_4_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_12
PIXf1_5_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_12
PIXf1_6_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_42: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_6_12
PIXf1_7_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0x38
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_55: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_56: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0x3a
 cmp dword [reg_a1], 0x0
 sete  al
 jmp PIXf1_7_12
PIXf1_8_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf1_8_12
PIXf1_9_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_9_12
PIXf1_10_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x60
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_95: mov edi, 0x61
 mov eax, 1
 call PCJMP_f1
BBf1_96: mov edi, 0x67
 mov eax, 1
 call PCJMP_f1
BBf1_97: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_10_12
PIXf1_11_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_107: mov edi, 0x6d
 mov eax, 1
 call PCJMP_f1
BBf1_108: mov edi, 0x73
 mov eax, 1
 call PCJMP_f1
BBf1_109: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_11_12
PIXf1_12_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_117: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x4
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 jmp PIXf1_12_12
PIXf1_13_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_126: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_13_12
PIXf1_14_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_14_12
PIXf1_15_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_15_12
PIXf1_16_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_16_12
PIXf1_17_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x9b
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_154: mov edi, 0x94
 mov eax, 1
 call PCJMP_f1
BBf1_155: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x9d
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_156: mov dword [reg_a1], 0x2d
 jmp PIXf1_17_12
PIXf1_18_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
BBf1_173: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_174: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_18_12
PIXf1_19_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_192: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xc4
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_193: mov dword [reg_a1], 0x41
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_19_12
PIXf1_20_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_20_12
PIXf1_21_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_21_12
PIXf1_22_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_220: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_22_12
PIXf1_23_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_23_12
PIXf1_24_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x78
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xf5
 jmp PIXf1_24_12
PIXf1_25_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_256: mov dword [reg_a1], 0x0
 jmp PIXf1_25_12
PIXf1_26_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x111
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_272: mov edi, 0x116
 mov eax, 1
 call PCJMP_f1
BBf1_273: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x114
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_274: mov dword [reg_a1], 0x1
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 jmp PIXf1_26_12
PIXf1_27_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov edi, 0x11b
 jmp PIXf1_27_12
PIXf1_28_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x125
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_28_12
PIXf1_29_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x12d
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_29_12
PIXf1_30_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_30_12
PIXf1_31_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_31_12
PIXf1_32_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_12
PIXf1_33_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_33_12
PIXf1_34_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_34_12
PIXf1_35_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x153
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f1
 jmp PIXf1_35_12
PIXf1_36_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffeb
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x20
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffec
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x3a
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffed
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x78
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 jmp PIXf1_36_12
PIXf1_37_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x15e
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_37_12
PIXf1_0_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_4: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0x6
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_5: mov edi, 0x8
 mov eax, 1
 call PCJMP_f1
BBf1_6: mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffd0
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_0_13
PIXf1_1_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_1_13
PIXf1_2_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_2_13
PIXf1_3_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffe5
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_3_13
PIXf1_4_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_13
PIXf1_5_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_13
PIXf1_6_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_43: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_44: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf1_6_13
PIXf1_7_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_57: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_7_13
PIXf1_8_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x46
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_69: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf1_8_13
PIXf1_9_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x54
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_83: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_9_13
PIXf1_10_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_10_13
PIXf1_11_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_11_13
PIXf1_12_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 jmp PIXf1_12_13
PIXf1_13_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x76
 mov eax, 1
 jmp PIXf1_13_13
PIXf1_14_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_14_13
PIXf1_15_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_15_13
PIXf1_16_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_16_13
PIXf1_17_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 sub dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_17_13
PIXf1_18_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_175: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 jmp PIXf1_18_13
PIXf1_19_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xc3
 cmp dword [reg_a1], 0x0
 sete  al
 jmp PIXf1_19_13
PIXf1_20_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_20_13
PIXf1_21_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_21_13
PIXf1_22_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_221: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 jmp PIXf1_22_13
PIXf1_23_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_23_13
PIXf1_24_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_244: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x58
 jmp PIXf1_24_13
PIXf1_25_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff9
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 jmp PIXf1_25_13
PIXf1_26_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_26_13
PIXf1_27_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_282: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
BBf1_283: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_27_13
PIXf1_28_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f1
BBf1_293: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_28_13
PIXf1_29_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f1
BBf1_301: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_29_13
PIXf1_30_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_30_13
PIXf1_31_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov dword [reg_a1], 0x13b
 mov eax, dword [reg_sp1]
 jmp PIXf1_31_13
PIXf1_32_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_13
PIXf1_33_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_33_13
PIXf1_34_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 jmp PIXf1_34_13
PIXf1_35_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_339: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_35_13
PIXf1_36_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffee
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x4c
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffef
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x54
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff0
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x64
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_36_13
PIXf1_37_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x4e
 mov eax, 1
 call PCJMP_f1
BBf1_350: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffde
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf1_37_13
PIXf1_0_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 jmp PIXf1_0_14
PIXf1_1_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 jmp PIXf1_1_14
PIXf1_2_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_2_14
PIXf1_3_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_3_14
PIXf1_4_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_14
PIXf1_5_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_14
PIXf1_6_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x5
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_6_14
PIXf1_7_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_58: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_7_14
PIXf1_8_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_8_14
PIXf1_9_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 jmp PIXf1_9_14
PIXf1_10_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 jmp PIXf1_10_14
PIXf1_11_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 jmp PIXf1_11_14
PIXf1_12_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
BBf1_118: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x18
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_12_14
PIXf1_13_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_127: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 jmp PIXf1_13_14
PIXf1_14_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_14_14
PIXf1_15_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_15_14
PIXf1_16_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_146: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 jmp PIXf1_16_14
PIXf1_17_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_157: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf1_17_14
PIXf1_18_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xb0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_18_14
PIXf1_19_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_194: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x5a
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_19_14
PIXf1_20_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_20_14
PIXf1_21_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_21_14
PIXf1_22_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_22_14
PIXf1_23_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xe8
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f1
BBf1_232: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0xea
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_233: mov edi, 0xe7
 jmp PIXf1_23_14
PIXf1_24_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_245: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 jmp PIXf1_24_14
PIXf1_25_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff9
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_257: mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_258: mov eax, dword [reg_bp1]
 jmp PIXf1_25_14
PIXf1_26_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_26_14
PIXf1_27_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_284: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf1_27_14
PIXf1_28_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_294: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_295: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_28_14
PIXf1_29_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_29_14
PIXf1_30_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x2
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_30_14
PIXf1_31_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_31_14
PIXf1_32_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_14
PIXf1_33_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_33_14
PIXf1_34_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_331: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 jmp PIXf1_34_14
PIXf1_35_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x154
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f1
BBf1_340: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x4
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 jmp PIXf1_35_14
PIXf1_36_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff1
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x22
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff2
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x78
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff3
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x56
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_36_14
PIXf1_37_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffd6
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_37_14
PIXf1_0_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf1_0_15
PIXf1_1_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
BBf1_11: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_1_15
PIXf1_2_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_2_15
PIXf1_3_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf1_3_15
PIXf1_4_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_15
PIXf1_5_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_15
PIXf1_6_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_45: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x18
 mov eax, dword [reg_a1]
 jmp PIXf1_6_15
PIXf1_7_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x2d
 mov eax, 1
 call PCJMP_f1
 jmp PIXf1_7_15
PIXf1_8_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x47
 mov eax, 1
 call PCJMP_f1
BBf1_70: mov dword [reg_a1], 0x0
BBf1_71: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 jmp PIXf1_8_15
PIXf1_9_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x55
 mov eax, 1
 call PCJMP_f1
BBf1_84: mov dword [reg_a1], 0x0
BBf1_85: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 jmp PIXf1_9_15
PIXf1_10_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_10_15
PIXf1_11_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_11_15
PIXf1_12_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x78
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_119: mov edi, 0x79
 mov eax, 1
 call PCJMP_f1
BBf1_120: mov edi, 0x7f
 mov eax, 1
 call PCJMP_f1
BBf1_121: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_12_15
PIXf1_13_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_13_15
PIXf1_14_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_14_15
PIXf1_15_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_15_15
PIXf1_16_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 jmp PIXf1_16_15
PIXf1_17_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_158: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_17_15
PIXf1_18_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f1
BBf1_176: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_b1], 0x1
 mov edi, 0xb4
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_177: mov dword [reg_a1], 0x61
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_18_15
PIXf1_19_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_195: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_196: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 jmp PIXf1_19_15
PIXf1_20_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_b1], 0x1
 mov edi, 0xd1
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_206: mov dword [reg_a1], 0x20
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf1_20_15
PIXf1_21_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_21_15
PIXf1_22_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_22_15
PIXf1_23_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_234: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x2d
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_23_15
PIXf1_24_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
BBf1_246: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0xf8
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_247: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf1_24_15
PIXf1_25_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x103
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf1_25_15
PIXf1_26_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x113
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f1
BBf1_275: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_26_15
PIXf1_27_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_285: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_27_15
PIXf1_28_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 jmp PIXf1_28_15
PIXf1_29_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_29_15
PIXf1_30_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x137
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f1
BBf1_311: mov eax, dword [reg_b1]
 jmp PIXf1_30_15
PIXf1_31_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_31_15
PIXf1_32_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_15
PIXf1_33_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x146
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_325: mov edi, 0x152
 mov eax, 1
 call PCJMP_f1
BBf1_326: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 jmp PIXf1_33_15
PIXf1_34_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x147
 mov eax, 1
 call PCJMP_f1
BBf1_332: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf1_34_15
PIXf1_35_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_35_15
PIXf1_36_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff4
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x5b
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff5
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x64
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff6
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x2c
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_36_15
PIXf1_37_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf1_37_15
PIXf1_0_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffd0
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 jmp PIXf1_0_16
PIXf1_1_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xd
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_12: mov edi, 0xe
 mov eax, 1
 call PCJMP_f1
BBf1_13: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_1_16
PIXf1_2_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffcd
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_2_16
PIXf1_3_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffcd
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf1_3_16
PIXf1_4_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_16
PIXf1_5_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_16
PIXf1_6_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x2f
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_46: mov edi, 0x30
 mov eax, 1
 call PCJMP_f1
BBf1_47: mov edi, 0x3b
 mov eax, 1
 call PCJMP_f1
BBf1_48: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 jmp PIXf1_6_16
PIXf1_7_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_59: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 jmp PIXf1_7_16
PIXf1_8_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x49
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_72: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_73: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0x4b
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_74: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_8_16
PIXf1_9_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_9_16
PIXf1_10_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_10_16
PIXf1_11_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_11_16
PIXf1_12_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_12_16
PIXf1_13_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_13_16
PIXf1_14_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_14_16
PIXf1_15_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_141: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 jmp PIXf1_15_16
PIXf1_16_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 jmp PIXf1_16_16
PIXf1_17_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_159: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf1_17_16
PIXf1_18_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xb3
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_178: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 jmp PIXf1_18_16
PIXf1_19_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_197: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_19_16
PIXf1_20_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xd0
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_207: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf1_20_16
PIXf1_21_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_21_16
PIXf1_22_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_22_16
PIXf1_23_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_23_16
PIXf1_24_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_24_16
PIXf1_25_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f1
BBf1_259: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x105
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_260: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_25_16
PIXf1_26_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_26_16
PIXf1_27_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_286: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 jmp PIXf1_27_16
PIXf1_28_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_296: mov dword [reg_a1], 0x30
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf1_28_16
PIXf1_29_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_29_16
PIXf1_30_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_30_16
PIXf1_31_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_31_16
PIXf1_32_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_32_16
PIXf1_33_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
BBf1_327: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf1_33_16
PIXf1_34_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x14e
 jmp PIXf1_34_16
PIXf1_35_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_35_16
PIXf1_36_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffff7
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x7e
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff8
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x57
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff9
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x41
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 jmp PIXf1_36_16
PIXf1_37_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_351: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffd6
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_37_16
PIXf1_0_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 jmp PIXf1_0_17
PIXf1_1_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 sub dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x9
 mov eax, 1
 call PCJMP_f1
BBf1_14: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_1_17
PIXf1_2_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_2_17
PIXf1_3_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_3_17
PIXf1_4_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_4_17
PIXf1_5_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_17
PIXf1_6_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_6_17
PIXf1_7_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_7_17
PIXf1_8_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_8_17
PIXf1_9_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_9_17
PIXf1_10_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_10_17
PIXf1_11_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_11_17
PIXf1_12_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_12_17
PIXf1_13_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_128: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_129: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_13_17
PIXf1_14_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x8a
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f1
BBf1_138: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf1_14_17
PIXf1_15_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_142: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_143: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_15_17
PIXf1_16_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x94
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_147: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_16_17
PIXf1_17_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xc
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 jmp PIXf1_17_17
PIXf1_18_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x66
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 jmp PIXf1_18_17
PIXf1_19_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_198: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_19_17
PIXf1_20_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x7f
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 jmp PIXf1_20_17
PIXf1_21_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_21_17
PIXf1_22_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_22_17
PIXf1_23_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_23_17
PIXf1_24_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_24_17
PIXf1_25_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_25_17
PIXf1_26_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_26_17
PIXf1_27_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_27_17
PIXf1_28_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_28_17
PIXf1_29_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_29_17
PIXf1_30_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_30_17
PIXf1_31_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, dword [reg_c1]
 mov eax, 1
 call PCJMP_f1
BBf1_315: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 jmp PIXf1_31_17
PIXf1_32_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov dword [reg_a1], 0x140
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_32_17
PIXf1_33_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x149
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_328: mov edi, 0x14a
 mov eax, 1
 call PCJMP_f1
BBf1_329: mov edi, 0x14c
 mov eax, 1
 call PCJMP_f1
BBf1_330: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_33_17
PIXf1_34_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_333: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x150
 mov eax, 1
 call PCJMP_f1
BBf1_334: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf1_34_17
PIXf1_35_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf1_35_17
PIXf1_36_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x64
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x39
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x78
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 jmp PIXf1_36_17
PIXf1_37_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffd6
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x159
 mov eax, 1
 call PCJMP_f1
BBf1_352: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 jmp PIXf1_37_17
PIXf1_0_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_0_18
PIXf1_1_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_1_18
PIXf1_2_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 jmp PIXf1_2_18
PIXf1_3_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_3_18
PIXf1_4_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_33: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 sub dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 jmp PIXf1_4_18
PIXf1_5_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_5_18
PIXf1_6_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_6_18
PIXf1_7_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_7_18
PIXf1_8_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_8_18
PIXf1_9_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x57
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_86: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_9_18
PIXf1_10_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x63
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_98: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_10_18
PIXf1_11_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x6f
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_110: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_11_18
PIXf1_12_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_12_18
PIXf1_13_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
BBf1_130: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x84
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_131: mov edi, 0x85
 mov eax, 1
 call PCJMP_f1
BBf1_132: mov edi, 0x87
 jmp PIXf1_13_18
PIXf1_14_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_14_18
PIXf1_15_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x20
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffe0
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf1_15_18
PIXf1_16_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf1_16_18
PIXf1_17_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], 0x1
 mov edi, 0xa1
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_160: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf1_17_18
PIXf1_18_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_179: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_180: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xb8
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_181: mov dword [reg_a1], 0x41
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf1_18_18
PIXf1_19_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xc7
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f1
BBf1_199: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_19_18
PIXf1_20_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
BBf1_208: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_209: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_20_18
PIXf1_21_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x24
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_b1], 0x24
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_21_18
PIXf1_22_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_222: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x7
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 jmp PIXf1_22_18
PIXf1_23_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xec
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_235: mov dword [reg_a1], 0x1
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf1_23_18
PIXf1_24_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_24_18
PIXf1_25_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_25_18
PIXf1_26_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_26_18
PIXf1_27_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_27_18
PIXf1_28_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf1_28_18
PIXf1_29_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf1_29_18
PIXf1_30_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf1_30_18
PIXf1_31_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x13d
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_316: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf1_31_18
PIXf1_32_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov edi, dword [reg_c1]
 mov eax, 1
 call PCJMP_f1
BBf1_320: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_32_18
PIXf1_33_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf1_33_18
PIXf1_34_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf1_34_18
PIXf1_35_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf1_35_18
PIXf1_36_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x44
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x56
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x7b
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf1_36_18
PIXf1_37_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
BBf1_353: nop
 mov eax, 1
 mov dword [reg_d1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [reg_a1], eax
 and dword [reg_b1], 0xffffff
 add dword [reg_sp1], 0x1
 and dword [reg_d1], 0xffffff
 sete  al
 mov dword [reg_b1], eax
 add dword [reg_sp1], 0x1
 add dword [reg_d1], 0xffffff
 mov dword [reg_a1], eax
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_a1], eax
 mov eax, 1
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov ecx, dword [reg_d1]
 jmp PIXf1_37_18
PIXf1_0_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffd0
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov esi, 1
 jmp PIX_END_f1
PIXf1_1_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov esi, 2
 jmp PIX_END_f1
PIXf1_2_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 mov esi, 3
 jmp PIX_END_f1
PIXf1_3_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_31: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 mov esi, 4
 jmp PIX_END_f1
PIXf1_4_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x1d
 mov eax, 1
 call PCJMP_f1
BBf1_34: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov esi, 5
 jmp PIX_END_f1
PIXf1_5_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_36: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 mov esi, 6
 jmp PIX_END_f1
PIXf1_6_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov esi, 7
 jmp PIX_END_f1
PIXf1_7_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_60: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_61: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov esi, 8
 jmp PIX_END_f1
PIXf1_8_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov esi, 9
 jmp PIX_END_f1
PIXf1_9_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov esi, 10
 jmp PIX_END_f1
PIXf1_10_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 mov esi, 11
 jmp PIX_END_f1
PIXf1_11_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov esi, 12
 jmp PIX_END_f1
PIXf1_12_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov esi, 13
 jmp PIX_END_f1
PIXf1_13_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_133: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, 0x4
 mov ecx, reg_a1
 mov esi, 14
 jmp PIX_END_f1
PIXf1_14_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 mov esi, 15
 jmp PIX_END_f1
PIXf1_15_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x20
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov esi, 16
 jmp PIX_END_f1
PIXf1_16_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_148: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 sub dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov esi, 17
 jmp PIX_END_f1
PIXf1_17_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_161: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xa3
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_162: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 mov esi, 18
 jmp PIX_END_f1
PIXf1_18_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov esi, 19
 jmp PIX_END_f1
PIXf1_19_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov dword [reg_b1], 0x1
 mov edi, 0xca
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_200: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xc9
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 mov esi, 20
 jmp PIX_END_f1
PIXf1_20_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_210: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_211: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 mov esi, 21
 jmp PIX_END_f1
PIXf1_21_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 mov esi, 22
 jmp PIX_END_f1
PIXf1_22_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov esi, 23
 jmp PIX_END_f1
PIXf1_23_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov esi, 24
 jmp PIX_END_f1
PIXf1_24_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 mov esi, 25
 jmp PIX_END_f1
PIXf1_25_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f1
BBf1_261: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 mov esi, 26
 jmp PIX_END_f1
PIXf1_26_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x116
 mov eax, 1
 call PCJMP_f1
BBf1_276: mov dword [reg_a1], 0x1
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov esi, 27
 jmp PIX_END_f1
PIXf1_27_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov esi, 28
 jmp PIX_END_f1
PIXf1_28_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov esi, 29
 jmp PIX_END_f1
PIXf1_29_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov esi, 30
 jmp PIX_END_f1
PIXf1_30_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x138
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov esi, 31
 jmp PIX_END_f1
PIXf1_31_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov esi, 32
 jmp PIX_END_f1
PIXf1_32_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x8000
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov esi, 33
 jmp PIX_END_f1
PIXf1_33_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov esi, 34
 jmp PIX_END_f1
PIXf1_34_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x150
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_335: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_336: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 mov esi, 35
 jmp PIX_END_f1
PIXf1_35_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x155
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f1
BBf1_341: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov esi, 36
 jmp PIX_END_f1
PIXf1_36_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffd9
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x11
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffda
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x22
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdb
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x33
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdc
 mov esi, 37
 jmp PIX_END_f1
PIXf1_37_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov dword [mem1 + 4*ecx], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], eax
 call PCJMP_f1
 cmp dword [reg_a1], 0x0
 call PCJMP_f1
 mov eax, dword [reg_sp1]
 mov dword [reg_a1], 0x0
 mov eax, 1
 mov eax, dword [mem1 + 4*eax]
 sete  al
 cmp dword [reg_b1], 0x0
 and dword [reg_a1], 0xffffff
 mov ecx, dword [reg_b1]
 mov eax, dword [reg_bp1]
 mov eax, dword [reg_sp1]
 mov dword [reg_sp1], eax
 mov dword [reg_d1], eax
 mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 and dword [reg_sp1], 0xffffff
 and dword [reg_sp1], 0xffffff
 mov esi, 38
 jmp PIX_END_f1
PIX_PAD_f1_0: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_1
PIX_PAD_f1_1: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_2
PIX_PAD_f1_2: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_3
PIX_PAD_f1_3: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_4
PIX_PAD_f1_4: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_5
PIX_PAD_f1_5: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_6
PIX_PAD_f1_6: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_7
PIX_PAD_f1_7: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_8
PIX_PAD_f1_8: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_9
PIX_PAD_f1_9: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_10
PIX_PAD_f1_10: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_11
PIX_PAD_f1_11: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_12
PIX_PAD_f1_12: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_13
PIX_PAD_f1_13: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_14
PIX_PAD_f1_14: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_15
PIX_PAD_f1_15: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_16
PIX_PAD_f1_16: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_17
PIX_PAD_f1_17: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_18
PIX_PAD_f1_18: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_END_f1
PIX_END_f1:
jmp PIX_START_f1
PIX_TABLE_f1:
 dd PIXf1_0_0
 dd PIXf1_1_0
 dd PIXf1_2_0
 dd PIXf1_3_0
 dd PIXf1_4_0
 dd PIXf1_5_0
 dd PIXf1_6_0
 dd PIXf1_7_0
 dd PIXf1_8_0
 dd PIXf1_9_0
 dd PIXf1_10_0
 dd PIXf1_11_0
 dd PIXf1_12_0
 dd PIXf1_13_0
 dd PIXf1_14_0
 dd PIXf1_15_0
 dd PIXf1_16_0
 dd PIXf1_17_0
 dd PIXf1_18_0
 dd PIXf1_19_0
 dd PIXf1_20_0
 dd PIXf1_21_0
 dd PIXf1_22_0
 dd PIXf1_23_0
 dd PIXf1_24_0
 dd PIXf1_25_0
 dd PIXf1_26_0
 dd PIXf1_27_0
 dd PIXf1_28_0
 dd PIXf1_29_0
 dd PIXf1_30_0
 dd PIXf1_31_0
 dd PIXf1_32_0
 dd PIXf1_33_0
 dd PIXf1_34_0
 dd PIXf1_35_0
 dd PIXf1_36_0
 dd PIXf1_37_0
 dd PIX_PAD_f1_0
JMP_TABLE_f1:
 dd BBf1_0 + 0x13371337
 dd BBf1_1 + 0x13371337
 dd BBf1_2 + 0x13371337
 dd BBf1_3 + 0x13371337
 dd BBf1_4 + 0x13371337
 dd BBf1_5 + 0x13371337
 dd BBf1_6 + 0x13371337
 dd BBf1_7 + 0x13371337
 dd BBf1_8 + 0x13371337
 dd BBf1_9 + 0x13371337
 dd BBf1_10 + 0x13371337
 dd BBf1_11 + 0x13371337
 dd BBf1_12 + 0x13371337
 dd BBf1_13 + 0x13371337
 dd BBf1_14 + 0x13371337
 dd BBf1_15 + 0x13371337
 dd BBf1_16 + 0x13371337
 dd BBf1_17 + 0x13371337
 dd BBf1_18 + 0x13371337
 dd BBf1_19 + 0x13371337
 dd BBf1_20 + 0x13371337
 dd BBf1_21 + 0x13371337
 dd BBf1_22 + 0x13371337
 dd BBf1_23 + 0x13371337
 dd BBf1_24 + 0x13371337
 dd BBf1_25 + 0x13371337
 dd BBf1_26 + 0x13371337
 dd BBf1_27 + 0x13371337
 dd BBf1_28 + 0x13371337
 dd BBf1_29 + 0x13371337
 dd BBf1_30 + 0x13371337
 dd BBf1_31 + 0x13371337
 dd BBf1_32 + 0x13371337
 dd BBf1_33 + 0x13371337
 dd BBf1_34 + 0x13371337
 dd BBf1_35 + 0x13371337
 dd BBf1_36 + 0x13371337
 dd BBf1_37 + 0x13371337
 dd BBf1_38 + 0x13371337
 dd BBf1_39 + 0x13371337
 dd BBf1_40 + 0x13371337
 dd BBf1_41 + 0x13371337
 dd BBf1_42 + 0x13371337
 dd BBf1_43 + 0x13371337
 dd BBf1_44 + 0x13371337
 dd BBf1_45 + 0x13371337
 dd BBf1_46 + 0x13371337
 dd BBf1_47 + 0x13371337
 dd BBf1_48 + 0x13371337
 dd BBf1_49 + 0x13371337
 dd BBf1_50 + 0x13371337
 dd BBf1_51 + 0x13371337
 dd BBf1_52 + 0x13371337
 dd BBf1_53 + 0x13371337
 dd BBf1_54 + 0x13371337
 dd BBf1_55 + 0x13371337
 dd BBf1_56 + 0x13371337
 dd BBf1_57 + 0x13371337
 dd BBf1_58 + 0x13371337
 dd BBf1_59 + 0x13371337
 dd BBf1_60 + 0x13371337
 dd BBf1_61 + 0x13371337
 dd BBf1_62 + 0x13371337
 dd BBf1_63 + 0x13371337
 dd BBf1_64 + 0x13371337
 dd BBf1_65 + 0x13371337
 dd BBf1_66 + 0x13371337
 dd BBf1_67 + 0x13371337
 dd BBf1_68 + 0x13371337
 dd BBf1_69 + 0x13371337
 dd BBf1_70 + 0x13371337
 dd BBf1_71 + 0x13371337
 dd BBf1_72 + 0x13371337
 dd BBf1_73 + 0x13371337
 dd BBf1_74 + 0x13371337
 dd BBf1_75 + 0x13371337
 dd BBf1_76 + 0x13371337
 dd BBf1_77 + 0x13371337
 dd BBf1_78 + 0x13371337
 dd BBf1_79 + 0x13371337
 dd BBf1_80 + 0x13371337
 dd BBf1_81 + 0x13371337
 dd BBf1_82 + 0x13371337
 dd BBf1_83 + 0x13371337
 dd BBf1_84 + 0x13371337
 dd BBf1_85 + 0x13371337
 dd BBf1_86 + 0x13371337
 dd BBf1_87 + 0x13371337
 dd BBf1_88 + 0x13371337
 dd BBf1_89 + 0x13371337
 dd BBf1_90 + 0x13371337
 dd BBf1_91 + 0x13371337
 dd BBf1_92 + 0x13371337
 dd BBf1_93 + 0x13371337
 dd BBf1_94 + 0x13371337
 dd BBf1_95 + 0x13371337
 dd BBf1_96 + 0x13371337
 dd BBf1_97 + 0x13371337
 dd BBf1_98 + 0x13371337
 dd BBf1_99 + 0x13371337
 dd BBf1_100 + 0x13371337
 dd BBf1_101 + 0x13371337
 dd BBf1_102 + 0x13371337
 dd BBf1_103 + 0x13371337
 dd BBf1_104 + 0x13371337
 dd BBf1_105 + 0x13371337
 dd BBf1_106 + 0x13371337
 dd BBf1_107 + 0x13371337
 dd BBf1_108 + 0x13371337
 dd BBf1_109 + 0x13371337
 dd BBf1_110 + 0x13371337
 dd BBf1_111 + 0x13371337
 dd BBf1_112 + 0x13371337
 dd BBf1_113 + 0x13371337
 dd BBf1_114 + 0x13371337
 dd BBf1_115 + 0x13371337
 dd BBf1_116 + 0x13371337
 dd BBf1_117 + 0x13371337
 dd BBf1_118 + 0x13371337
 dd BBf1_119 + 0x13371337
 dd BBf1_120 + 0x13371337
 dd BBf1_121 + 0x13371337
 dd BBf1_122 + 0x13371337
 dd BBf1_123 + 0x13371337
 dd BBf1_124 + 0x13371337
 dd BBf1_125 + 0x13371337
 dd BBf1_126 + 0x13371337
 dd BBf1_127 + 0x13371337
 dd BBf1_128 + 0x13371337
 dd BBf1_129 + 0x13371337
 dd BBf1_130 + 0x13371337
 dd BBf1_131 + 0x13371337
 dd BBf1_132 + 0x13371337
 dd BBf1_133 + 0x13371337
 dd BBf1_134 + 0x13371337
 dd BBf1_135 + 0x13371337
 dd BBf1_136 + 0x13371337
 dd BBf1_137 + 0x13371337
 dd BBf1_138 + 0x13371337
 dd BBf1_139 + 0x13371337
 dd BBf1_140 + 0x13371337
 dd BBf1_141 + 0x13371337
 dd BBf1_142 + 0x13371337
 dd BBf1_143 + 0x13371337
 dd BBf1_144 + 0x13371337
 dd BBf1_145 + 0x13371337
 dd BBf1_146 + 0x13371337
 dd BBf1_147 + 0x13371337
 dd BBf1_148 + 0x13371337
 dd BBf1_149 + 0x13371337
 dd BBf1_150 + 0x13371337
 dd BBf1_151 + 0x13371337
 dd BBf1_152 + 0x13371337
 dd BBf1_153 + 0x13371337
 dd BBf1_154 + 0x13371337
 dd BBf1_155 + 0x13371337
 dd BBf1_156 + 0x13371337
 dd BBf1_157 + 0x13371337
 dd BBf1_158 + 0x13371337
 dd BBf1_159 + 0x13371337
 dd BBf1_160 + 0x13371337
 dd BBf1_161 + 0x13371337
 dd BBf1_162 + 0x13371337
 dd BBf1_163 + 0x13371337
 dd BBf1_164 + 0x13371337
 dd BBf1_165 + 0x13371337
 dd BBf1_166 + 0x13371337
 dd BBf1_167 + 0x13371337
 dd BBf1_168 + 0x13371337
 dd BBf1_169 + 0x13371337
 dd BBf1_170 + 0x13371337
 dd BBf1_171 + 0x13371337
 dd BBf1_172 + 0x13371337
 dd BBf1_173 + 0x13371337
 dd BBf1_174 + 0x13371337
 dd BBf1_175 + 0x13371337
 dd BBf1_176 + 0x13371337
 dd BBf1_177 + 0x13371337
 dd BBf1_178 + 0x13371337
 dd BBf1_179 + 0x13371337
 dd BBf1_180 + 0x13371337
 dd BBf1_181 + 0x13371337
 dd BBf1_182 + 0x13371337
 dd BBf1_183 + 0x13371337
 dd BBf1_184 + 0x13371337
 dd BBf1_185 + 0x13371337
 dd BBf1_186 + 0x13371337
 dd BBf1_187 + 0x13371337
 dd BBf1_188 + 0x13371337
 dd BBf1_189 + 0x13371337
 dd BBf1_190 + 0x13371337
 dd BBf1_191 + 0x13371337
 dd BBf1_192 + 0x13371337
 dd BBf1_193 + 0x13371337
 dd BBf1_194 + 0x13371337
 dd BBf1_195 + 0x13371337
 dd BBf1_196 + 0x13371337
 dd BBf1_197 + 0x13371337
 dd BBf1_198 + 0x13371337
 dd BBf1_199 + 0x13371337
 dd BBf1_200 + 0x13371337
 dd BBf1_201 + 0x13371337
 dd BBf1_202 + 0x13371337
 dd BBf1_203 + 0x13371337
 dd BBf1_204 + 0x13371337
 dd BBf1_205 + 0x13371337
 dd BBf1_206 + 0x13371337
 dd BBf1_207 + 0x13371337
 dd BBf1_208 + 0x13371337
 dd BBf1_209 + 0x13371337
 dd BBf1_210 + 0x13371337
 dd BBf1_211 + 0x13371337
 dd BBf1_212 + 0x13371337
 dd BBf1_213 + 0x13371337
 dd BBf1_214 + 0x13371337
 dd BBf1_215 + 0x13371337
 dd BBf1_216 + 0x13371337
 dd BBf1_217 + 0x13371337
 dd BBf1_218 + 0x13371337
 dd BBf1_219 + 0x13371337
 dd BBf1_220 + 0x13371337
 dd BBf1_221 + 0x13371337
 dd BBf1_222 + 0x13371337
 dd BBf1_223 + 0x13371337
 dd BBf1_224 + 0x13371337
 dd BBf1_225 + 0x13371337
 dd BBf1_226 + 0x13371337
 dd BBf1_227 + 0x13371337
 dd BBf1_228 + 0x13371337
 dd BBf1_229 + 0x13371337
 dd BBf1_230 + 0x13371337
 dd BBf1_231 + 0x13371337
 dd BBf1_232 + 0x13371337
 dd BBf1_233 + 0x13371337
 dd BBf1_234 + 0x13371337
 dd BBf1_235 + 0x13371337
 dd BBf1_236 + 0x13371337
 dd BBf1_237 + 0x13371337
 dd BBf1_238 + 0x13371337
 dd BBf1_239 + 0x13371337
 dd BBf1_240 + 0x13371337
 dd BBf1_241 + 0x13371337
 dd BBf1_242 + 0x13371337
 dd BBf1_243 + 0x13371337
 dd BBf1_244 + 0x13371337
 dd BBf1_245 + 0x13371337
 dd BBf1_246 + 0x13371337
 dd BBf1_247 + 0x13371337
 dd BBf1_248 + 0x13371337
 dd BBf1_249 + 0x13371337
 dd BBf1_250 + 0x13371337
 dd BBf1_251 + 0x13371337
 dd BBf1_252 + 0x13371337
 dd BBf1_253 + 0x13371337
 dd BBf1_254 + 0x13371337
 dd BBf1_255 + 0x13371337
 dd BBf1_256 + 0x13371337
 dd BBf1_257 + 0x13371337
 dd BBf1_258 + 0x13371337
 dd BBf1_259 + 0x13371337
 dd BBf1_260 + 0x13371337
 dd BBf1_261 + 0x13371337
 dd BBf1_262 + 0x13371337
 dd BBf1_263 + 0x13371337
 dd BBf1_264 + 0x13371337
 dd BBf1_265 + 0x13371337
 dd BBf1_266 + 0x13371337
 dd BBf1_267 + 0x13371337
 dd BBf1_268 + 0x13371337
 dd BBf1_269 + 0x13371337
 dd BBf1_270 + 0x13371337
 dd BBf1_271 + 0x13371337
 dd BBf1_272 + 0x13371337
 dd BBf1_273 + 0x13371337
 dd BBf1_274 + 0x13371337
 dd BBf1_275 + 0x13371337
 dd BBf1_276 + 0x13371337
 dd BBf1_277 + 0x13371337
 dd BBf1_278 + 0x13371337
 dd BBf1_279 + 0x13371337
 dd BBf1_280 + 0x13371337
 dd BBf1_281 + 0x13371337
 dd BBf1_282 + 0x13371337
 dd BBf1_283 + 0x13371337
 dd BBf1_284 + 0x13371337
 dd BBf1_285 + 0x13371337
 dd BBf1_286 + 0x13371337
 dd BBf1_287 + 0x13371337
 dd BBf1_288 + 0x13371337
 dd BBf1_289 + 0x13371337
 dd BBf1_290 + 0x13371337
 dd BBf1_291 + 0x13371337
 dd BBf1_292 + 0x13371337
 dd BBf1_293 + 0x13371337
 dd BBf1_294 + 0x13371337
 dd BBf1_295 + 0x13371337
 dd BBf1_296 + 0x13371337
 dd BBf1_297 + 0x13371337
 dd BBf1_298 + 0x13371337
 dd BBf1_299 + 0x13371337
 dd BBf1_300 + 0x13371337
 dd BBf1_301 + 0x13371337
 dd BBf1_302 + 0x13371337
 dd BBf1_303 + 0x13371337
 dd BBf1_304 + 0x13371337
 dd BBf1_305 + 0x13371337
 dd BBf1_306 + 0x13371337
 dd BBf1_307 + 0x13371337
 dd BBf1_308 + 0x13371337
 dd BBf1_309 + 0x13371337
 dd BBf1_310 + 0x13371337
 dd BBf1_311 + 0x13371337
 dd BBf1_312 + 0x13371337
 dd BBf1_313 + 0x13371337
 dd BBf1_314 + 0x13371337
 dd BBf1_315 + 0x13371337
 dd BBf1_316 + 0x13371337
 dd BBf1_317 + 0x13371337
 dd BBf1_318 + 0x13371337
 dd BBf1_319 + 0x13371337
 dd BBf1_320 + 0x13371337
 dd BBf1_321 + 0x13371337
 dd BBf1_322 + 0x13371337
 dd BBf1_323 + 0x13371337
 dd BBf1_324 + 0x13371337
 dd BBf1_325 + 0x13371337
 dd BBf1_326 + 0x13371337
 dd BBf1_327 + 0x13371337
 dd BBf1_328 + 0x13371337
 dd BBf1_329 + 0x13371337
 dd BBf1_330 + 0x13371337
 dd BBf1_331 + 0x13371337
 dd BBf1_332 + 0x13371337
 dd BBf1_333 + 0x13371337
 dd BBf1_334 + 0x13371337
 dd BBf1_335 + 0x13371337
 dd BBf1_336 + 0x13371337
 dd BBf1_337 + 0x13371337
 dd BBf1_338 + 0x13371337
 dd BBf1_339 + 0x13371337
 dd BBf1_340 + 0x13371337
 dd BBf1_341 + 0x13371337
 dd BBf1_342 + 0x13371337
 dd BBf1_343 + 0x13371337
 dd BBf1_344 + 0x13371337
 dd BBf1_345 + 0x13371337
 dd BBf1_346 + 0x13371337
 dd BBf1_347 + 0x13371337
 dd BBf1_348 + 0x13371337
 dd BBf1_349 + 0x13371337
 dd BBf1_350 + 0x13371337
 dd BBf1_351 + 0x13371337
 dd BBf1_352 + 0x13371337
; ----- End of func 0 -----
;;;;;; ;;; ;=============================== END FUNC 1


;;;;;; ;;; ;=============================== START FUNC 2
section .data
reg_a2: dd 0
reg_b2: dd 0
reg_c2: dd 0
reg_d2: dd 0
reg_bp2: dd 0
reg_sp2: dd 0
reg_pc2: dd 0


section .text
global _start2
_start2:
 mov ebx, 0x1 ; fd
 mov edx, 1 ; len
 mov edi, 0
 mov eax, 1
; ----- Start of 0 -----
func_2:
 PCJMP_f2:
  cmp eax, 1
  je _PCJMP_f2
  ret
 _PCJMP_f2:
  pop eax
  mov eax, [JMP_TABLE_f2 + 4*edi]
  sub eax, 0x73317331
  jz PIX_START_f2
  jmp eax
PIX_START_f2:
 mov esi, [PIX_TABLE_f2 + 4*esi]
 jmp esi
PIXf2_0_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_0: mov edi, 0x158
 mov eax, 1
 call PCJMP_f2
BBf2_1: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x34
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_0_1
PIXf2_1_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_1_1
PIXf2_2_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_2_1
PIXf2_3_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_3_1
PIXf2_4_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1f
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_30: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_4_1
PIXf2_5_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_35: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 jmp PIXf2_5_1
PIXf2_6_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_43: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_44: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_6_1
PIXf2_7_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_58: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_7_1
PIXf2_8_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x47
 mov eax, 1
 call PCJMP_f2
BBf2_70: mov dword [reg_a2], 0x0
BBf2_71: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 jmp PIXf2_8_1
PIXf2_9_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_9_1
PIXf2_10_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x64
 mov eax, 1
 call PCJMP_f2
BBf2_99: mov dword [reg_a2], 0x0
BBf2_100: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_10_1
PIXf2_11_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_11_1
PIXf2_12_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 jmp PIXf2_12_1
PIXf2_13_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_128: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_13_1
PIXf2_14_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x8d
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_140: mov edi, 0x89
 mov eax, 1
 call PCJMP_f2
BBf2_141: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_14_1
PIXf2_15_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x10
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_15_1
PIXf2_16_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xc
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xa1
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_160: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_16_1
PIXf2_17_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xb0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f2
BBf2_176: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_b2], 0x1
 mov edi, 0xb4
 jmp PIXf2_17_1
PIXf2_18_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x7a
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
 jmp PIXf2_18_1
PIXf2_19_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_208: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_209: mov eax, dword [reg_b2]
 jmp PIXf2_19_1
PIXf2_20_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xda
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_20_1
PIXf2_21_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_227: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_21_1
PIXf2_22_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_238: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_22_1
PIXf2_23_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_23_1
PIXf2_24_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x113
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_24_1
PIXf2_25_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 jmp PIXf2_25_1
PIXf2_26_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_286: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_26_1
PIXf2_27_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 jmp PIXf2_27_1
PIXf2_28_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x12f
 mov eax, 1
 call PCJMP_f2
BBf2_302: mov edi, 0x130
 mov eax, 1
 call PCJMP_f2
BBf2_303: mov edi, 0x128
 mov eax, 1
 call PCJMP_f2
BBf2_304: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_28_1
PIXf2_29_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x139
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_29_1
PIXf2_30_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 jmp PIXf2_30_1
PIXf2_31_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov edi, 0x150
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_335: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_336: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_31_1
PIXf2_32_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_32_1
PIXf2_33_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x157
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_33_1
PIXf2_34_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x15
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff3
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0xfa
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff4
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0xf6
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff5
 and dword [reg_b2], 0xffffff
 jmp PIXf2_34_1
PIXf2_35_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffda
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_35_1
PIXf2_0_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffd0
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 jmp PIXf2_0_2
PIXf2_1_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_1_2
PIXf2_2_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_2_2
PIXf2_3_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffcd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_3_2
PIXf2_4_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffe5
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_4_2
PIXf2_5_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_36: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_5_2
PIXf2_6_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x5
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_6_2
PIXf2_7_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x2d
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_7_2
PIXf2_8_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x49
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_72: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_73: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0x4b
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_74: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_8_2
PIXf2_9_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x57
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_86: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_9_2
PIXf2_10_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 cmp dword [reg_a2], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x66
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_101: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_10_2
PIXf2_11_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 jmp PIXf2_11_2
PIXf2_12_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_12_2
PIXf2_13_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_129: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
BBf2_130: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_13_2
PIXf2_14_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_142: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 jmp PIXf2_14_2
PIXf2_15_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x95
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f2
BBf2_149: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_15_2
PIXf2_16_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_16_2
PIXf2_17_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_177: mov dword [reg_a2], 0x61
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_17_2
PIXf2_18_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_192: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xc4
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_193: mov dword [reg_a2], 0x41
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_18_2
PIXf2_19_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_210: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_19_2
PIXf2_20_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f2
BBf2_218: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xdb
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_20_2
PIXf2_21_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xe5
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_228: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_21_2
PIXf2_22_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xf0
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_239: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_22_2
PIXf2_23_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffff9
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_23_2
PIXf2_24_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f2
BBf2_275: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_24_2
PIXf2_25_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x11c
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_280: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x11a
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_281: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_25_2
PIXf2_26_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_26_2
PIXf2_27_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 jmp PIXf2_27_2
PIXf2_28_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_305: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_28_2
PIXf2_29_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f2
BBf2_313: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_29_2
PIXf2_30_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov edi, 0x149
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_328: mov edi, 0x14a
 mov eax, 1
 call PCJMP_f2
BBf2_329: mov edi, 0x14c
 mov eax, 1
 call PCJMP_f2
BBf2_330: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_30_2
PIXf2_31_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_31_2
PIXf2_32_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x155
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_32_2
PIXf2_33_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f2
BBf2_343: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_33_2
PIXf2_34_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0x3d
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff6
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x46
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff7
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x1f
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff8
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0xfd
 jmp PIXf2_34_2
PIXf2_35_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_35_2
PIXf2_0_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_0_3
PIXf2_1_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffce
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_1_3
PIXf2_2_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_2_3
PIXf2_3_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_3_3
PIXf2_4_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_4_3
PIXf2_5_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x26
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_37: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_5_3
PIXf2_6_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_45: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x18
 mov eax, dword [reg_a2]
 jmp PIXf2_6_3
PIXf2_7_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_59: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 jmp PIXf2_7_3
PIXf2_8_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_8_3
PIXf2_9_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 jmp PIXf2_9_3
PIXf2_10_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 jmp PIXf2_10_3
PIXf2_11_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_11_3
PIXf2_12_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 jmp PIXf2_12_3
PIXf2_13_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov edi, 0x84
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_131: mov edi, 0x85
 mov eax, 1
 call PCJMP_f2
BBf2_132: mov edi, 0x87
 mov eax, 1
 call PCJMP_f2
BBf2_133: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_13_3
PIXf2_14_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_143: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x20
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffe0
 and dword [reg_a2], 0xffffff
 jmp PIXf2_14_3
PIXf2_15_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_15_3
PIXf2_16_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_161: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xa3
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_162: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_16_3
PIXf2_17_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xb3
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_178: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_17_3
PIXf2_18_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xc3
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_194: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_18_3
PIXf2_19_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_211: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_sp2]
 jmp PIXf2_19_3
PIXf2_20_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f2
BBf2_219: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_20_3
PIXf2_21_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_21_3
PIXf2_22_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x10
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_22_3
PIXf2_23_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_256: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_23_3
PIXf2_24_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_24_3
PIXf2_25_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_25_3
PIXf2_26_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x11f
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f2
BBf2_287: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x3
 jmp PIXf2_26_3
PIXf2_27_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0x12a
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_297: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_27_3
PIXf2_28_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_306: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_28_3
PIXf2_29_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_314: mov dword [reg_a2], 0x8000
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 jmp PIXf2_29_3
PIXf2_30_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_30_3
PIXf2_31_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 jmp PIXf2_31_3
PIXf2_32_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f2
BBf2_341: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_32_3
PIXf2_33_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_344: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x26
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffe2
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x32
 mov eax, dword [reg_a2]
 jmp PIXf2_33_3
PIXf2_34_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff9
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0xeb
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x63
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x1f
 mov eax, dword [reg_a2]
 jmp PIXf2_34_3
PIXf2_35_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_351: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffda
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffda
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_35_3
PIXf2_0_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_2: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_0_4
PIXf2_1_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_1_4
PIXf2_2_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_15: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_2_4
PIXf2_3_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 jmp PIXf2_3_4
PIXf2_4_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_4_4
PIXf2_5_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_38: mov eax, dword [reg_bp2]
 jmp PIXf2_5_4
PIXf2_6_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x2f
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_46: mov edi, 0x30
 mov eax, 1
 call PCJMP_f2
BBf2_47: mov edi, 0x3b
 mov eax, 1
 call PCJMP_f2
BBf2_48: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 jmp PIXf2_6_4
PIXf2_7_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_60: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_61: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_7_4
PIXf2_8_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_8_4
PIXf2_9_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_9_4
PIXf2_10_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_102: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 jmp PIXf2_10_4
PIXf2_11_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_114: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_11_4
PIXf2_12_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_12_4
PIXf2_13_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, 0x4
 mov ecx, reg_a2
 int 0x80
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_134: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_13_4
PIXf2_14_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_14_4
PIXf2_15_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_4
PIXf2_16_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_16_4
PIXf2_17_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_17_4
PIXf2_18_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_18_4
PIXf2_19_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_19_4
PIXf2_20_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_220: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_221: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 jmp PIXf2_20_4
PIXf2_21_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
BBf2_229: mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_230: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_21_4
PIXf2_22_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_240: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xf2
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_241: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_22_4
PIXf2_23_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff9
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff9
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_257: mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 jmp PIXf2_23_4
PIXf2_24_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_4
PIXf2_25_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_4
PIXf2_26_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_288: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_26_4
PIXf2_27_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 jmp PIXf2_27_4
PIXf2_28_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_307: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 jmp PIXf2_28_4
PIXf2_29_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_29_4
PIXf2_30_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 jmp PIXf2_30_4
PIXf2_31_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_31_4
PIXf2_32_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_4
PIXf2_33_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_4
PIXf2_34_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x57
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0xfd
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0xe9
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 jmp PIXf2_34_4
PIXf2_35_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x159
 mov eax, 1
 call PCJMP_f2
BBf2_352: mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
BBf2_353: nop
 setb  al
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov dword [reg_b2], eax
 call PCJMP_f2
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 jmp PIXf2_35_4
PIXf2_0_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffe8
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_0_5
PIXf2_1_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_1_5
PIXf2_2_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_2_5
PIXf2_3_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_3_5
PIXf2_4_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffcd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_4_5
PIXf2_5_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xfffffe
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_5_5
PIXf2_6_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_6_5
PIXf2_7_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x5
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 jmp PIXf2_7_5
PIXf2_8_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_8_5
PIXf2_9_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x58
 mov eax, 1
 call PCJMP_f2
BBf2_87: mov dword [reg_a2], 0x0
BBf2_88: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_9_5
PIXf2_10_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x5e
 mov eax, 1
 call PCJMP_f2
BBf2_103: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_10_5
PIXf2_11_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x6a
 mov eax, 1
 jmp PIXf2_11_5
PIXf2_12_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_12_5
PIXf2_13_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_13_5
PIXf2_14_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_14_5
PIXf2_15_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_5
PIXf2_16_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_16_5
PIXf2_17_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_17_5
PIXf2_18_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_18_5
PIXf2_19_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_19_5
PIXf2_20_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_222: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_20_5
PIXf2_21_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_231: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_21_5
PIXf2_22_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_242: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 jmp PIXf2_22_5
PIXf2_23_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_258: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_23_5
PIXf2_24_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_5
PIXf2_25_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_5
PIXf2_26_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_289: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_26_5
PIXf2_27_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x39
 mov eax, dword [reg_a2]
 jmp PIXf2_27_5
PIXf2_28_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_308: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x6
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_28_5
PIXf2_29_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov dword [reg_a2], 0x13b
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, dword [reg_c2]
 mov eax, 1
 jmp PIXf2_29_5
PIXf2_30_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_30_5
PIXf2_31_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_31_5
PIXf2_32_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_5
PIXf2_33_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_5
PIXf2_34_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdd
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x66
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffde
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x77
 jmp PIXf2_34_5
PIXf2_35_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_a2]
 mov eax, 1
 mov edi, dword [reg_a2]
 add dword [reg_sp2], 0x1
 mov eax, dword [reg_d2]
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 and dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 add dword [reg_d2], 0xffffff
 mov dword [reg_d2], eax
 mov dword [reg_b2], eax
 and dword [reg_b2], 0xffffff
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], eax
 call PCJMP_f2
 sete  al
 mov eax, dword [mem2 + 4*eax]
 mov eax, 1
 mov eax, dword [reg_a2]
 movzx eax, al
 jmp PIXf2_35_5
PIXf2_0_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 jmp PIXf2_0_6
PIXf2_1_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_7: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_1_6
PIXf2_2_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_2_6
PIXf2_3_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_3_6
PIXf2_4_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_4_6
PIXf2_5_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x27
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_5_6
PIXf2_6_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_6_6
PIXf2_7_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_7_6
PIXf2_8_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_8_6
PIXf2_9_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x5a
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_9_6
PIXf2_10_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_104: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_10_6
PIXf2_11_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_11_6
PIXf2_12_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_12_6
PIXf2_13_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_13_6
PIXf2_14_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x20
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_14_6
PIXf2_15_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x97
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_150: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_15_6
PIXf2_16_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xd
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_163: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 jmp PIXf2_16_6
PIXf2_17_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x66
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_179: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_17_6
PIXf2_18_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x5a
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 jmp PIXf2_18_6
PIXf2_19_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_19_6
PIXf2_20_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_20_6
PIXf2_21_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_21_6
PIXf2_22_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0xf6
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_243: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_22_6
PIXf2_23_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x103
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f2
BBf2_259: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x105
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_23_6
PIXf2_24_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_6
PIXf2_25_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_6
PIXf2_26_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_26_6
PIXf2_27_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_298: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0x12e
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_299: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_27_6
PIXf2_28_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x136
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_309: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_28_6
PIXf2_29_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_315: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x13d
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_316: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 jmp PIXf2_29_6
PIXf2_30_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_30_6
PIXf2_31_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_337: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f2
BBf2_338: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_31_6
PIXf2_32_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_6
PIXf2_33_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_6
PIXf2_34_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdf
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x88
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffe0
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x99
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffe1
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x11
 mov eax, dword [reg_a2]
 jmp PIXf2_34_6
PIXf2_35_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 setne al
 mov dword [reg_d2], eax
 mov ecx, dword [reg_a2]
 mov dword [reg_b2], eax
 and dword [reg_sp2], 0xffffff
 call PCJMP_f2
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [mem2 + 4*eax]
 add dword [reg_d2], 0xffffff
 mov dword [reg_a2], eax
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 setne al
 mov eax, dword [reg_a2]
 call PCJMP_f2
 mov edi, 0x38
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 and dword [reg_sp2], 0xffffff
 call PCJMP_f2
 and dword [reg_b2], 0xffffff
 and dword [reg_sp2], 0xffffff
 add dword [reg_sp2], 0x2
 jmp PIXf2_35_6
PIXf2_0_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_0_7
PIXf2_1_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x2
 mov eax, 1
 call PCJMP_f2
BBf2_8: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcd
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_9: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffe8
 jmp PIXf2_1_7
PIXf2_2_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_2_7
PIXf2_3_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_3_7
PIXf2_4_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_4_7
PIXf2_5_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f2
BBf2_39: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_5_7
PIXf2_6_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_6_7
PIXf2_7_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_7_7
PIXf2_8_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_75: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_8_7
PIXf2_9_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_89: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_9_7
PIXf2_10_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_105: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 jmp PIXf2_10_7
PIXf2_11_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_11_7
PIXf2_12_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_12_7
PIXf2_13_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x82
 mov eax, 1
 call PCJMP_f2
BBf2_135: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_13_7
PIXf2_14_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_14_7
PIXf2_15_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov edi, 0x98
 mov eax, 1
 call PCJMP_f2
BBf2_151: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_15_7
PIXf2_16_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0xa5
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_164: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x9
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_16_7
PIXf2_17_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_180: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xb8
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_181: mov dword [reg_a2], 0x41
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 jmp PIXf2_17_7
PIXf2_18_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
BBf2_195: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_196: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_18_7
PIXf2_19_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_19_7
PIXf2_20_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_20_7
PIXf2_21_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xe8
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_21_7
PIXf2_22_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0x78
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xf5
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_244: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_22_7
PIXf2_23_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_260: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_23_7
PIXf2_24_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_7
PIXf2_25_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_7
PIXf2_26_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x122
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_26_7
PIXf2_27_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x3
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_27_7
PIXf2_28_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_310: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_28_7
PIXf2_29_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 jmp PIXf2_29_7
PIXf2_30_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 jmp PIXf2_30_7
PIXf2_31_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_31_7
PIXf2_32_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_7
PIXf2_33_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_7
PIXf2_34_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdc
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x1e
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdb
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x5
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 jmp PIXf2_34_7
PIXf2_35_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov eax, dword [reg_d2]
 call PCJMP_f2
 mov dword [reg_sp2], eax
 mov eax, dword [reg_a2]
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_sp2]
 mov ecx, dword [reg_d2]
 mov dword [reg_d2], eax
 mov eax, 1
 mov eax, dword [mem2 + 4*eax]
 mov dword [mem2 + 4*ecx], eax
 mov ecx, dword [reg_d2]
 mov dword [reg_b2], 0x0
 mov dword [reg_bp2], eax
 mov eax, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 and dword [reg_d2], 0xffffff
 call PCJMP_f2
 mov dword [reg_bp2], eax
 mov dword [reg_sp2], eax
 mov eax, dword [reg_b2]
 setbe al
 jmp PIXf2_35_7
PIXf2_0_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 jmp PIXf2_0_8
PIXf2_1_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_1_8
PIXf2_2_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x35
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_2_8
PIXf2_3_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_3_8
PIXf2_4_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_31: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_4_8
PIXf2_5_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_40: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_5_8
PIXf2_6_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_6_8
PIXf2_7_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_7_8
PIXf2_8_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x3e
 mov eax, 1
 call PCJMP_f2
BBf2_76: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 jmp PIXf2_8_8
PIXf2_9_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_90: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_9_8
PIXf2_10_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_106: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_10_8
PIXf2_11_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_11_8
PIXf2_12_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 jmp PIXf2_12_8
PIXf2_13_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_136: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 jmp PIXf2_13_8
PIXf2_14_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_14_8
PIXf2_15_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_15_8
PIXf2_16_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_165: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xa7
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_166: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_16_8
PIXf2_17_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xb7
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_182: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_17_8
PIXf2_18_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_197: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_198: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_18_8
PIXf2_19_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_212: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_b2], 0x24
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_19_8
PIXf2_20_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_20_8
PIXf2_21_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_21_8
PIXf2_22_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x58
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 jmp PIXf2_22_8
PIXf2_23_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f2
BBf2_261: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_23_8
PIXf2_24_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_8
PIXf2_25_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_8
PIXf2_26_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f2
BBf2_290: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_26_8
PIXf2_27_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x12c
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_27_8
PIXf2_28_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_28_8
PIXf2_29_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_29_8
PIXf2_30_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 jmp PIXf2_30_8
PIXf2_31_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_31_8
PIXf2_32_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_8
PIXf2_33_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_8
PIXf2_34_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffda
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_345: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffda
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_34_8
PIXf2_35_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_a2]
 mov eax, 1
 mov eax, dword [reg_sp2]
 and dword [reg_a2], 0xffffff
 setne al
 and dword [reg_b2], 0xffffff
 cmp dword [reg_a2], 0x0
 and dword [reg_sp2], 0xffffff
 mov dword [reg_bp2], eax
 mov dword [reg_sp2], eax
 mov dword [mem2 + 4*ecx], eax
 mov eax, 1
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov dword [reg_a2], eax
 cmp dword [reg_a2], 0x0
 mov dword [reg_b2], eax
 setbe al
 mov eax, dword [reg_bp2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 add dword [reg_sp2], 0x1
 jmp PIXf2_35_8
PIXf2_0_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffce
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_0_9
PIXf2_1_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 jmp PIXf2_1_9
PIXf2_2_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x11
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_16: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_2_9
PIXf2_3_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_3_9
PIXf2_4_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_4_9
PIXf2_5_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_41: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xfffffe
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_5_9
PIXf2_6_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_6_9
PIXf2_7_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_62: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x18
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_7_9
PIXf2_8_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_77: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_8_9
PIXf2_9_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x4f
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_9_9
PIXf2_10_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x18
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_10_9
PIXf2_11_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_11_9
PIXf2_12_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x7b
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_122: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_12_9
PIXf2_13_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 jmp PIXf2_13_9
PIXf2_14_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_14_9
PIXf2_15_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x61
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
BBf2_152: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_15_9
PIXf2_16_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xb
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 jmp PIXf2_16_9
PIXf2_17_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x46
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 jmp PIXf2_17_9
PIXf2_18_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xc7
 jmp PIXf2_18_9
PIXf2_19_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_b2], 0x24
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_19_9
PIXf2_20_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_20_9
PIXf2_21_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_21_9
PIXf2_22_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_245: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_246: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0xf8
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_247: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 jmp PIXf2_22_9
PIXf2_23_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x106
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f2
BBf2_262: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x10c
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
 jmp PIXf2_23_9
PIXf2_24_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_9
PIXf2_25_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_9
PIXf2_26_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_291: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_292: mov eax, dword [reg_sp2]
 jmp PIXf2_26_9
PIXf2_27_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f2
BBf2_300: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_27_9
PIXf2_28_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_28_9
PIXf2_29_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x13e
 mov eax, 1
 call PCJMP_f2
BBf2_317: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f2
BBf2_318: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f2
BBf2_319: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_29_9
PIXf2_30_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_30_9
PIXf2_31_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_31_9
PIXf2_32_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_9
PIXf2_33_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_9
PIXf2_34_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x15b
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_346: mov edi, 0x15c
 jmp PIXf2_34_9
PIXf2_35_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 add dword [reg_b2], 0xfffffe
 and dword [reg_a2], 0xffffff
 mov dword [reg_a2], 0xa
 call PCJMP_f2
 mov dword [reg_b2], eax
 mov dword [reg_a2], eax
 mov dword [reg_a2], eax
 mov ecx, dword [reg_d2]
 mov eax, dword [reg_d2]
 call PCJMP_f2
 mov dword [reg_a2], 0x1
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_sp2], eax
 and dword [reg_sp2], 0xffffff
 mov eax, ebx
 and dword [reg_b2], 0xffffff
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_bp2]
 mov eax, dword [reg_b2]
 add dword [reg_sp2], 0x1
 mov eax, 1
 mov dword [reg_d2], eax
 cmp dword [reg_a2], eax
 setbe al
 jmp PIXf2_35_9
PIXf2_0_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffce
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_0_10
PIXf2_1_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_1_10
PIXf2_2_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_2_10
PIXf2_3_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 jmp PIXf2_3_10
PIXf2_4_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_4_10
PIXf2_5_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_5_10
PIXf2_6_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_6_10
PIXf2_7_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x40
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_63: mov edi, 0x41
 mov eax, 1
 call PCJMP_f2
BBf2_64: mov edi, 0x4c
 mov eax, 1
 call PCJMP_f2
BBf2_65: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_7_10
PIXf2_8_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_78: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 jmp PIXf2_8_10
PIXf2_9_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_91: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 jmp PIXf2_9_10
PIXf2_10_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_10_10
PIXf2_11_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_11_10
PIXf2_12_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x7c
 mov eax, 1
 call PCJMP_f2
BBf2_123: mov dword [reg_a2], 0x0
BBf2_124: mov eax, dword [reg_bp2]
 jmp PIXf2_12_10
PIXf2_13_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_137: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 sub dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_13_10
PIXf2_14_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x90
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f2
BBf2_144: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_14_10
PIXf2_15_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_15_10
PIXf2_16_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_167: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xa9
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_168: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_16_10
PIXf2_17_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_183: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_184: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_17_10
PIXf2_18_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f2
BBf2_199: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_b2], 0x1
 mov edi, 0xca
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_200: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_18_10
PIXf2_19_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_19_10
PIXf2_20_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_20_10
PIXf2_21_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_21_10
PIXf2_22_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_22_10
PIXf2_23_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_263: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_23_10
PIXf2_24_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_10
PIXf2_25_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_10
PIXf2_26_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_26_10
PIXf2_27_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_27_10
PIXf2_28_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0x2
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_28_10
PIXf2_29_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 jmp PIXf2_29_10
PIXf2_30_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_30_10
PIXf2_31_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_31_10
PIXf2_32_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_10
PIXf2_33_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_10
PIXf2_34_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_347: mov edi, 0x160
 mov eax, 1
 call PCJMP_f2
BBf2_348: mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffe2
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_34_10
PIXf2_35_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 and dword [reg_sp2], 0xffffff
 mov dword [reg_b2], eax
 mov dword [reg_sp2], eax
 add dword [reg_sp2], 0x1
 mov eax, dword [reg_d2]
 mov dword [reg_b2], eax
 add dword [reg_sp2], 0x1
 call PCJMP_f2
 mov eax, dword [mem2 + 4*eax]
 call PCJMP_f2
 call PCJMP_f2
 mov dword [reg_d2], eax
 mov eax, dword [reg_b2]
 add dword [reg_sp2], 0x3
 mov eax, 1
 mov dword [reg_d2], eax
 mov dword [reg_a2], eax
 mov edi, 0xfc
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_a2], eax
 jmp PIXf2_35_10
PIXf2_0_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0x4
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_3: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffce
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_0_11
PIXf2_1_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xb
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_10: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_1_11
PIXf2_2_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_17: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_2_11
PIXf2_3_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_3_11
PIXf2_4_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_4_11
PIXf2_5_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_5_11
PIXf2_6_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x32
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
 jmp PIXf2_6_11
PIXf2_7_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_7_11
PIXf2_8_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 sub dword [reg_sp2], 0x5
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_79: mov eax, dword [reg_bp2]
 jmp PIXf2_8_11
PIXf2_9_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_92: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_93: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_9_11
PIXf2_10_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_10_11
PIXf2_11_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_11_11
PIXf2_12_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x7e
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_125: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_12_11
PIXf2_13_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_13_11
PIXf2_14_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x91
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f2
BBf2_145: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 jmp PIXf2_14_11
PIXf2_15_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x10
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_15_11
PIXf2_16_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x20
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_169: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 jmp PIXf2_16_11
PIXf2_17_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_185: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 jmp PIXf2_17_11
PIXf2_18_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xc9
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_18_11
PIXf2_19_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x24
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_b2], 0x24
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_19_11
PIXf2_20_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_20_11
PIXf2_21_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_21_11
PIXf2_22_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_22_11
PIXf2_23_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x108
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xba
 mov eax, 1
 call PCJMP_f2
BBf2_264: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x10a
 jmp PIXf2_23_11
PIXf2_24_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_11
PIXf2_25_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_11
PIXf2_26_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_26_11
PIXf2_27_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x12d
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f2
BBf2_301: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_27_11
PIXf2_28_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x137
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f2
BBf2_311: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_28_11
PIXf2_29_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov dword [reg_a2], 0x140
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, dword [reg_c2]
 mov eax, 1
 call PCJMP_f2
BBf2_320: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_29_11
PIXf2_30_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_30_11
PIXf2_31_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_31_11
PIXf2_32_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_11
PIXf2_33_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_11
PIXf2_34_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffda
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_34_11
PIXf2_35_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_b2], 0xffffff
 mov edi, dword [reg_a2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_a2]
 mov ebx, 0x0
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_sp2]
 mov eax, ebx
 mov dword [reg_b2], eax
 mov eax, dword [reg_a2]
 mov eax, dword [reg_sp2]
 add dword [reg_sp2], 0x1
 mov eax, dword [mem2 + 4*eax]
 movzx eax, al
 mov dword [reg_b2], eax
 add dword [reg_sp2], 0x1
 mov eax, dword [reg_sp2]
 call PCJMP_f2
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 call PCJMP_f2
 add dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 add dword [reg_sp2], 0x1
 jmp PIXf2_35_11
PIXf2_0_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 jmp PIXf2_0_12
PIXf2_1_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xffffcd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffd0
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_1_12
PIXf2_2_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x13
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_18: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_2_12
PIXf2_3_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0x18
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_23: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_3_12
PIXf2_4_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_4_12
PIXf2_5_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_5_12
PIXf2_6_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_49: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_6_12
PIXf2_7_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 jmp PIXf2_7_12
PIXf2_8_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x18
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 jmp PIXf2_8_12
PIXf2_9_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 jmp PIXf2_9_12
PIXf2_10_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x6c
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_107: mov edi, 0x6d
 mov eax, 1
 call PCJMP_f2
BBf2_108: mov edi, 0x73
 mov eax, 1
 call PCJMP_f2
BBf2_109: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_10_12
PIXf2_11_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_11_12
PIXf2_12_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_12_12
PIXf2_13_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x8a
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_13_12
PIXf2_14_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_146: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_14_12
PIXf2_15_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x99
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_15_12
PIXf2_16_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_170: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_16_12
PIXf2_17_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_186: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x41
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_17_12
PIXf2_18_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_201: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_202: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_18_12
PIXf2_19_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xd7
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_213: mov dword [reg_a2], 0x18
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_19_12
PIXf2_20_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_20_12
PIXf2_21_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_21_12
PIXf2_22_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_22_12
PIXf2_23_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_265: mov dword [reg_a2], 0x41
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov edi, 0x10b
 jmp PIXf2_23_12
PIXf2_24_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_12
PIXf2_25_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_12
PIXf2_26_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x125
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f2
BBf2_293: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_26_12
PIXf2_27_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_27_12
PIXf2_28_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_28_12
PIXf2_29_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_29_12
PIXf2_30_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_30_12
PIXf2_31_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_31_12
PIXf2_32_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_12
PIXf2_33_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_12
PIXf2_34_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffdd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_34_12
PIXf2_35_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 and dword [reg_sp2], 0xffffff
 mov dword [mem2 + 4*ecx], eax
 call PCJMP_f2
 add dword [reg_d2], 0xffffff
 mov eax, dword [mem2 + 4*eax]
 add dword [reg_b2], 0xfffffb
 mov dword [mem2 + 4*ecx], eax
 call PCJMP_f2
 mov dword [reg_a2], eax
 mov dword [reg_a2], eax
 and dword [reg_d2], 0xffffff
 mov dword [reg_d2], eax
 mov ecx, dword [reg_d2]
 mov eax, 1
 mov edi, 0x105
 cmp dword [reg_a2], 0x0
 mov dword [reg_b2], eax
 mov eax, dword [reg_d2]
 and dword [reg_a2], 0xffffff
 add dword [reg_d2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, dword [reg_b2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_35_12
PIXf2_0_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_4: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0x6
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_5: mov edi, 0x8
 mov eax, 1
 call PCJMP_f2
BBf2_6: mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffd0
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_0_13
PIXf2_1_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_1_13
PIXf2_2_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_19: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 jmp PIXf2_2_13
PIXf2_3_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_3_13
PIXf2_4_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_4_13
PIXf2_5_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_5_13
PIXf2_6_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x33
 mov eax, 1
 call PCJMP_f2
BBf2_50: mov dword [reg_a2], 0x0
BBf2_51: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_6_13
PIXf2_7_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_7_13
PIXf2_8_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x51
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_80: mov edi, 0x52
 mov eax, 1
 call PCJMP_f2
BBf2_81: mov edi, 0x5b
 mov eax, 1
 call PCJMP_f2
BBf2_82: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_8_13
PIXf2_9_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_94: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x18
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_9_13
PIXf2_10_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_10_13
PIXf2_11_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_11_13
PIXf2_12_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_12_13
PIXf2_13_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f2
BBf2_138: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_13_13
PIXf2_14_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_14_13
PIXf2_15_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f2
BBf2_153: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x9b
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
 jmp PIXf2_15_13
PIXf2_16_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_171: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_16_13
PIXf2_17_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xbc
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_187: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 jmp PIXf2_17_13
PIXf2_18_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_203: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_204: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_18_13
PIXf2_19_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xd6
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f2
BBf2_214: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x1
 jmp PIXf2_19_13
PIXf2_20_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_20_13
PIXf2_21_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f2
BBf2_232: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0xea
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_233: mov edi, 0xe7
 mov eax, 1
 call PCJMP_f2
BBf2_234: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_21_13
PIXf2_22_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x2
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_22_13
PIXf2_23_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_266: mov dword [reg_a2], 0x61
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
BBf2_267: mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_23_13
PIXf2_24_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x116
 mov eax, 1
 call PCJMP_f2
BBf2_276: mov dword [reg_a2], 0x1
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_24_13
PIXf2_25_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_13
PIXf2_26_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_294: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_26_13
PIXf2_27_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_27_13
PIXf2_28_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x138
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f2
BBf2_312: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 jmp PIXf2_28_13
PIXf2_29_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x8000
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x142
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_321: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_29_13
PIXf2_30_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_30_13
PIXf2_31_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x153
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f2
BBf2_339: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_31_13
PIXf2_32_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_13
PIXf2_33_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_13
PIXf2_34_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffda
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_34_13
PIXf2_35_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov dword [reg_a2], 0x0
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_sp2], eax
 mov eax, dword [reg_a2]
 call PCJMP_f2
 mov dword [reg_a2], 0x15d
 add dword [reg_sp2], 0x1
 mov eax, dword [reg_sp2]
 mov dword [reg_sp2], eax
 mov eax, 1
 mov eax, dword [reg_sp2]
 mov dword [reg_a2], eax
 call PCJMP_f2
 mov edi, 0xa7
 call PCJMP_f2
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_sp2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_b2], eax
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_b2], eax
 mov dword [reg_a2], eax
 mov dword [reg_a2], eax
 jmp PIXf2_35_13
PIXf2_0_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 jmp PIXf2_0_14
PIXf2_1_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_1_14
PIXf2_2_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 jmp PIXf2_2_14
PIXf2_3_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_24: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0x1a
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_25: mov edi, 0x1c
 mov eax, 1
 call PCJMP_f2
BBf2_26: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_3_14
PIXf2_4_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_4_14
PIXf2_5_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_5_14
PIXf2_6_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 jmp PIXf2_6_14
PIXf2_7_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x43
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_66: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_7_14
PIXf2_8_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_8_14
PIXf2_9_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x60
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_95: mov edi, 0x61
 mov eax, 1
 call PCJMP_f2
BBf2_96: mov edi, 0x67
 mov eax, 1
 call PCJMP_f2
BBf2_97: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_9_14
PIXf2_10_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_10_14
PIXf2_11_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_11_14
PIXf2_12_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_12_14
PIXf2_13_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_13_14
PIXf2_14_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_14_14
PIXf2_15_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_154: mov edi, 0x94
 mov eax, 1
 call PCJMP_f2
BBf2_155: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x9d
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_156: mov dword [reg_a2], 0x2d
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_15_14
PIXf2_16_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 jmp PIXf2_16_14
PIXf2_17_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x5a
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 jmp PIXf2_17_14
PIXf2_18_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_18_14
PIXf2_19_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_19_14
PIXf2_20_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_20_14
PIXf2_21_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x2d
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xec
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
 jmp PIXf2_21_14
PIXf2_22_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x10
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_248: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_22_14
PIXf2_23_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f2
BBf2_268: mov edi, 0x117
 mov eax, 1
 call PCJMP_f2
BBf2_269: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 jmp PIXf2_23_14
PIXf2_24_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_24_14
PIXf2_25_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_14
PIXf2_26_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_14
PIXf2_27_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 jmp PIXf2_27_14
PIXf2_28_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 jmp PIXf2_28_14
PIXf2_29_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_29_14
PIXf2_30_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_331: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_30_14
PIXf2_31_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_31_14
PIXf2_32_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_14
PIXf2_33_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_14
PIXf2_34_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_34_14
PIXf2_35_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_d2], eax
 and dword [reg_d2], 0xffffff
 mov dword [reg_d2], eax
 mov edi, 0xf6
 mov dword [reg_sp2], eax
 mov eax, dword [reg_d2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_bp2], eax
 cmp dword [reg_b2], 0x0
 add dword [reg_d2], 0xffffff
 mov dword [reg_sp2], eax
 add dword [reg_sp2], 0x1
 call PCJMP_f2
 mov eax, dword [reg_bp2]
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_sp2]
 add dword [reg_sp2], 0x1
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_35_14
PIXf2_0_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_0_15
PIXf2_1_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_1_15
PIXf2_2_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov edi, 0x15
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_20: mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_2_15
PIXf2_3_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_27: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 jmp PIXf2_3_15
PIXf2_4_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_4_15
PIXf2_5_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_5_15
PIXf2_6_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x35
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_52: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_6_15
PIXf2_7_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_7_15
PIXf2_8_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_8_15
PIXf2_9_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_9_15
PIXf2_10_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_10_15
PIXf2_11_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_115: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 jmp PIXf2_11_15
PIXf2_12_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_12_15
PIXf2_13_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_13_15
PIXf2_14_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 jmp PIXf2_14_15
PIXf2_15_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 sub dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 jmp PIXf2_15_15
PIXf2_16_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xad
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_172: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x39
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_16_15
PIXf2_17_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_188: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_17_15
PIXf2_18_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_18_15
PIXf2_19_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_19_15
PIXf2_20_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x7
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_20_15
PIXf2_21_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_235: mov dword [reg_a2], 0x1
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 jmp PIXf2_21_15
PIXf2_22_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xfd
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_22_15
PIXf2_23_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_23_15
PIXf2_24_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x115
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xf
 jmp PIXf2_24_15
PIXf2_25_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_15
PIXf2_26_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_15
PIXf2_27_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_27_15
PIXf2_28_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_28_15
PIXf2_29_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 jmp PIXf2_29_15
PIXf2_30_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x147
 mov eax, 1
 call PCJMP_f2
BBf2_332: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_30_15
PIXf2_31_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_31_15
PIXf2_32_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_15
PIXf2_33_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffe3
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x1e
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffe4
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0xe5
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffe5
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0xfc
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 jmp PIXf2_33_15
PIXf2_34_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x15d
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x29
 jmp PIXf2_34_15
PIXf2_35_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
 call PCJMP_f2
 add dword [reg_b2], 0xffffcd
 mov dword [reg_a2], eax
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_sp2]
 mov eax, 1
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_sp2]
 call PCJMP_f2
 mov eax, 1
 call PCJMP_f2
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 mov dword [reg_bp2], eax
 mov dword [reg_sp2], eax
 mov dword [reg_a2], eax
 and dword [reg_b2], 0xffffff
 mov dword [reg_sp2], eax
 mov ecx, dword [reg_d2]
 mov edi, 0xca
 add dword [reg_d2], 0xffffff
 movzx eax, al
 call PCJMP_f2
 jmp PIXf2_35_15
PIXf2_0_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffd0
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 jmp PIXf2_0_16
PIXf2_1_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 jmp PIXf2_1_16
PIXf2_2_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_21: mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_2_16
PIXf2_3_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x16
 mov eax, 1
 call PCJMP_f2
BBf2_28: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcb
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 jmp PIXf2_3_16
PIXf2_4_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_4_16
PIXf2_5_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_5_16
PIXf2_6_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_6_16
PIXf2_7_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x44
 mov eax, 1
 call PCJMP_f2
BBf2_67: mov dword [reg_a2], 0x0
BBf2_68: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 jmp PIXf2_7_16
PIXf2_8_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_8_16
PIXf2_9_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 jmp PIXf2_9_16
PIXf2_10_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x6f
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_110: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_10_16
PIXf2_11_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_116: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_117: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_11_16
PIXf2_12_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_12_16
PIXf2_13_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_13_16
PIXf2_14_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_14_16
PIXf2_15_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_16
PIXf2_16_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_16_16
PIXf2_17_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_17_16
PIXf2_18_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_18_16
PIXf2_19_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_215: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 jmp PIXf2_19_16
PIXf2_20_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xe0
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_223: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_20_16
PIXf2_21_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_21_16
PIXf2_22_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_249: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_22_16
PIXf2_23_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x10f
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_270: mov edi, 0x117
 mov eax, 1
 call PCJMP_f2
BBf2_271: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_23_16
PIXf2_24_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_277: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_24_16
PIXf2_25_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov edi, 0x11b
 mov eax, 1
 call PCJMP_f2
BBf2_282: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
BBf2_283: mov eax, dword [reg_sp2]
 jmp PIXf2_25_16
PIXf2_26_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_16
PIXf2_27_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_27_16
PIXf2_28_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_28_16
PIXf2_29_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_29_16
PIXf2_30_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_30_16
PIXf2_31_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_31_16
PIXf2_32_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_32_16
PIXf2_33_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffe6
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x31
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffe7
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0xf
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffe8
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x4
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_33_16
PIXf2_34_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_349: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_34_16
PIXf2_35_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_bp2]
 call PCJMP_f2
 mov eax, dword [reg_b2]
 call PCJMP_f2
 mov ecx, dword [reg_b2]
 and dword [reg_sp2], 0xffffff
 mov eax, 1
 and dword [reg_d2], 0xffffff
 mov dword [reg_b2], eax
 mov dword [reg_a2], eax
 call PCJMP_f2
 cmp dword [reg_a2], 0x0
 mov dword [reg_a2], 0x0
 mov ecx, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_bp2]
 mov eax, dword [mem2 + 4*eax]
 cmp dword [reg_a2], eax
 cmp dword [reg_b2], 0x0
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_35_16
PIXf2_0_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 jmp PIXf2_0_17
PIXf2_1_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
BBf2_11: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_1_17
PIXf2_2_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_22: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffe5
 and dword [reg_a2], 0xffffff
 jmp PIXf2_2_17
PIXf2_3_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_29: mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffcd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_3_17
PIXf2_4_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x21
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_32: mov edi, 0x22
 mov eax, 1
 jmp PIXf2_4_17
PIXf2_5_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_5_17
PIXf2_6_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x36
 mov eax, 1
 call PCJMP_f2
BBf2_53: mov dword [reg_a2], 0x0
BBf2_54: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 jmp PIXf2_6_17
PIXf2_7_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_7_17
PIXf2_8_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x54
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_83: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_8_17
PIXf2_9_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_9_17
PIXf2_10_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_10_17
PIXf2_11_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 jmp PIXf2_11_17
PIXf2_12_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_12_17
PIXf2_13_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_13_17
PIXf2_14_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x94
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_147: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_14_17
PIXf2_15_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_157: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 jmp PIXf2_15_17
PIXf2_16_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_173: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_16_17
PIXf2_17_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_189: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_190: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 jmp PIXf2_17_17
PIXf2_18_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0xcd
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f2
BBf2_205: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_b2], 0x1
 mov edi, 0xd1
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_206: mov dword [reg_a2], 0x20
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_18_17
PIXf2_19_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_216: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_19_17
PIXf2_20_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_20_17
PIXf2_21_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0xee
 mov eax, 1
 call PCJMP_f2
BBf2_236: mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_21_17
PIXf2_22_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xfb
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_250: mov dword [reg_a2], 0x8
 mov edi, 0xfc
 mov eax, 1
 call PCJMP_f2
BBf2_251: mov dword [reg_a2], 0xa
BBf2_252: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_253: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 jmp PIXf2_22_17
PIXf2_23_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x111
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_272: mov edi, 0x116
 mov eax, 1
 call PCJMP_f2
BBf2_273: mov eax, dword [reg_bp2]
 jmp PIXf2_23_17
PIXf2_24_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 jmp PIXf2_24_17
PIXf2_25_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 jmp PIXf2_25_17
PIXf2_26_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_295: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 jmp PIXf2_26_17
PIXf2_27_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 jmp PIXf2_27_17
PIXf2_28_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_28_17
PIXf2_29_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x143
 mov eax, 1
 call PCJMP_f2
BBf2_322: mov edi, 0x144
 mov eax, 1
 call PCJMP_f2
BBf2_323: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f2
BBf2_324: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_29_17
PIXf2_30_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x14e
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_333: mov eax, dword [reg_bp2]
 jmp PIXf2_30_17
PIXf2_31_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0x154
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f2
BBf2_340: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_31_17
PIXf2_32_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_32_17
PIXf2_33_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffe9
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0xa8
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffea
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0xed
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffeb
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x78
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_33_17
PIXf2_34_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_34_17
PIXf2_35_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0xec
 add dword [reg_d2], 0xffffff
 add dword [reg_sp2], 0x3
 mov eax, 1
 mov dword [reg_a2], eax
 call PCJMP_f2
 setne al
 and dword [reg_a2], 0xffffff
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_b2]
 call PCJMP_f2
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x1
 cmp dword [reg_a2], 0x0
 mov eax, dword [reg_d2]
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov eax, dword [reg_a2]
 mov edi, dword [reg_a2]
 mov eax, dword [reg_b2]
 call PCJMP_f2
 mov eax, 1
 call PCJMP_f2
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_35_17
PIXf2_0_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_0_18
PIXf2_1_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xd
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_12: mov edi, 0xe
 mov eax, 1
 call PCJMP_f2
BBf2_13: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_1_18
PIXf2_2_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_2_18
PIXf2_3_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_3_18
PIXf2_4_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_33: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 sub dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 jmp PIXf2_4_18
PIXf2_5_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x2a
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_5_18
PIXf2_6_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0x38
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_55: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_56: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0x3a
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_6_18
PIXf2_7_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x46
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_69: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_7_18
PIXf2_8_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 jmp PIXf2_8_18
PIXf2_9_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x63
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_98: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_9_18
PIXf2_10_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x70
 mov eax, 1
 call PCJMP_f2
BBf2_111: mov dword [reg_a2], 0x0
BBf2_112: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 jmp PIXf2_10_18
PIXf2_11_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_118: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_11_18
PIXf2_12_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_126: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_12_18
PIXf2_13_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_13_18
PIXf2_14_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_148: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_14_18
PIXf2_15_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_158: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_15_18
PIXf2_16_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_174: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_16_18
PIXf2_17_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x61
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_17_18
PIXf2_18_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 jmp PIXf2_18_18
PIXf2_19_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_217: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_19_18
PIXf2_20_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_224: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xe2
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_225: mov dword [reg_a2], 0x24
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 jmp PIXf2_20_18
PIXf2_21_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x2b
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xee
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_237: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_21_18
PIXf2_22_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x101
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_254: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff9
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_22_18
PIXf2_23_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x114
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_274: mov dword [reg_a2], 0x1
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_23_18
PIXf2_24_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_278: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 jmp PIXf2_24_18
PIXf2_25_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_284: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 jmp PIXf2_25_18
PIXf2_26_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_296: mov dword [reg_a2], 0x30
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_26_18
PIXf2_27_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_a2]
 jmp PIXf2_27_18
PIXf2_28_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 jmp PIXf2_28_18
PIXf2_29_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x146
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_29_18
PIXf2_30_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x150
 mov eax, 1
 call PCJMP_f2
BBf2_334: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_30_18
PIXf2_31_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_31_18
PIXf2_32_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_32_18
PIXf2_33_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffec
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x5
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffed
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x1c
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffee
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0xe1
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_33_18
PIXf2_34_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x15e
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x4e
 mov eax, 1
 call PCJMP_f2
BBf2_350: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 jmp PIXf2_34_18
PIXf2_35_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 call PCJMP_f2
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, dword [reg_a2]
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 add dword [reg_sp2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_sp2], eax
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_a2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], 0x0
 mov eax, 1
 call PCJMP_f2
 cmp dword [reg_b2], 0x0
 mov eax, 1
 call PCJMP_f2
 mov ecx, dword [reg_d2]
 mov dword [reg_d2], eax
 mov edi, 0x82
 call PCJMP_f2
 jmp PIXf2_35_18
PIXf2_0_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffd0
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov esi, 1
 jmp PIX_END_f2
PIXf2_1_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 sub dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x9
 mov eax, 1
 call PCJMP_f2
BBf2_14: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov esi, 2
 jmp PIX_END_f2
PIXf2_2_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov esi, 3
 jmp PIX_END_f2
PIXf2_3_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov esi, 4
 jmp PIX_END_f2
PIXf2_4_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x1d
 mov eax, 1
 call PCJMP_f2
BBf2_34: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov esi, 5
 jmp PIX_END_f2
PIXf2_5_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_42: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov esi, 6
 jmp PIX_END_f2
PIXf2_6_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_57: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov esi, 7
 jmp PIX_END_f2
PIXf2_7_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 mov esi, 8
 jmp PIX_END_f2
PIXf2_8_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x55
 mov eax, 1
 call PCJMP_f2
BBf2_84: mov dword [reg_a2], 0x0
BBf2_85: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 mov esi, 9
 jmp PIX_END_f2
PIXf2_9_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 mov esi, 10
 jmp PIX_END_f2
PIXf2_10_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x72
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_113: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov esi, 11
 jmp PIX_END_f2
PIXf2_11_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x18
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x78
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_119: mov edi, 0x79
 mov eax, 1
 call PCJMP_f2
BBf2_120: mov edi, 0x7f
 mov eax, 1
 call PCJMP_f2
BBf2_121: mov dword [reg_a2], 0x0
 mov esi, 12
 jmp PIX_END_f2
PIXf2_12_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x76
 mov eax, 1
 call PCJMP_f2
BBf2_127: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 mov esi, 13
 jmp PIX_END_f2
PIXf2_13_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x8b
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f2
BBf2_139: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov esi, 14
 jmp PIX_END_f2
PIXf2_14_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 sub dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov esi, 15
 jmp PIX_END_f2
PIXf2_15_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_159: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov esi, 16
 jmp PIX_END_f2
PIXf2_16_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_175: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 mov esi, 17
 jmp PIX_END_f2
PIXf2_17_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xc0
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_191: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 mov esi, 18
 jmp PIX_END_f2
PIXf2_18_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xd0
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_207: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x7f
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov esi, 19
 jmp PIX_END_f2
PIXf2_19_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 mov esi, 20
 jmp PIX_END_f2
PIXf2_20_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_226: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0xe6
 mov esi, 21
 jmp PIX_END_f2
PIXf2_21_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov esi, 22
 jmp PIX_END_f2
PIXf2_22_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x100
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_255: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff9
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 mov esi, 23
 jmp PIX_END_f2
PIXf2_23_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 mov esi, 24
 jmp PIX_END_f2
PIXf2_24_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x102
 mov eax, 1
 call PCJMP_f2
BBf2_279: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 mov esi, 25
 jmp PIX_END_f2
PIXf2_25_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_285: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
 mov esi, 26
 jmp PIX_END_f2
PIXf2_26_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 mov esi, 27
 jmp PIX_END_f2
PIXf2_27_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov esi, 28
 jmp PIX_END_f2
PIXf2_28_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov esi, 29
 jmp PIX_END_f2
PIXf2_29_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_325: mov edi, 0x152
 mov eax, 1
 call PCJMP_f2
BBf2_326: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_327: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 mov esi, 30
 jmp PIX_END_f2
PIXf2_30_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov esi, 31
 jmp PIX_END_f2
PIXf2_31_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov esi, 32
 jmp PIX_END_f2
PIXf2_32_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x156
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f2
BBf2_342: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov esi, 33
 jmp PIX_END_f2
PIXf2_33_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xffffef
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0xf7
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff0
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x76
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff1
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x46
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff2
 mov esi, 34
 jmp PIX_END_f2
PIXf2_34_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffe2
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov esi, 35
 jmp PIX_END_f2
PIXf2_35_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 mov eax, dword [reg_d2]
 mov dword [reg_a2], eax
 mov edi, 0xa7
 and dword [reg_sp2], 0xffffff
 mov ecx, dword [reg_b2]
 and dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov dword [reg_sp2], eax
 add dword [reg_d2], 0xffffff
 mov eax, 1
 mov eax, 1
 mov dword [reg_a2], eax
 cmp dword [reg_b2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov eax, 1
 mov eax, dword [reg_sp2]
 add dword [reg_d2], 0xffffff
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 call PCJMP_f2
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov esi, 36
 jmp PIX_END_f2
PIX_PAD_f2_0: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_1
PIX_PAD_f2_1: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_2
PIX_PAD_f2_2: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_3
PIX_PAD_f2_3: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_4
PIX_PAD_f2_4: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_5
PIX_PAD_f2_5: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_6
PIX_PAD_f2_6: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_7
PIX_PAD_f2_7: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_8
PIX_PAD_f2_8: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_9
PIX_PAD_f2_9: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_10
PIX_PAD_f2_10: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_11
PIX_PAD_f2_11: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_12
PIX_PAD_f2_12: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_13
PIX_PAD_f2_13: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_14
PIX_PAD_f2_14: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_15
PIX_PAD_f2_15: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_16
PIX_PAD_f2_16: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_17
PIX_PAD_f2_17: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_18
PIX_PAD_f2_18: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_END_f2
PIX_END_f2:
jmp PIX_START_f2
PIX_TABLE_f2:
 dd PIXf2_0_0
 dd PIXf2_1_0
 dd PIXf2_2_0
 dd PIXf2_3_0
 dd PIXf2_4_0
 dd PIXf2_5_0
 dd PIXf2_6_0
 dd PIXf2_7_0
 dd PIXf2_8_0
 dd PIXf2_9_0
 dd PIXf2_10_0
 dd PIXf2_11_0
 dd PIXf2_12_0
 dd PIXf2_13_0
 dd PIXf2_14_0
 dd PIXf2_15_0
 dd PIXf2_16_0
 dd PIXf2_17_0
 dd PIXf2_18_0
 dd PIXf2_19_0
 dd PIXf2_20_0
 dd PIXf2_21_0
 dd PIXf2_22_0
 dd PIXf2_23_0
 dd PIXf2_24_0
 dd PIXf2_25_0
 dd PIXf2_26_0
 dd PIXf2_27_0
 dd PIXf2_28_0
 dd PIXf2_29_0
 dd PIXf2_30_0
 dd PIXf2_31_0
 dd PIXf2_32_0
 dd PIXf2_33_0
 dd PIXf2_34_0
 dd PIXf2_35_0
 dd PIX_PAD_f2_0
JMP_TABLE_f2:
 dd BBf2_0 + 0x73317331
 dd BBf2_1 + 0x73317331
 dd BBf2_2 + 0x73317331
 dd BBf2_3 + 0x73317331
 dd BBf2_4 + 0x73317331
 dd BBf2_5 + 0x73317331
 dd BBf2_6 + 0x73317331
 dd BBf2_7 + 0x73317331
 dd BBf2_8 + 0x73317331
 dd BBf2_9 + 0x73317331
 dd BBf2_10 + 0x73317331
 dd BBf2_11 + 0x73317331
 dd BBf2_12 + 0x73317331
 dd BBf2_13 + 0x73317331
 dd BBf2_14 + 0x73317331
 dd BBf2_15 + 0x73317331
 dd BBf2_16 + 0x73317331
 dd BBf2_17 + 0x73317331
 dd BBf2_18 + 0x73317331
 dd BBf2_19 + 0x73317331
 dd BBf2_20 + 0x73317331
 dd BBf2_21 + 0x73317331
 dd BBf2_22 + 0x73317331
 dd BBf2_23 + 0x73317331
 dd BBf2_24 + 0x73317331
 dd BBf2_25 + 0x73317331
 dd BBf2_26 + 0x73317331
 dd BBf2_27 + 0x73317331
 dd BBf2_28 + 0x73317331
 dd BBf2_29 + 0x73317331
 dd BBf2_30 + 0x73317331
 dd BBf2_31 + 0x73317331
 dd BBf2_32 + 0x73317331
 dd BBf2_33 + 0x73317331
 dd BBf2_34 + 0x73317331
 dd BBf2_35 + 0x73317331
 dd BBf2_36 + 0x73317331
 dd BBf2_37 + 0x73317331
 dd BBf2_38 + 0x73317331
 dd BBf2_39 + 0x73317331
 dd BBf2_40 + 0x73317331
 dd BBf2_41 + 0x73317331
 dd BBf2_42 + 0x73317331
 dd BBf2_43 + 0x73317331
 dd BBf2_44 + 0x73317331
 dd BBf2_45 + 0x73317331
 dd BBf2_46 + 0x73317331
 dd BBf2_47 + 0x73317331
 dd BBf2_48 + 0x73317331
 dd BBf2_49 + 0x73317331
 dd BBf2_50 + 0x73317331
 dd BBf2_51 + 0x73317331
 dd BBf2_52 + 0x73317331
 dd BBf2_53 + 0x73317331
 dd BBf2_54 + 0x73317331
 dd BBf2_55 + 0x73317331
 dd BBf2_56 + 0x73317331
 dd BBf2_57 + 0x73317331
 dd BBf2_58 + 0x73317331
 dd BBf2_59 + 0x73317331
 dd BBf2_60 + 0x73317331
 dd BBf2_61 + 0x73317331
 dd BBf2_62 + 0x73317331
 dd BBf2_63 + 0x73317331
 dd BBf2_64 + 0x73317331
 dd BBf2_65 + 0x73317331
 dd BBf2_66 + 0x73317331
 dd BBf2_67 + 0x73317331
 dd BBf2_68 + 0x73317331
 dd BBf2_69 + 0x73317331
 dd BBf2_70 + 0x73317331
 dd BBf2_71 + 0x73317331
 dd BBf2_72 + 0x73317331
 dd BBf2_73 + 0x73317331
 dd BBf2_74 + 0x73317331
 dd BBf2_75 + 0x73317331
 dd BBf2_76 + 0x73317331
 dd BBf2_77 + 0x73317331
 dd BBf2_78 + 0x73317331
 dd BBf2_79 + 0x73317331
 dd BBf2_80 + 0x73317331
 dd BBf2_81 + 0x73317331
 dd BBf2_82 + 0x73317331
 dd BBf2_83 + 0x73317331
 dd BBf2_84 + 0x73317331
 dd BBf2_85 + 0x73317331
 dd BBf2_86 + 0x73317331
 dd BBf2_87 + 0x73317331
 dd BBf2_88 + 0x73317331
 dd BBf2_89 + 0x73317331
 dd BBf2_90 + 0x73317331
 dd BBf2_91 + 0x73317331
 dd BBf2_92 + 0x73317331
 dd BBf2_93 + 0x73317331
 dd BBf2_94 + 0x73317331
 dd BBf2_95 + 0x73317331
 dd BBf2_96 + 0x73317331
 dd BBf2_97 + 0x73317331
 dd BBf2_98 + 0x73317331
 dd BBf2_99 + 0x73317331
 dd BBf2_100 + 0x73317331
 dd BBf2_101 + 0x73317331
 dd BBf2_102 + 0x73317331
 dd BBf2_103 + 0x73317331
 dd BBf2_104 + 0x73317331
 dd BBf2_105 + 0x73317331
 dd BBf2_106 + 0x73317331
 dd BBf2_107 + 0x73317331
 dd BBf2_108 + 0x73317331
 dd BBf2_109 + 0x73317331
 dd BBf2_110 + 0x73317331
 dd BBf2_111 + 0x73317331
 dd BBf2_112 + 0x73317331
 dd BBf2_113 + 0x73317331
 dd BBf2_114 + 0x73317331
 dd BBf2_115 + 0x73317331
 dd BBf2_116 + 0x73317331
 dd BBf2_117 + 0x73317331
 dd BBf2_118 + 0x73317331
 dd BBf2_119 + 0x73317331
 dd BBf2_120 + 0x73317331
 dd BBf2_121 + 0x73317331
 dd BBf2_122 + 0x73317331
 dd BBf2_123 + 0x73317331
 dd BBf2_124 + 0x73317331
 dd BBf2_125 + 0x73317331
 dd BBf2_126 + 0x73317331
 dd BBf2_127 + 0x73317331
 dd BBf2_128 + 0x73317331
 dd BBf2_129 + 0x73317331
 dd BBf2_130 + 0x73317331
 dd BBf2_131 + 0x73317331
 dd BBf2_132 + 0x73317331
 dd BBf2_133 + 0x73317331
 dd BBf2_134 + 0x73317331
 dd BBf2_135 + 0x73317331
 dd BBf2_136 + 0x73317331
 dd BBf2_137 + 0x73317331
 dd BBf2_138 + 0x73317331
 dd BBf2_139 + 0x73317331
 dd BBf2_140 + 0x73317331
 dd BBf2_141 + 0x73317331
 dd BBf2_142 + 0x73317331
 dd BBf2_143 + 0x73317331
 dd BBf2_144 + 0x73317331
 dd BBf2_145 + 0x73317331
 dd BBf2_146 + 0x73317331
 dd BBf2_147 + 0x73317331
 dd BBf2_148 + 0x73317331
 dd BBf2_149 + 0x73317331
 dd BBf2_150 + 0x73317331
 dd BBf2_151 + 0x73317331
 dd BBf2_152 + 0x73317331
 dd BBf2_153 + 0x73317331
 dd BBf2_154 + 0x73317331
 dd BBf2_155 + 0x73317331
 dd BBf2_156 + 0x73317331
 dd BBf2_157 + 0x73317331
 dd BBf2_158 + 0x73317331
 dd BBf2_159 + 0x73317331
 dd BBf2_160 + 0x73317331
 dd BBf2_161 + 0x73317331
 dd BBf2_162 + 0x73317331
 dd BBf2_163 + 0x73317331
 dd BBf2_164 + 0x73317331
 dd BBf2_165 + 0x73317331
 dd BBf2_166 + 0x73317331
 dd BBf2_167 + 0x73317331
 dd BBf2_168 + 0x73317331
 dd BBf2_169 + 0x73317331
 dd BBf2_170 + 0x73317331
 dd BBf2_171 + 0x73317331
 dd BBf2_172 + 0x73317331
 dd BBf2_173 + 0x73317331
 dd BBf2_174 + 0x73317331
 dd BBf2_175 + 0x73317331
 dd BBf2_176 + 0x73317331
 dd BBf2_177 + 0x73317331
 dd BBf2_178 + 0x73317331
 dd BBf2_179 + 0x73317331
 dd BBf2_180 + 0x73317331
 dd BBf2_181 + 0x73317331
 dd BBf2_182 + 0x73317331
 dd BBf2_183 + 0x73317331
 dd BBf2_184 + 0x73317331
 dd BBf2_185 + 0x73317331
 dd BBf2_186 + 0x73317331
 dd BBf2_187 + 0x73317331
 dd BBf2_188 + 0x73317331
 dd BBf2_189 + 0x73317331
 dd BBf2_190 + 0x73317331
 dd BBf2_191 + 0x73317331
 dd BBf2_192 + 0x73317331
 dd BBf2_193 + 0x73317331
 dd BBf2_194 + 0x73317331
 dd BBf2_195 + 0x73317331
 dd BBf2_196 + 0x73317331
 dd BBf2_197 + 0x73317331
 dd BBf2_198 + 0x73317331
 dd BBf2_199 + 0x73317331
 dd BBf2_200 + 0x73317331
 dd BBf2_201 + 0x73317331
 dd BBf2_202 + 0x73317331
 dd BBf2_203 + 0x73317331
 dd BBf2_204 + 0x73317331
 dd BBf2_205 + 0x73317331
 dd BBf2_206 + 0x73317331
 dd BBf2_207 + 0x73317331
 dd BBf2_208 + 0x73317331
 dd BBf2_209 + 0x73317331
 dd BBf2_210 + 0x73317331
 dd BBf2_211 + 0x73317331
 dd BBf2_212 + 0x73317331
 dd BBf2_213 + 0x73317331
 dd BBf2_214 + 0x73317331
 dd BBf2_215 + 0x73317331
 dd BBf2_216 + 0x73317331
 dd BBf2_217 + 0x73317331
 dd BBf2_218 + 0x73317331
 dd BBf2_219 + 0x73317331
 dd BBf2_220 + 0x73317331
 dd BBf2_221 + 0x73317331
 dd BBf2_222 + 0x73317331
 dd BBf2_223 + 0x73317331
 dd BBf2_224 + 0x73317331
 dd BBf2_225 + 0x73317331
 dd BBf2_226 + 0x73317331
 dd BBf2_227 + 0x73317331
 dd BBf2_228 + 0x73317331
 dd BBf2_229 + 0x73317331
 dd BBf2_230 + 0x73317331
 dd BBf2_231 + 0x73317331
 dd BBf2_232 + 0x73317331
 dd BBf2_233 + 0x73317331
 dd BBf2_234 + 0x73317331
 dd BBf2_235 + 0x73317331
 dd BBf2_236 + 0x73317331
 dd BBf2_237 + 0x73317331
 dd BBf2_238 + 0x73317331
 dd BBf2_239 + 0x73317331
 dd BBf2_240 + 0x73317331
 dd BBf2_241 + 0x73317331
 dd BBf2_242 + 0x73317331
 dd BBf2_243 + 0x73317331
 dd BBf2_244 + 0x73317331
 dd BBf2_245 + 0x73317331
 dd BBf2_246 + 0x73317331
 dd BBf2_247 + 0x73317331
 dd BBf2_248 + 0x73317331
 dd BBf2_249 + 0x73317331
 dd BBf2_250 + 0x73317331
 dd BBf2_251 + 0x73317331
 dd BBf2_252 + 0x73317331
 dd BBf2_253 + 0x73317331
 dd BBf2_254 + 0x73317331
 dd BBf2_255 + 0x73317331
 dd BBf2_256 + 0x73317331
 dd BBf2_257 + 0x73317331
 dd BBf2_258 + 0x73317331
 dd BBf2_259 + 0x73317331
 dd BBf2_260 + 0x73317331
 dd BBf2_261 + 0x73317331
 dd BBf2_262 + 0x73317331
 dd BBf2_263 + 0x73317331
 dd BBf2_264 + 0x73317331
 dd BBf2_265 + 0x73317331
 dd BBf2_266 + 0x73317331
 dd BBf2_267 + 0x73317331
 dd BBf2_268 + 0x73317331
 dd BBf2_269 + 0x73317331
 dd BBf2_270 + 0x73317331
 dd BBf2_271 + 0x73317331
 dd BBf2_272 + 0x73317331
 dd BBf2_273 + 0x73317331
 dd BBf2_274 + 0x73317331
 dd BBf2_275 + 0x73317331
 dd BBf2_276 + 0x73317331
 dd BBf2_277 + 0x73317331
 dd BBf2_278 + 0x73317331
 dd BBf2_279 + 0x73317331
 dd BBf2_280 + 0x73317331
 dd BBf2_281 + 0x73317331
 dd BBf2_282 + 0x73317331
 dd BBf2_283 + 0x73317331
 dd BBf2_284 + 0x73317331
 dd BBf2_285 + 0x73317331
 dd BBf2_286 + 0x73317331
 dd BBf2_287 + 0x73317331
 dd BBf2_288 + 0x73317331
 dd BBf2_289 + 0x73317331
 dd BBf2_290 + 0x73317331
 dd BBf2_291 + 0x73317331
 dd BBf2_292 + 0x73317331
 dd BBf2_293 + 0x73317331
 dd BBf2_294 + 0x73317331
 dd BBf2_295 + 0x73317331
 dd BBf2_296 + 0x73317331
 dd BBf2_297 + 0x73317331
 dd BBf2_298 + 0x73317331
 dd BBf2_299 + 0x73317331
 dd BBf2_300 + 0x73317331
 dd BBf2_301 + 0x73317331
 dd BBf2_302 + 0x73317331
 dd BBf2_303 + 0x73317331
 dd BBf2_304 + 0x73317331
 dd BBf2_305 + 0x73317331
 dd BBf2_306 + 0x73317331
 dd BBf2_307 + 0x73317331
 dd BBf2_308 + 0x73317331
 dd BBf2_309 + 0x73317331
 dd BBf2_310 + 0x73317331
 dd BBf2_311 + 0x73317331
 dd BBf2_312 + 0x73317331
 dd BBf2_313 + 0x73317331
 dd BBf2_314 + 0x73317331
 dd BBf2_315 + 0x73317331
 dd BBf2_316 + 0x73317331
 dd BBf2_317 + 0x73317331
 dd BBf2_318 + 0x73317331
 dd BBf2_319 + 0x73317331
 dd BBf2_320 + 0x73317331
 dd BBf2_321 + 0x73317331
 dd BBf2_322 + 0x73317331
 dd BBf2_323 + 0x73317331
 dd BBf2_324 + 0x73317331
 dd BBf2_325 + 0x73317331
 dd BBf2_326 + 0x73317331
 dd BBf2_327 + 0x73317331
 dd BBf2_328 + 0x73317331
 dd BBf2_329 + 0x73317331
 dd BBf2_330 + 0x73317331
 dd BBf2_331 + 0x73317331
 dd BBf2_332 + 0x73317331
 dd BBf2_333 + 0x73317331
 dd BBf2_334 + 0x73317331
 dd BBf2_335 + 0x73317331
 dd BBf2_336 + 0x73317331
 dd BBf2_337 + 0x73317331
 dd BBf2_338 + 0x73317331
 dd BBf2_339 + 0x73317331
 dd BBf2_340 + 0x73317331
 dd BBf2_341 + 0x73317331
 dd BBf2_342 + 0x73317331
 dd BBf2_343 + 0x73317331
 dd BBf2_344 + 0x73317331
 dd BBf2_345 + 0x73317331
 dd BBf2_346 + 0x73317331
 dd BBf2_347 + 0x73317331
 dd BBf2_348 + 0x73317331
 dd BBf2_349 + 0x73317331
 dd BBf2_350 + 0x73317331
 dd BBf2_351 + 0x73317331
 dd BBf2_352 + 0x73317331
; ----- End of func 0 -----

;;;;;; ;;; ;=============================== END FUNC 2


;;;;;; ;;; ;=============================== START FUNC 3
section .data
reg_a3: dd 0
reg_b3: dd 0
reg_c3: dd 0
reg_d3: dd 0
reg_bp3: dd 0
reg_sp3: dd 0
reg_pc3: dd 0

section .text
global _start3
_start3:
 mov ebx, 0x1 ; fd
 mov edx, 1 ; len
 mov edi, 0
 mov eax, 1
; ----- Start of 0 -----
func_3:
 PCJMP_f3:
  cmp eax, 1
  je _PCJMP_f3
  ret
 _PCJMP_f3:
  pop eax
  mov eax, [JMP_TABLE_f3 + 4*edi]
  sub eax, 0xbadcaaaf
  jz PIX_START_f3
  jmp eax
PIX_START_f3:
 mov esi, [PIX_TABLE_f3 + 4*esi]
 jmp esi
PIXf3_0_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_0: mov edi, 0x158
 mov eax, 1
 call PCJMP_f3
BBf3_1: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x34
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_0_1
PIXf3_1_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffd0
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_1_1
PIXf3_2_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_2_1
PIXf3_3_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_12: mov edi, 0xe
 mov eax, 1
 call PCJMP_f3
BBf3_13: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 sub dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 jmp PIXf3_3_1
PIXf3_4_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_22: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 jmp PIXf3_4_1
PIXf3_5_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
BBf3_24: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0x1a
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_25: mov edi, 0x1c
 mov eax, 1
 call PCJMP_f3
BBf3_26: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_27: mov eax, dword [reg_bp3]
 jmp PIXf3_5_1
PIXf3_6_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x21
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_32: mov edi, 0x22
 mov eax, 1
 call PCJMP_f3
BBf3_33: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_6_1
PIXf3_7_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_43: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_7_1
PIXf3_8_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 jmp PIXf3_8_1
PIXf3_9_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x47
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_9_1
PIXf3_10_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x57
 cmp dword [reg_a3], 0x0
 sete  al
 jmp PIXf3_10_1
PIXf3_11_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_11_1
PIXf3_12_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x5e
 mov eax, 1
 call PCJMP_f3
BBf3_103: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_12_1
PIXf3_13_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_13_1
PIXf3_14_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x7b
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_122: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_14_1
PIXf3_15_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_136: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 jmp PIXf3_15_1
PIXf3_16_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_16_1
PIXf3_17_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x97
 cmp dword [reg_a3], 0x0
 sete  al
 jmp PIXf3_17_1
PIXf3_18_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xa1
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_160: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_18_1
PIXf3_19_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_174: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_175: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_19_1
PIXf3_20_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 jmp PIXf3_20_1
PIXf3_21_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xcd
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x9f
 jmp PIXf3_21_1
PIXf3_22_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_b3], 0x24
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_b3], 0x24
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_22_1
PIXf3_23_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xda
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f3
BBf3_218: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_23_1
PIXf3_24_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_24_1
PIXf3_25_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_242: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xf6
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_243: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_25_1
PIXf3_26_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, 0x100
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_255: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff9
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_26_1
PIXf3_27_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x10f
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_270: mov edi, 0x117
 jmp PIXf3_27_1
PIXf3_28_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x11a
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_281: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_28_1
PIXf3_29_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f3
BBf3_293: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 jmp PIXf3_29_1
PIXf3_30_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x12d
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_30_1
PIXf3_31_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_307: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 jmp PIXf3_31_1
PIXf3_32_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_32_1
PIXf3_33_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_33_1
PIXf3_34_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 jmp PIXf3_34_1
PIXf3_35_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_35_1
PIXf3_36_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_36_1
PIXf3_37_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff2
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x21
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff3
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x6b
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff4
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x70
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_37_1
PIXf3_38_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffea
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_38_1
PIXf3_39_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffe7
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_39_1
PIXf3_0_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffd0
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 jmp PIXf3_0_2
PIXf3_1_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_1_2
PIXf3_2_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_2_2
PIXf3_3_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x9
 mov eax, 1
 call PCJMP_f3
BBf3_14: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_3_2
PIXf3_4_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffe5
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_4_2
PIXf3_5_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_5_2
PIXf3_6_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 sub dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x1d
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_6_2
PIXf3_7_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_44: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x5
 jmp PIXf3_7_2
PIXf3_8_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_58: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 jmp PIXf3_8_2
PIXf3_9_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_70: mov dword [reg_a3], 0x0
BBf3_71: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0x49
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_72: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_9_2
PIXf3_10_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_86: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_10_2
PIXf3_11_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_11_2
PIXf3_12_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_104: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_105: mov eax, dword [reg_sp3]
 jmp PIXf3_12_2
PIXf3_13_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 jmp PIXf3_13_2
PIXf3_14_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 jmp PIXf3_14_2
PIXf3_15_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_137: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 jmp PIXf3_15_2
PIXf3_16_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_16_2
PIXf3_17_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_150: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_17_2
PIXf3_18_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_161: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xa3
 cmp dword [reg_a3], 0x0
 setne al
 jmp PIXf3_18_2
PIXf3_19_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xb0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_19_2
PIXf3_20_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, 0xc0
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_191: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x7a
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_20_2
PIXf3_21_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_205: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_b3], 0x1
 mov edi, 0xd1
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_206: mov dword [reg_a3], 0x20
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_21_2
PIXf3_22_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_22_2
PIXf3_23_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xdb
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f3
BBf3_219: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_23_2
PIXf3_24_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_24_2
PIXf3_25_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x78
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 jmp PIXf3_25_2
PIXf3_26_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff9
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_26_2
PIXf3_27_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_271: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_27_2
PIXf3_28_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_28_2
PIXf3_29_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_294: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_29_2
PIXf3_30_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f3
BBf3_301: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 jmp PIXf3_30_2
PIXf3_31_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_308: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_31_2
PIXf3_32_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_32_2
PIXf3_33_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x8000
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x142
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_321: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_33_2
PIXf3_34_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 jmp PIXf3_34_2
PIXf3_35_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 jmp PIXf3_35_2
PIXf3_36_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x154
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f3
BBf3_340: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x4
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_36_2
PIXf3_37_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff5
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x24
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff6
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x67
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff7
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x77
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_37_2
PIXf3_38_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffe7
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_38_2
PIXf3_39_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov edi, 0x159
 mov eax, 1
 call PCJMP_f3
BBf3_352: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
BBf3_353: nop
 mov dword [reg_a3], eax
 mov ecx, dword [reg_b3]
 mov ecx, dword [reg_b3]
 and dword [reg_d3], 0xffffff
 mov dword [reg_a3], eax
 movzx eax, al
 mov eax, dword [reg_sp3]
 and dword [reg_sp3], 0xffffff
 call PCJMP_f3
 mov eax, dword [mem3 + 4*eax]
 movzx eax, al
 jmp PIXf3_39_2
PIXf3_0_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_0_3
PIXf3_1_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_1_3
PIXf3_2_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_2_3
PIXf3_3_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_3_3
PIXf3_4_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 jmp PIXf3_4_3
PIXf3_5_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x16
 mov eax, 1
 call PCJMP_f3
BBf3_28: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcb
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_29: mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffcd
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_5_3
PIXf3_6_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_34: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 jmp PIXf3_6_3
PIXf3_7_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_45: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_7_3
PIXf3_8_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x2d
 mov eax, 1
 call PCJMP_f3
BBf3_59: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_8_3
PIXf3_9_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_73: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0x4b
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_74: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_9_3
PIXf3_10_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x58
 mov eax, 1
 call PCJMP_f3
BBf3_87: mov dword [reg_a3], 0x0
BBf3_88: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 jmp PIXf3_10_3
PIXf3_11_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x63
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_98: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_11_3
PIXf3_12_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x4
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 jmp PIXf3_12_3
PIXf3_13_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_13_3
PIXf3_14_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x7c
 mov eax, 1
 call PCJMP_f3
BBf3_123: mov dword [reg_a3], 0x0
BBf3_124: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_14_3
PIXf3_15_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 sub dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_15_3
PIXf3_16_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x90
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_16_3
PIXf3_17_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov edi, 0x98
 mov eax, 1
 call PCJMP_f3
BBf3_151: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 jmp PIXf3_17_3
PIXf3_18_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_162: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xd
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_18_3
PIXf3_19_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f3
BBf3_176: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_b3], 0x1
 mov edi, 0xb4
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_177: mov dword [reg_a3], 0x61
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_19_3
PIXf3_20_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_192: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xc4
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_193: mov dword [reg_a3], 0x41
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_20_3
PIXf3_21_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xd0
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_207: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_21_3
PIXf3_22_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x24
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_22_3
PIXf3_23_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_220: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_23_3
PIXf3_24_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xe8
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f3
BBf3_232: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0xea
 jmp PIXf3_24_3
PIXf3_25_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xf5
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_244: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_25_3
PIXf3_26_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 jmp PIXf3_26_3
PIXf3_27_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x111
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_272: mov edi, 0x116
 mov eax, 1
 call PCJMP_f3
BBf3_273: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x114
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_274: mov dword [reg_a3], 0x1
 jmp PIXf3_27_3
PIXf3_28_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov edi, 0x11b
 mov eax, 1
 call PCJMP_f3
BBf3_282: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
BBf3_283: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 jmp PIXf3_28_3
PIXf3_29_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_295: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 jmp PIXf3_29_3
PIXf3_30_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 jmp PIXf3_30_3
PIXf3_31_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x6
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_31_3
PIXf3_32_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_32_3
PIXf3_33_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_33_3
PIXf3_34_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_34_3
PIXf3_35_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_35_3
PIXf3_36_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_36_3
PIXf3_37_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff8
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x77
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff9
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x6d
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x6d
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_37_3
PIXf3_38_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffe8
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_38_3
PIXf3_39_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
 mov dword [reg_a3], 0x0
 mov dword [reg_bp3], eax
 mov eax, 1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_b3], eax
 setne al
 mov dword [reg_a3], eax
 add dword [reg_d3], 0xffffff
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_bp3], eax
 mov eax, 1
 mov eax, dword [reg_bp3]
 add dword [reg_b3], 0xfffff9
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov eax, 1
 mov eax, dword [reg_b3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [reg_d3]
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], eax
 jmp PIXf3_39_3
PIXf3_0_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_2: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_0_4
PIXf3_1_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffd0
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_1_4
PIXf3_2_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_4
PIXf3_3_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_3_4
PIXf3_4_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_4_4
PIXf3_5_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_5_4
PIXf3_6_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_6_4
PIXf3_7_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_7_4
PIXf3_8_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_8_4
PIXf3_9_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 jmp PIXf3_9_4
PIXf3_10_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_10_4
PIXf3_11_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_11_4
PIXf3_12_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_106: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_12_4
PIXf3_13_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 jmp PIXf3_13_4
PIXf3_14_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x7e
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_125: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_14_4
PIXf3_15_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_15_4
PIXf3_16_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f3
BBf3_144: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x91
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_16_4
PIXf3_17_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x61
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_17_4
PIXf3_18_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_18_4
PIXf3_19_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_19_4
PIXf3_20_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 jmp PIXf3_20_4
PIXf3_21_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x7f
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_21_4
PIXf3_22_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_22_4
PIXf3_23_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_23_4
PIXf3_24_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_24_4
PIXf3_25_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_25_4
PIXf3_26_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_26_4
PIXf3_27_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_27_4
PIXf3_28_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_284: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 jmp PIXf3_28_4
PIXf3_29_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_296: mov dword [reg_a3], 0x30
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_29_4
PIXf3_30_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 jmp PIXf3_30_4
PIXf3_31_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_31_4
PIXf3_32_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_32_4
PIXf3_33_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 jmp PIXf3_33_4
PIXf3_34_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_34_4
PIXf3_35_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_35_4
PIXf3_36_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_36_4
PIXf3_37_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x67
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x23
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x66
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 jmp PIXf3_37_4
PIXf3_38_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_38_4
PIXf3_39_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_39_4
PIXf3_0_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffe8
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_0_5
PIXf3_1_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_1_5
PIXf3_2_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_5
PIXf3_3_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_3_5
PIXf3_4_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_4_5
PIXf3_5_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_5_5
PIXf3_6_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_35: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_36: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_6_5
PIXf3_7_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x18
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 jmp PIXf3_7_5
PIXf3_8_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_60: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_8_5
PIXf3_9_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_75: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 jmp PIXf3_9_5
PIXf3_10_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_10_5
PIXf3_11_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_11_5
PIXf3_12_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x18
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x6c
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_107: mov edi, 0x6d
 mov eax, 1
 jmp PIXf3_12_5
PIXf3_13_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_114: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 jmp PIXf3_13_5
PIXf3_14_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_14_5
PIXf3_15_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x8a
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f3
BBf3_138: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_15_5
PIXf3_16_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f3
BBf3_145: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_16_5
PIXf3_17_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
BBf3_152: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_17_5
PIXf3_18_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_18_5
PIXf3_19_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xb3
 cmp dword [reg_a3], 0x0
 sete  al
 jmp PIXf3_19_5
PIXf3_20_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], 0x0
 mov edi, 0xc3
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_194: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x5a
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_20_5
PIXf3_21_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_208: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_209: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_21_5
PIXf3_22_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_22_5
PIXf3_23_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_221: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_23_5
PIXf3_24_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_233: mov edi, 0xe7
 mov eax, 1
 call PCJMP_f3
BBf3_234: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x2d
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_24_5
PIXf3_25_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x58
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_245: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_25_5
PIXf3_26_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_256: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff9
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_26_5
PIXf3_27_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_27_5
PIXf3_28_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_285: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_28_5
PIXf3_29_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_29_5
PIXf3_30_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_30_5
PIXf3_31_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_31_5
PIXf3_32_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_32_5
PIXf3_33_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_33_5
PIXf3_34_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_34_5
PIXf3_35_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_337: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f3
BBf3_338: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_35_5
PIXf3_36_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_36_5
PIXf3_37_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x75
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x75
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffea
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_37_5
PIXf3_38_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_38_5
PIXf3_39_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_39_5
PIXf3_0_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 jmp PIXf3_0_6
PIXf3_1_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_1_6
PIXf3_2_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_6
PIXf3_3_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_3_6
PIXf3_4_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffcd
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 jmp PIXf3_4_6
PIXf3_5_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_5_6
PIXf3_6_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_6_6
PIXf3_7_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x2f
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_46: mov edi, 0x30
 mov eax, 1
 call PCJMP_f3
BBf3_47: mov edi, 0x3b
 mov eax, 1
 call PCJMP_f3
BBf3_48: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_7_6
PIXf3_8_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_61: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x5
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 jmp PIXf3_8_6
PIXf3_9_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x3e
 mov eax, 1
 call PCJMP_f3
BBf3_76: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_9_6
PIXf3_10_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_10_6
PIXf3_11_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_11_6
PIXf3_12_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_108: mov edi, 0x73
 mov eax, 1
 call PCJMP_f3
BBf3_109: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_12_6
PIXf3_13_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x6a
 mov eax, 1
 call PCJMP_f3
BBf3_115: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_13_6
PIXf3_14_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_14_6
PIXf3_15_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_15_6
PIXf3_16_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_146: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 jmp PIXf3_16_6
PIXf3_17_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_17_6
PIXf3_18_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_18_6
PIXf3_19_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_178: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x66
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_19_6
PIXf3_20_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_195: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_196: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 jmp PIXf3_20_6
PIXf3_21_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_21_6
PIXf3_22_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_22_6
PIXf3_23_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_222: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x7
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_23_6
PIXf3_24_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xec
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_235: mov dword [reg_a3], 0x1
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 jmp PIXf3_24_6
PIXf3_25_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_246: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0xf8
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_247: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_25_6
PIXf3_26_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff9
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_257: mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 jmp PIXf3_26_6
PIXf3_27_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_27_6
PIXf3_28_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_286: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 jmp PIXf3_28_6
PIXf3_29_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_29_6
PIXf3_30_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_30_6
PIXf3_31_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_31_6
PIXf3_32_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 jmp PIXf3_32_6
PIXf3_33_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_33_6
PIXf3_34_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_34_6
PIXf3_35_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_35_6
PIXf3_36_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x155
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_36_6
PIXf3_37_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffeb
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x2
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffec
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x3
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffed
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x4
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 jmp PIXf3_37_6
PIXf3_38_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_38_6
PIXf3_39_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov dword [reg_b3], eax
 mov eax, 1
 mov eax, dword [reg_bp3]
 call PCJMP_f3
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov eax, 1
 mov eax, dword [mem3 + 4*eax]
 call PCJMP_f3
 cmp dword [reg_a3], 0x0
 mov dword [reg_b3], eax
 mov dword [reg_a3], eax
 mov dword [reg_b3], eax
 call PCJMP_f3
 mov dword [reg_bp3], eax
 mov eax, dword [reg_a3]
 mov eax, dword [mem3 + 4*eax]
 mov eax, dword [reg_bp3]
 call PCJMP_f3
 add dword [reg_sp3], 0x1
 mov eax, 1
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], eax
 jmp PIXf3_39_6
PIXf3_0_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_0_7
PIXf3_1_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_1_7
PIXf3_2_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_7
PIXf3_3_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_15: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x35
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_3_7
PIXf3_4_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_4_7
PIXf3_5_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 jmp PIXf3_5_7
PIXf3_6_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x26
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_37: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 jmp PIXf3_6_7
PIXf3_7_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 jmp PIXf3_7_7
PIXf3_8_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_62: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_8_7
PIXf3_9_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_77: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_9_7
PIXf3_10_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_10_7
PIXf3_11_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_11_7
PIXf3_12_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_12_7
PIXf3_13_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_116: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 jmp PIXf3_13_7
PIXf3_14_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_126: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_14_7
PIXf3_15_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 jmp PIXf3_15_7
PIXf3_16_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_16_7
PIXf3_17_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_17_7
PIXf3_18_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_163: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xa5
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_164: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_18_7
PIXf3_19_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_179: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_180: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xb8
 cmp dword [reg_a3], 0x0
 setne al
 jmp PIXf3_19_7
PIXf3_20_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_197: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_20_7
PIXf3_21_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_21_7
PIXf3_22_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_22_7
PIXf3_23_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_23_7
PIXf3_24_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_24_7
PIXf3_25_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_25_7
PIXf3_26_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_258: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x103
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_26_7
PIXf3_27_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x113
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f3
BBf3_275: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 jmp PIXf3_27_7
PIXf3_28_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_28_7
PIXf3_29_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0x12a
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_297: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_29_7
PIXf3_30_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_30_7
PIXf3_31_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_31_7
PIXf3_32_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x139
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_32_7
PIXf3_33_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_33_7
PIXf3_34_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_34_7
PIXf3_35_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_35_7
PIXf3_36_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f3
BBf3_341: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_36_7
PIXf3_37_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffe9
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x12
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffe8
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x4
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_37_7
PIXf3_38_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_38_7
PIXf3_39_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_a3]
 mov eax, dword [reg_a3]
 add dword [reg_b3], 0x4
 call PCJMP_f3
 call PCJMP_f3
 mov ecx, dword [reg_d3]
 mov dword [reg_b3], eax
 add dword [reg_a3], 0x1
 add dword [reg_b3], 0xffffff
 mov eax, 1
 mov eax, dword [reg_b3]
 call PCJMP_f3
 cmp dword [reg_a3], 0x0
 call PCJMP_f3
 and dword [reg_d3], 0xffffff
 mov dword [reg_a3], eax
 sete  al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov eax, 1
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_sp3], 0xffffff
 call PCJMP_f3
 jmp PIXf3_39_7
PIXf3_0_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 jmp PIXf3_0_8
PIXf3_1_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_8
PIXf3_2_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_8
PIXf3_3_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_3_8
PIXf3_4_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_4_8
PIXf3_5_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov edi, 0x1f
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_30: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffe5
 and dword [reg_a3], 0xffffff
 jmp PIXf3_5_8
PIXf3_6_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_38: mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xfffffe
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_6_8
PIXf3_7_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 jmp PIXf3_7_8
PIXf3_8_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x18
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x40
 cmp dword [reg_a3], 0x0
 sete  al
 jmp PIXf3_8_8
PIXf3_9_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_78: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x5
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 jmp PIXf3_9_8
PIXf3_10_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x5a
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_89: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_10_8
PIXf3_11_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_11_8
PIXf3_12_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_12_8
PIXf3_13_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_117: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x4
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_13_8
PIXf3_14_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x76
 mov eax, 1
 call PCJMP_f3
BBf3_127: mov eax, dword [reg_bp3]
 jmp PIXf3_14_8
PIXf3_15_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_15_8
PIXf3_16_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_16_8
PIXf3_17_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_17_8
PIXf3_18_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x9
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 jmp PIXf3_18_8
PIXf3_19_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_181: mov dword [reg_a3], 0x41
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_19_8
PIXf3_20_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_198: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 jmp PIXf3_20_8
PIXf3_21_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_21_8
PIXf3_22_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_22_8
PIXf3_23_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xe0
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_223: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_23_8
PIXf3_24_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0xee
 mov eax, 1
 call PCJMP_f3
BBf3_236: mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_24_8
PIXf3_25_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_25_8
PIXf3_26_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f3
BBf3_259: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x105
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_260: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_26_8
PIXf3_27_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_27_8
PIXf3_28_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x11f
 mov eax, dword [reg_sp3]
 jmp PIXf3_28_8
PIXf3_29_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_29_8
PIXf3_30_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_30_8
PIXf3_31_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_31_8
PIXf3_32_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f3
BBf3_313: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_32_8
PIXf3_33_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_33_8
PIXf3_34_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_34_8
PIXf3_35_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_35_8
PIXf3_36_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_36_8
PIXf3_37_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xffffe7
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_345: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffe7
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffe9
 jmp PIXf3_37_8
PIXf3_38_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_38_8
PIXf3_39_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 add dword [reg_a3], 0xffffcd
 add dword [reg_sp3], 0x1
 mov eax, dword [reg_sp3]
 mov dword [reg_sp3], eax
 mov ecx, dword [reg_d3]
 mov dword [reg_b3], eax
 mov dword [reg_b3], eax
 mov eax, dword [reg_a3]
 mov eax, dword [reg_sp3]
 mov edi, 0x78
 mov eax, dword [reg_sp3]
 mov eax, dword [reg_a3]
 call PCJMP_f3
 mov eax, dword [mem3 + 4*eax]
 mov eax, dword [reg_a3]
 mov eax, dword [reg_a3]
 cmp dword [reg_b3], 0x0
 add dword [reg_d3], 0xffffff
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 and dword [reg_b3], 0xffffff
 mov eax, 1
 cmp dword [reg_b3], 0x0
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_39_8
PIXf3_0_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffce
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_0_9
PIXf3_1_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_9
PIXf3_2_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_9
PIXf3_3_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_3_9
PIXf3_4_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_4_9
PIXf3_5_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_5_9
PIXf3_6_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_6_9
PIXf3_7_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_7_9
PIXf3_8_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_63: mov edi, 0x41
 mov eax, 1
 call PCJMP_f3
BBf3_64: mov edi, 0x4c
 mov eax, 1
 call PCJMP_f3
BBf3_65: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_8_9
PIXf3_9_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_79: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_9_9
PIXf3_10_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 jmp PIXf3_10_9
PIXf3_11_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_11_9
PIXf3_12_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_12_9
PIXf3_13_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_118: mov eax, dword [reg_bp3]
 jmp PIXf3_13_9
PIXf3_14_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_14_9
PIXf3_15_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_9
PIXf3_16_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_16_9
PIXf3_17_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_17_9
PIXf3_18_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_165: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xa7
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_166: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_18_9
PIXf3_19_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xb7
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_182: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_19_9
PIXf3_20_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xc7
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xbe
 mov eax, 1
 jmp PIXf3_20_9
PIXf3_21_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_21_9
PIXf3_22_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_22_9
PIXf3_23_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_23_9
PIXf3_24_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_24_9
PIXf3_25_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_25_9
PIXf3_26_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_26_9
PIXf3_27_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x116
 mov eax, 1
 call PCJMP_f3
BBf3_276: mov dword [reg_a3], 0x1
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_27_9
PIXf3_28_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f3
BBf3_287: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_28_9
PIXf3_29_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_29_9
PIXf3_30_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_30_9
PIXf3_31_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x136
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_309: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_31_9
PIXf3_32_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_314: mov dword [reg_a3], 0x8000
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 jmp PIXf3_32_9
PIXf3_33_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x143
 mov eax, 1
 call PCJMP_f3
BBf3_322: mov edi, 0x144
 mov eax, 1
 call PCJMP_f3
BBf3_323: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f3
BBf3_324: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_33_9
PIXf3_34_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_34_9
PIXf3_35_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_35_9
PIXf3_36_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_36_9
PIXf3_37_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_37_9
PIXf3_38_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_38_9
PIXf3_39_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_d3]
 mov dword [reg_a3], eax
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, dword [reg_b3]
 mov dword [reg_bp3], eax
 call PCJMP_f3
 mov eax, 1
 mov eax, dword [reg_bp3]
 mov eax, dword [reg_sp3]
 mov eax, 1
 mov dword [reg_d3], eax
 mov dword [reg_a3], eax
 mov eax, 1
 add dword [reg_d3], 0xffffff
 sete  al
 add dword [reg_sp3], 0x1
 mov eax, dword [mem3 + 4*eax]
 mov eax, dword [reg_bp3]
 add dword [reg_sp3], 0x1
 mov eax, dword [reg_sp3]
 mov dword [reg_a3], eax
 jmp PIXf3_39_9
PIXf3_0_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffce
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_0_10
PIXf3_1_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_10
PIXf3_2_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xb
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_10: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_2_10
PIXf3_3_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x11
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_16: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 jmp PIXf3_3_10
PIXf3_4_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_4_10
PIXf3_5_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_5_10
PIXf3_6_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_6_10
PIXf3_7_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x32
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_49: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_7_10
PIXf3_8_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_8_10
PIXf3_9_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x18
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x51
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_80: mov edi, 0x52
 mov eax, 1
 jmp PIXf3_9_10
PIXf3_10_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_90: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 jmp PIXf3_10_10
PIXf3_11_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_11_10
PIXf3_12_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_12_10
PIXf3_13_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x18
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 jmp PIXf3_13_10
PIXf3_14_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_128: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_129: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_14_10
PIXf3_15_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_10
PIXf3_16_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_16_10
PIXf3_17_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x10
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_17_10
PIXf3_18_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xb
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_167: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xa9
 cmp dword [reg_a3], 0x0
 setne al
 jmp PIXf3_18_10
PIXf3_19_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x46
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_183: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 jmp PIXf3_19_10
PIXf3_20_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_199: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_b3], 0x1
 mov edi, 0xca
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_200: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_20_10
PIXf3_21_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_21_10
PIXf3_22_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], 0x24
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_22_10
PIXf3_23_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_224: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xe2
 cmp dword [reg_a3], 0x0
 setne al
 jmp PIXf3_23_10
PIXf3_24_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x2b
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_24_10
PIXf3_25_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x2
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_25_10
PIXf3_26_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x10d
 jmp PIXf3_26_10
PIXf3_27_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 jmp PIXf3_27_10
PIXf3_28_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_288: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 jmp PIXf3_28_10
PIXf3_29_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x39
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 jmp PIXf3_29_10
PIXf3_30_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_30_10
PIXf3_31_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_310: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_31_10
PIXf3_32_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_32_10
PIXf3_33_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x146
 cmp dword [reg_a3], 0x0
 sete  al
 jmp PIXf3_33_10
PIXf3_34_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_34_10
PIXf3_35_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_35_10
PIXf3_36_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_36_10
PIXf3_37_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_37_10
PIXf3_38_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_38_10
PIXf3_39_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 mov dword [reg_b3], eax
 mov eax, dword [mem3 + 4*eax]
 call PCJMP_f3
 cmp dword [reg_b3], 0x0
 add dword [reg_sp3], 0x1
 and dword [reg_b3], 0xffffff
 add dword [reg_sp3], 0x1
 add dword [reg_b3], 0xfffffc
 call PCJMP_f3
 and dword [reg_b3], 0xffffff
 mov dword [reg_bp3], eax
 mov dword [reg_a3], eax
 sete  al
 mov eax, 1
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_d3], eax
 mov dword [reg_b3], eax
 mov dword [reg_sp3], eax
 mov eax, dword [reg_a3]
 call PCJMP_f3
 mov dword [reg_sp3], eax
 and dword [reg_b3], 0xffffff
 mov dword [reg_b3], eax
 mov dword [reg_a3], eax
 jmp PIXf3_39_10
PIXf3_0_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0x4
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_3: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffce
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_0_11
PIXf3_1_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_11
PIXf3_2_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffd0
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_2_11
PIXf3_3_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 jmp PIXf3_3_11
PIXf3_4_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_4_11
PIXf3_5_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_5_11
PIXf3_6_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x27
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f3
BBf3_39: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 jmp PIXf3_6_11
PIXf3_7_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 jmp PIXf3_7_11
PIXf3_8_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_8_11
PIXf3_9_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_81: mov edi, 0x5b
 mov eax, 1
 call PCJMP_f3
BBf3_82: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_9_11
PIXf3_10_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x4f
 mov eax, 1
 call PCJMP_f3
BBf3_91: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_10_11
PIXf3_11_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_11_11
PIXf3_12_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_12_11
PIXf3_13_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x78
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_119: mov edi, 0x79
 mov eax, 1
 call PCJMP_f3
BBf3_120: mov edi, 0x7f
 mov eax, 1
 call PCJMP_f3
BBf3_121: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_13_11
PIXf3_14_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_14_11
PIXf3_15_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_11
PIXf3_16_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_16_11
PIXf3_17_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x99
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f3
BBf3_153: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_17_11
PIXf3_18_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_168: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x20
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_18_11
PIXf3_19_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_184: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_185: mov eax, dword [reg_bp3]
 jmp PIXf3_19_11
PIXf3_20_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_20_11
PIXf3_21_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_21_11
PIXf3_22_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xd7
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_213: mov dword [reg_a3], 0x18
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xd6
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_22_11
PIXf3_23_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_225: mov dword [reg_a3], 0x24
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_23_11
PIXf3_24_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xee
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_237: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 jmp PIXf3_24_11
PIXf3_25_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x10
 jmp PIXf3_25_11
PIXf3_26_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_261: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x106
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_26_11
PIXf3_27_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_27_11
PIXf3_28_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_289: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_28_11
PIXf3_29_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_298: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0x12e
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_299: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_29_11
PIXf3_30_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_30_11
PIXf3_31_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_31_11
PIXf3_32_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov dword [reg_a3], 0x13b
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, dword [reg_c3]
 mov eax, 1
 jmp PIXf3_32_11
PIXf3_33_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_325: mov edi, 0x152
 mov eax, 1
 call PCJMP_f3
BBf3_326: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_327: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_33_11
PIXf3_34_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_34_11
PIXf3_35_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_35_11
PIXf3_36_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x156
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f3
BBf3_342: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_36_11
PIXf3_37_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_37_11
PIXf3_38_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x15d
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f3
BBf3_349: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 jmp PIXf3_38_11
PIXf3_39_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 call PCJMP_f3
 mov dword [reg_b3], eax
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov edi, 0x10a
 mov dword [reg_d3], eax
 add dword [reg_b3], 0xfffffc
 mov eax, dword [reg_a3]
 mov eax, dword [reg_d3]
 mov dword [reg_a3], eax
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], eax
 mov eax, 1
 mov ecx, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_a3], eax
 add dword [reg_d3], 0xffffff
 mov dword [reg_a3], eax
 mov eax, 1
 setne al
 mov edi, 0x5a
 mov eax, dword [reg_a3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_39_11
PIXf3_0_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_0_12
PIXf3_1_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_12
PIXf3_2_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_2_12
PIXf3_3_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_17: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_3_12
PIXf3_4_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 jmp PIXf3_4_12
PIXf3_5_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_5_12
PIXf3_6_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_6_12
PIXf3_7_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x33
 mov eax, 1
 call PCJMP_f3
BBf3_50: mov dword [reg_a3], 0x0
BBf3_51: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 jmp PIXf3_7_12
PIXf3_8_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_8_12
PIXf3_9_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_9_12
PIXf3_10_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_92: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_10_12
PIXf3_11_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_11_12
PIXf3_12_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_12_12
PIXf3_13_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_13_12
PIXf3_14_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_14_12
PIXf3_15_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x8b
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_15_12
PIXf3_16_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x94
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_147: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_16_12
PIXf3_17_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x9b
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_154: mov edi, 0x94
 mov eax, 1
 call PCJMP_f3
BBf3_155: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x9d
 jmp PIXf3_17_12
PIXf3_18_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_169: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 jmp PIXf3_18_12
PIXf3_19_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_186: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_19_12
PIXf3_20_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_20_12
PIXf3_21_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_21_12
PIXf3_22_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f3
BBf3_214: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, ebx
 mov ebx, 0x0
 jmp PIXf3_22_12
PIXf3_23_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_226: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0xe6
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_227: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_23_12
PIXf3_24_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_24_12
PIXf3_25_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_248: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 jmp PIXf3_25_12
PIXf3_26_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f3
BBf3_262: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x10c
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_263: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_26_12
PIXf3_27_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x115
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f3
BBf3_277: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_27_12
PIXf3_28_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_28_12
PIXf3_29_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_29_12
PIXf3_30_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_30_12
PIXf3_31_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x2
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_31_12
PIXf3_32_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_315: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x13d
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_316: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 jmp PIXf3_32_12
PIXf3_33_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 jmp PIXf3_33_12
PIXf3_34_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_331: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_34_12
PIXf3_35_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_35_12
PIXf3_36_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x157
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_36_12
PIXf3_37_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_37_12
PIXf3_38_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_38_12
PIXf3_39_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, dword [reg_a3]
 cmp dword [reg_a3], 0x0
 mov eax, 1
 mov dword [reg_a3], eax
 mov eax, dword [mem3 + 4*eax]
 cmp dword [reg_a3], eax
 add dword [reg_d3], 0xffffff
 mov ecx, dword [reg_b3]
 sub dword [reg_sp3], 0x2
 mov dword [reg_b3], eax
 mov eax, dword [reg_a3]
 movzx eax, al
 and dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov dword [reg_b3], eax
 cmp dword [reg_a3], 0x0
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_bp3]
 and dword [reg_b3], 0xffffff
 call PCJMP_f3
 mov edi, 0x11
 and dword [reg_d3], 0xffffff
 mov dword [reg_b3], eax
 sete  al
 mov eax, 1
 jmp PIXf3_39_12
PIXf3_0_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_0_13
PIXf3_1_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_13
PIXf3_2_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_2_13
PIXf3_3_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x13
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_18: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_3_13
PIXf3_4_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_4_13
PIXf3_5_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffcd
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_5_13
PIXf3_6_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_40: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_41: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 jmp PIXf3_6_13
PIXf3_7_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_7_13
PIXf3_8_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x43
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_66: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_8_13
PIXf3_9_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_9_13
PIXf3_10_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_93: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x4
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 jmp PIXf3_10_13
PIXf3_11_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 jmp PIXf3_11_13
PIXf3_12_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_12_13
PIXf3_13_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_13_13
PIXf3_14_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_14_13
PIXf3_15_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f3
BBf3_139: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x8d
 cmp dword [reg_a3], 0x0
 sete  al
 jmp PIXf3_15_13
PIXf3_16_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 jmp PIXf3_16_13
PIXf3_17_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_156: mov dword [reg_a3], 0x2d
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 sub dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 jmp PIXf3_17_13
PIXf3_18_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_170: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_18_13
PIXf3_19_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x41
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_19_13
PIXf3_20_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_20_13
PIXf3_21_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_21_13
PIXf3_22_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 int 0x80
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_215: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_22_13
PIXf3_23_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xe5
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
 jmp PIXf3_23_13
PIXf3_24_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_238: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_24_13
PIXf3_25_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xfd
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_249: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_25_13
PIXf3_26_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x108
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_26_13
PIXf3_27_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_27_13
PIXf3_28_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x122
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f3
BBf3_290: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 jmp PIXf3_28_13
PIXf3_29_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_29_13
PIXf3_30_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_30_13
PIXf3_31_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x137
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_31_13
PIXf3_32_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 jmp PIXf3_32_13
PIXf3_33_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov edi, 0x149
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_328: mov edi, 0x14a
 mov eax, 1
 call PCJMP_f3
BBf3_329: mov edi, 0x14c
 mov eax, 1
 call PCJMP_f3
BBf3_330: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_33_13
PIXf3_34_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x147
 mov eax, 1
 call PCJMP_f3
BBf3_332: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_34_13
PIXf3_35_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_35_13
PIXf3_36_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_36_13
PIXf3_37_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_37_13
PIXf3_38_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_38_13
PIXf3_39_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x1
 call PCJMP_f3
 mov eax, dword [reg_b3]
 add dword [reg_b3], 0xffffff
 mov dword [mem3 + 4*ecx], eax
 call PCJMP_f3
 add dword [reg_b3], 0x2
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_sp3]
 sub dword [reg_a3], eax
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [mem3 + 4*ecx], eax
 and dword [reg_sp3], 0xffffff
 cmp dword [reg_b3], 0x0
 mov dword [reg_b3], eax
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 cmp dword [reg_b3], 0x0
 mov eax, dword [mem3 + 4*eax]
 call PCJMP_f3
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 add dword [reg_b3], 0xfffffe
 mov edi, 0xf2
 jmp PIXf3_39_13
PIXf3_0_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_0_14
PIXf3_1_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_14
PIXf3_2_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_14
PIXf3_3_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_3_14
PIXf3_4_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_4_14
PIXf3_5_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_5_14
PIXf3_6_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_6_14
PIXf3_7_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x35
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_52: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_7_14
PIXf3_8_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_8_14
PIXf3_9_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_9_14
PIXf3_10_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_94: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_10_14
PIXf3_11_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x64
 mov eax, 1
 call PCJMP_f3
BBf3_99: mov dword [reg_a3], 0x0
BBf3_100: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_11_14
PIXf3_12_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_12_14
PIXf3_13_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_13_14
PIXf3_14_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
BBf3_130: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x84
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_131: mov edi, 0x85
 mov eax, 1
 call PCJMP_f3
BBf3_132: mov edi, 0x87
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_14_14
PIXf3_15_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_140: mov edi, 0x89
 mov eax, 1
 call PCJMP_f3
BBf3_141: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_15_14
PIXf3_16_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_148: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 sub dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 jmp PIXf3_16_14
PIXf3_17_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_157: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 jmp PIXf3_17_14
PIXf3_18_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_171: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_18_14
PIXf3_19_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xbc
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_187: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_19_14
PIXf3_20_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_20_14
PIXf3_21_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_21_14
PIXf3_22_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_22_14
PIXf3_23_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_23_14
PIXf3_24_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_24_14
PIXf3_25_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_25_14
PIXf3_26_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xba
 mov eax, 1
 call PCJMP_f3
BBf3_264: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x10a
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_265: mov dword [reg_a3], 0x41
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_26_14
PIXf3_27_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_278: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_27_14
PIXf3_28_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_291: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_28_14
PIXf3_29_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_29_14
PIXf3_30_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_30_14
PIXf3_31_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f3
BBf3_311: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_31_14
PIXf3_32_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_32_14
PIXf3_33_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_33_14
PIXf3_34_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x14e
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_333: mov eax, dword [reg_bp3]
 jmp PIXf3_34_14
PIXf3_35_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_35_14
PIXf3_36_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_36_14
PIXf3_37_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_37_14
PIXf3_38_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x15e
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x4e
 mov eax, 1
 call PCJMP_f3
BBf3_350: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_38_14
PIXf3_39_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_a3], eax
 mov dword [mem3 + 4*ecx], eax
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], eax
 mov eax, dword [mem3 + 4*eax]
 and dword [reg_sp3], 0xffffff
 mov eax, 1
 mov dword [reg_a3], eax
 mov dword [reg_d3], eax
 setne al
 and dword [reg_sp3], 0xffffff
 call PCJMP_f3
 mov dword [reg_b3], eax
 add dword [reg_sp3], 0x1
 mov eax, dword [reg_b3]
 movzx eax, al
 call PCJMP_f3
 cmp dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov eax, 1
 mov eax, 1
 jmp PIXf3_39_14
PIXf3_0_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_4: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0x6
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_5: mov edi, 0x8
 jmp PIXf3_0_15
PIXf3_1_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffce
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_7: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_1_15
PIXf3_2_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_2_15
PIXf3_3_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_19: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_3_15
PIXf3_4_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_4_15
PIXf3_5_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 jmp PIXf3_5_15
PIXf3_6_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xfffffe
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 jmp PIXf3_6_15
PIXf3_7_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_7_15
PIXf3_8_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x44
 mov eax, 1
 call PCJMP_f3
BBf3_67: mov dword [reg_a3], 0x0
BBf3_68: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_8_15
PIXf3_9_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x54
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_83: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_9_15
PIXf3_10_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x18
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x60
 cmp dword [reg_a3], 0x0
 sete  al
 jmp PIXf3_10_15
PIXf3_11_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x66
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_101: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_11_15
PIXf3_12_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x6f
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_110: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_12_15
PIXf3_13_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_13_15
PIXf3_14_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_133: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, 0x4
 mov ecx, reg_a3
 int 0x80
 add dword [reg_sp3], 0x1
 jmp PIXf3_14_15
PIXf3_15_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_142: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_143: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_15_15
PIXf3_16_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x10
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_16_15
PIXf3_17_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_158: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_17_15
PIXf3_18_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xad
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_172: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_18_15
PIXf3_19_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x5a
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_188: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_19_15
PIXf3_20_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xc9
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f3
BBf3_201: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_202: mov eax, dword [reg_b3]
 jmp PIXf3_20_15
PIXf3_21_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_210: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 jmp PIXf3_21_15
PIXf3_22_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_216: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_217: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_22_15
PIXf3_23_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_228: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 jmp PIXf3_23_15
PIXf3_24_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xf0
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_239: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_24_15
PIXf3_25_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xfb
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_250: mov dword [reg_a3], 0x8
 mov edi, 0xfc
 jmp PIXf3_25_15
PIXf3_26_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov edi, 0x10b
 mov eax, 1
 call PCJMP_f3
BBf3_266: mov dword [reg_a3], 0x61
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_26_15
PIXf3_27_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 jmp PIXf3_27_15
PIXf3_28_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_292: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_28_15
PIXf3_29_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x3
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_29_15
PIXf3_30_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x12f
 mov eax, 1
 call PCJMP_f3
BBf3_302: mov edi, 0x130
 mov eax, 1
 call PCJMP_f3
BBf3_303: mov edi, 0x128
 mov eax, 1
 call PCJMP_f3
BBf3_304: mov eax, dword [reg_bp3]
 jmp PIXf3_30_15
PIXf3_31_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x138
 mov eax, dword [reg_sp3]
 jmp PIXf3_31_15
PIXf3_32_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x13e
 mov eax, 1
 call PCJMP_f3
BBf3_317: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f3
BBf3_318: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f3
BBf3_319: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_32_15
PIXf3_33_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 jmp PIXf3_33_15
PIXf3_34_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x150
 mov eax, 1
 call PCJMP_f3
BBf3_334: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_34_15
PIXf3_35_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_35_15
PIXf3_36_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f3
BBf3_343: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x4
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_36_15
PIXf3_37_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x15b
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_346: mov edi, 0x15c
 mov eax, 1
 call PCJMP_f3
BBf3_347: mov edi, 0x160
 mov eax, 1
 jmp PIXf3_37_15
PIXf3_38_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffee
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_38_15
PIXf3_39_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 call PCJMP_f3
 mov eax, dword [reg_a3]
 mov dword [reg_a3], eax
 mov dword [reg_sp3], eax
 sub dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_a3], eax
 cmp dword [reg_b3], 0x0
 cmp dword [reg_a3], 0x0
 mov dword [reg_d3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 add dword [reg_b3], 0xfffffe
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov eax, dword [mem3 + 4*eax]
 add dword [reg_b3], 0x2
 add dword [reg_b3], 0xfffffe
 mov eax, dword [reg_d3]
 sub dword [reg_sp3], 0x35
 add dword [reg_d3], 0xffffff
 call PCJMP_f3
 add dword [reg_b3], 0x3
 add dword [reg_sp3], 0x1
 jmp PIXf3_39_15
PIXf3_0_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_6: mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffd0
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_0_16
PIXf3_1_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x2
 mov eax, 1
 call PCJMP_f3
BBf3_8: mov dword [reg_a3], 0x0
 jmp PIXf3_1_16
PIXf3_2_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_11: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_2_16
PIXf3_3_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x15
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_20: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_3_16
PIXf3_4_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0x18
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_23: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_4_16
PIXf3_5_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 jmp PIXf3_5_16
PIXf3_6_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_6_16
PIXf3_7_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x1
 mov edi, 0x36
 mov eax, 1
 call PCJMP_f3
BBf3_53: mov dword [reg_a3], 0x0
BBf3_54: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0x38
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_55: mov eax, dword [reg_bp3]
 jmp PIXf3_7_16
PIXf3_8_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 jmp PIXf3_8_16
PIXf3_9_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x55
 jmp PIXf3_9_16
PIXf3_10_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_95: mov edi, 0x61
 mov eax, 1
 call PCJMP_f3
BBf3_96: mov edi, 0x67
 mov eax, 1
 call PCJMP_f3
BBf3_97: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_10_16
PIXf3_11_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_102: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_11_16
PIXf3_12_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x70
 jmp PIXf3_12_16
PIXf3_13_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 jmp PIXf3_13_16
PIXf3_14_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
BBf3_134: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 jmp PIXf3_14_16
PIXf3_15_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x20
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffe0
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_15_16
PIXf3_16_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x95
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_16_16
PIXf3_17_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_159: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 jmp PIXf3_17_16
PIXf3_18_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x39
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_18_16
PIXf3_19_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_189: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_19_16
PIXf3_20_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_203: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_20_16
PIXf3_21_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_211: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 jmp PIXf3_21_16
PIXf3_22_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_22_16
PIXf3_23_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_229: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_23_16
PIXf3_24_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x10
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_240: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xf2
 cmp dword [reg_a3], 0x0
 sete  al
 jmp PIXf3_24_16
PIXf3_25_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_251: mov dword [reg_a3], 0xa
BBf3_252: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_253: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x101
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_254: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_25_16
PIXf3_26_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
BBf3_267: mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 jmp PIXf3_26_16
PIXf3_27_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x102
 mov eax, 1
 call PCJMP_f3
BBf3_279: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_27_16
PIXf3_28_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_28_16
PIXf3_29_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x12c
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f3
BBf3_300: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_29_16
PIXf3_30_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_30_16
PIXf3_31_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f3
BBf3_312: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 jmp PIXf3_31_16
PIXf3_32_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 jmp PIXf3_32_16
PIXf3_33_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_33_16
PIXf3_34_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 jmp PIXf3_34_16
PIXf3_35_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_35_16
PIXf3_36_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_344: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x19
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffee
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x55
 mov eax, dword [reg_a3]
 jmp PIXf3_36_16
PIXf3_37_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_348: mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffee
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_37_16
PIXf3_38_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffe7
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_38_16
PIXf3_39_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov dword [reg_sp3], eax
 mov dword [reg_a3], eax
 mov eax, 1
 sub dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 mov dword [reg_sp3], eax
 mov dword [reg_b3], eax
 mov eax, 1
 and dword [reg_a3], 0xffffff
 mov eax, dword [mem3 + 4*eax]
 mov eax, 1
 mov dword [reg_a3], eax
 and dword [reg_d3], 0xffffff
 call PCJMP_f3
 and dword [reg_d3], 0xffffff
 add dword [reg_b3], 0xffffe7
 call PCJMP_f3
 mov eax, 1
 mov eax, dword [mem3 + 4*eax]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 call PCJMP_f3
 jmp PIXf3_39_16
PIXf3_0_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov esi, 1
 jmp PIX_END_f3
PIXf3_1_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcd
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_9: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffe8
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov esi, 2
 jmp PIX_END_f3
PIXf3_2_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xd
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
 mov esi, 3
 jmp PIX_END_f3
PIXf3_3_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_21: mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov esi, 4
 jmp PIX_END_f3
PIXf3_4_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov esi, 5
 jmp PIX_END_f3
PIXf3_5_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_31: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov esi, 6
 jmp PIX_END_f3
PIXf3_6_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x2a
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f3
BBf3_42: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov esi, 7
 jmp PIX_END_f3
PIXf3_7_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_56: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0x3a
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_57: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov esi, 8
 jmp PIX_END_f3
PIXf3_8_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x46
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_69: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 mov esi, 9
 jmp PIX_END_f3
PIXf3_9_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_84: mov dword [reg_a3], 0x0
BBf3_85: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov esi, 10
 jmp PIX_END_f3
PIXf3_10_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov esi, 11
 jmp PIX_END_f3
PIXf3_11_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov esi, 12
 jmp PIX_END_f3
PIXf3_12_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_111: mov dword [reg_a3], 0x0
BBf3_112: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x72
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_113: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov esi, 13
 jmp PIX_END_f3
PIXf3_13_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov esi, 14
 jmp PIX_END_f3
PIXf3_14_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x82
 mov eax, 1
 call PCJMP_f3
BBf3_135: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 mov esi, 15
 jmp PIX_END_f3
PIXf3_15_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x20
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov esi, 16
 jmp PIX_END_f3
PIXf3_16_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f3
BBf3_149: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov esi, 17
 jmp PIX_END_f3
PIXf3_17_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xc
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 mov esi, 18
 jmp PIX_END_f3
PIXf3_18_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_173: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 mov esi, 19
 jmp PIX_END_f3
PIXf3_19_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_190: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x61
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov esi, 20
 jmp PIX_END_f3
PIXf3_20_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_204: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 mov esi, 21
 jmp PIX_END_f3
PIXf3_21_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_212: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov esi, 22
 jmp PIX_END_f3
PIXf3_22_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov esi, 23
 jmp PIX_END_f3
PIXf3_23_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_230: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_231: mov eax, dword [reg_bp3]
 mov esi, 24
 jmp PIX_END_f3
PIXf3_24_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_241: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov esi, 25
 jmp PIX_END_f3
PIXf3_25_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff9
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov esi, 26
 jmp PIX_END_f3
PIXf3_26_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f3
BBf3_268: mov edi, 0x117
 mov eax, 1
 call PCJMP_f3
BBf3_269: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov esi, 27
 jmp PIX_END_f3
PIXf3_27_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x11c
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_280: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov esi, 28
 jmp PIX_END_f3
PIXf3_28_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x125
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 mov esi, 29
 jmp PIX_END_f3
PIXf3_29_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov esi, 30
 jmp PIX_END_f3
PIXf3_30_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_305: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_306: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov esi, 31
 jmp PIX_END_f3
PIXf3_31_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov esi, 32
 jmp PIX_END_f3
PIXf3_32_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov dword [reg_a3], 0x140
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, dword [reg_c3]
 mov eax, 1
 call PCJMP_f3
BBf3_320: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 mov esi, 33
 jmp PIX_END_f3
PIXf3_33_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov esi, 34
 jmp PIX_END_f3
PIXf3_34_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov edi, 0x150
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_335: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_336: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov esi, 35
 jmp PIX_END_f3
PIXf3_35_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x153
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f3
BBf3_339: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov esi, 36
 jmp PIX_END_f3
PIXf3_36_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffef
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x6a
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff0
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x6a
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff1
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x77
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov esi, 37
 jmp PIX_END_f3
PIXf3_37_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xffffe7
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov esi, 38
 jmp PIX_END_f3
PIXf3_38_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_351: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffe7
 and dword [reg_b3], 0xffffff
 mov esi, 39
 jmp PIX_END_f3
PIXf3_39_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 mov dword [reg_bp3], eax
 mov ecx, dword [reg_b3]
 mov eax, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 setne al
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 and dword [reg_a3], 0xffffff
 mov dword [reg_a3], eax
 mov edi, 0xca
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 add dword [reg_sp3], 0x1
 mov eax, 1
 call PCJMP_f3
 call PCJMP_f3
 and dword [reg_d3], 0xffffff
 mov esi, 40
 jmp PIX_END_f3
PIX_PAD_f3_0: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_1
PIX_PAD_f3_1: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_2
PIX_PAD_f3_2: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_3
PIX_PAD_f3_3: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_4
PIX_PAD_f3_4: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_5
PIX_PAD_f3_5: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_6
PIX_PAD_f3_6: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_7
PIX_PAD_f3_7: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_8
PIX_PAD_f3_8: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_9
PIX_PAD_f3_9: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_10
PIX_PAD_f3_10: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_11
PIX_PAD_f3_11: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_12
PIX_PAD_f3_12: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_13
PIX_PAD_f3_13: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_14
PIX_PAD_f3_14: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_15
PIX_PAD_f3_15: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_16
PIX_PAD_f3_16: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_END_f3
PIX_END_f3:
jmp PIX_START_f3
PIX_TABLE_f3:
 dd PIXf3_0_0
 dd PIXf3_1_0
 dd PIXf3_2_0
 dd PIXf3_3_0
 dd PIXf3_4_0
 dd PIXf3_5_0
 dd PIXf3_6_0
 dd PIXf3_7_0
 dd PIXf3_8_0
 dd PIXf3_9_0
 dd PIXf3_10_0
 dd PIXf3_11_0
 dd PIXf3_12_0
 dd PIXf3_13_0
 dd PIXf3_14_0
 dd PIXf3_15_0
 dd PIXf3_16_0
 dd PIXf3_17_0
 dd PIXf3_18_0
 dd PIXf3_19_0
 dd PIXf3_20_0
 dd PIXf3_21_0
 dd PIXf3_22_0
 dd PIXf3_23_0
 dd PIXf3_24_0
 dd PIXf3_25_0
 dd PIXf3_26_0
 dd PIXf3_27_0
 dd PIXf3_28_0
 dd PIXf3_29_0
 dd PIXf3_30_0
 dd PIXf3_31_0
 dd PIXf3_32_0
 dd PIXf3_33_0
 dd PIXf3_34_0
 dd PIXf3_35_0
 dd PIXf3_36_0
 dd PIXf3_37_0
 dd PIXf3_38_0
 dd PIXf3_39_0
 dd PIX_PAD_f3_0
JMP_TABLE_f3:
 dd BBf3_0 + 0xbadcaaaf
 dd BBf3_1 + 0xbadcaaaf
 dd BBf3_2 + 0xbadcaaaf
 dd BBf3_3 + 0xbadcaaaf
 dd BBf3_4 + 0xbadcaaaf
 dd BBf3_5 + 0xbadcaaaf
 dd BBf3_6 + 0xbadcaaaf
 dd BBf3_7 + 0xbadcaaaf
 dd BBf3_8 + 0xbadcaaaf
 dd BBf3_9 + 0xbadcaaaf
 dd BBf3_10 + 0xbadcaaaf
 dd BBf3_11 + 0xbadcaaaf
 dd BBf3_12 + 0xbadcaaaf
 dd BBf3_13 + 0xbadcaaaf
 dd BBf3_14 + 0xbadcaaaf
 dd BBf3_15 + 0xbadcaaaf
 dd BBf3_16 + 0xbadcaaaf
 dd BBf3_17 + 0xbadcaaaf
 dd BBf3_18 + 0xbadcaaaf
 dd BBf3_19 + 0xbadcaaaf
 dd BBf3_20 + 0xbadcaaaf
 dd BBf3_21 + 0xbadcaaaf
 dd BBf3_22 + 0xbadcaaaf
 dd BBf3_23 + 0xbadcaaaf
 dd BBf3_24 + 0xbadcaaaf
 dd BBf3_25 + 0xbadcaaaf
 dd BBf3_26 + 0xbadcaaaf
 dd BBf3_27 + 0xbadcaaaf
 dd BBf3_28 + 0xbadcaaaf
 dd BBf3_29 + 0xbadcaaaf
 dd BBf3_30 + 0xbadcaaaf
 dd BBf3_31 + 0xbadcaaaf
 dd BBf3_32 + 0xbadcaaaf
 dd BBf3_33 + 0xbadcaaaf
 dd BBf3_34 + 0xbadcaaaf
 dd BBf3_35 + 0xbadcaaaf
 dd BBf3_36 + 0xbadcaaaf
 dd BBf3_37 + 0xbadcaaaf
 dd BBf3_38 + 0xbadcaaaf
 dd BBf3_39 + 0xbadcaaaf
 dd BBf3_40 + 0xbadcaaaf
 dd BBf3_41 + 0xbadcaaaf
 dd BBf3_42 + 0xbadcaaaf
 dd BBf3_43 + 0xbadcaaaf
 dd BBf3_44 + 0xbadcaaaf
 dd BBf3_45 + 0xbadcaaaf
 dd BBf3_46 + 0xbadcaaaf
 dd BBf3_47 + 0xbadcaaaf
 dd BBf3_48 + 0xbadcaaaf
 dd BBf3_49 + 0xbadcaaaf
 dd BBf3_50 + 0xbadcaaaf
 dd BBf3_51 + 0xbadcaaaf
 dd BBf3_52 + 0xbadcaaaf
 dd BBf3_53 + 0xbadcaaaf
 dd BBf3_54 + 0xbadcaaaf
 dd BBf3_55 + 0xbadcaaaf
 dd BBf3_56 + 0xbadcaaaf
 dd BBf3_57 + 0xbadcaaaf
 dd BBf3_58 + 0xbadcaaaf
 dd BBf3_59 + 0xbadcaaaf
 dd BBf3_60 + 0xbadcaaaf
 dd BBf3_61 + 0xbadcaaaf
 dd BBf3_62 + 0xbadcaaaf
 dd BBf3_63 + 0xbadcaaaf
 dd BBf3_64 + 0xbadcaaaf
 dd BBf3_65 + 0xbadcaaaf
 dd BBf3_66 + 0xbadcaaaf
 dd BBf3_67 + 0xbadcaaaf
 dd BBf3_68 + 0xbadcaaaf
 dd BBf3_69 + 0xbadcaaaf
 dd BBf3_70 + 0xbadcaaaf
 dd BBf3_71 + 0xbadcaaaf
 dd BBf3_72 + 0xbadcaaaf
 dd BBf3_73 + 0xbadcaaaf
 dd BBf3_74 + 0xbadcaaaf
 dd BBf3_75 + 0xbadcaaaf
 dd BBf3_76 + 0xbadcaaaf
 dd BBf3_77 + 0xbadcaaaf
 dd BBf3_78 + 0xbadcaaaf
 dd BBf3_79 + 0xbadcaaaf
 dd BBf3_80 + 0xbadcaaaf
 dd BBf3_81 + 0xbadcaaaf
 dd BBf3_82 + 0xbadcaaaf
 dd BBf3_83 + 0xbadcaaaf
 dd BBf3_84 + 0xbadcaaaf
 dd BBf3_85 + 0xbadcaaaf
 dd BBf3_86 + 0xbadcaaaf
 dd BBf3_87 + 0xbadcaaaf
 dd BBf3_88 + 0xbadcaaaf
 dd BBf3_89 + 0xbadcaaaf
 dd BBf3_90 + 0xbadcaaaf
 dd BBf3_91 + 0xbadcaaaf
 dd BBf3_92 + 0xbadcaaaf
 dd BBf3_93 + 0xbadcaaaf
 dd BBf3_94 + 0xbadcaaaf
 dd BBf3_95 + 0xbadcaaaf
 dd BBf3_96 + 0xbadcaaaf
 dd BBf3_97 + 0xbadcaaaf
 dd BBf3_98 + 0xbadcaaaf
 dd BBf3_99 + 0xbadcaaaf
 dd BBf3_100 + 0xbadcaaaf
 dd BBf3_101 + 0xbadcaaaf
 dd BBf3_102 + 0xbadcaaaf
 dd BBf3_103 + 0xbadcaaaf
 dd BBf3_104 + 0xbadcaaaf
 dd BBf3_105 + 0xbadcaaaf
 dd BBf3_106 + 0xbadcaaaf
 dd BBf3_107 + 0xbadcaaaf
 dd BBf3_108 + 0xbadcaaaf
 dd BBf3_109 + 0xbadcaaaf
 dd BBf3_110 + 0xbadcaaaf
 dd BBf3_111 + 0xbadcaaaf
 dd BBf3_112 + 0xbadcaaaf
 dd BBf3_113 + 0xbadcaaaf
 dd BBf3_114 + 0xbadcaaaf
 dd BBf3_115 + 0xbadcaaaf
 dd BBf3_116 + 0xbadcaaaf
 dd BBf3_117 + 0xbadcaaaf
 dd BBf3_118 + 0xbadcaaaf
 dd BBf3_119 + 0xbadcaaaf
 dd BBf3_120 + 0xbadcaaaf
 dd BBf3_121 + 0xbadcaaaf
 dd BBf3_122 + 0xbadcaaaf
 dd BBf3_123 + 0xbadcaaaf
 dd BBf3_124 + 0xbadcaaaf
 dd BBf3_125 + 0xbadcaaaf
 dd BBf3_126 + 0xbadcaaaf
 dd BBf3_127 + 0xbadcaaaf
 dd BBf3_128 + 0xbadcaaaf
 dd BBf3_129 + 0xbadcaaaf
 dd BBf3_130 + 0xbadcaaaf
 dd BBf3_131 + 0xbadcaaaf
 dd BBf3_132 + 0xbadcaaaf
 dd BBf3_133 + 0xbadcaaaf
 dd BBf3_134 + 0xbadcaaaf
 dd BBf3_135 + 0xbadcaaaf
 dd BBf3_136 + 0xbadcaaaf
 dd BBf3_137 + 0xbadcaaaf
 dd BBf3_138 + 0xbadcaaaf
 dd BBf3_139 + 0xbadcaaaf
 dd BBf3_140 + 0xbadcaaaf
 dd BBf3_141 + 0xbadcaaaf
 dd BBf3_142 + 0xbadcaaaf
 dd BBf3_143 + 0xbadcaaaf
 dd BBf3_144 + 0xbadcaaaf
 dd BBf3_145 + 0xbadcaaaf
 dd BBf3_146 + 0xbadcaaaf
 dd BBf3_147 + 0xbadcaaaf
 dd BBf3_148 + 0xbadcaaaf
 dd BBf3_149 + 0xbadcaaaf
 dd BBf3_150 + 0xbadcaaaf
 dd BBf3_151 + 0xbadcaaaf
 dd BBf3_152 + 0xbadcaaaf
 dd BBf3_153 + 0xbadcaaaf
 dd BBf3_154 + 0xbadcaaaf
 dd BBf3_155 + 0xbadcaaaf
 dd BBf3_156 + 0xbadcaaaf
 dd BBf3_157 + 0xbadcaaaf
 dd BBf3_158 + 0xbadcaaaf
 dd BBf3_159 + 0xbadcaaaf
 dd BBf3_160 + 0xbadcaaaf
 dd BBf3_161 + 0xbadcaaaf
 dd BBf3_162 + 0xbadcaaaf
 dd BBf3_163 + 0xbadcaaaf
 dd BBf3_164 + 0xbadcaaaf
 dd BBf3_165 + 0xbadcaaaf
 dd BBf3_166 + 0xbadcaaaf
 dd BBf3_167 + 0xbadcaaaf
 dd BBf3_168 + 0xbadcaaaf
 dd BBf3_169 + 0xbadcaaaf
 dd BBf3_170 + 0xbadcaaaf
 dd BBf3_171 + 0xbadcaaaf
 dd BBf3_172 + 0xbadcaaaf
 dd BBf3_173 + 0xbadcaaaf
 dd BBf3_174 + 0xbadcaaaf
 dd BBf3_175 + 0xbadcaaaf
 dd BBf3_176 + 0xbadcaaaf
 dd BBf3_177 + 0xbadcaaaf
 dd BBf3_178 + 0xbadcaaaf
 dd BBf3_179 + 0xbadcaaaf
 dd BBf3_180 + 0xbadcaaaf
 dd BBf3_181 + 0xbadcaaaf
 dd BBf3_182 + 0xbadcaaaf
 dd BBf3_183 + 0xbadcaaaf
 dd BBf3_184 + 0xbadcaaaf
 dd BBf3_185 + 0xbadcaaaf
 dd BBf3_186 + 0xbadcaaaf
 dd BBf3_187 + 0xbadcaaaf
 dd BBf3_188 + 0xbadcaaaf
 dd BBf3_189 + 0xbadcaaaf
 dd BBf3_190 + 0xbadcaaaf
 dd BBf3_191 + 0xbadcaaaf
 dd BBf3_192 + 0xbadcaaaf
 dd BBf3_193 + 0xbadcaaaf
 dd BBf3_194 + 0xbadcaaaf
 dd BBf3_195 + 0xbadcaaaf
 dd BBf3_196 + 0xbadcaaaf
 dd BBf3_197 + 0xbadcaaaf
 dd BBf3_198 + 0xbadcaaaf
 dd BBf3_199 + 0xbadcaaaf
 dd BBf3_200 + 0xbadcaaaf
 dd BBf3_201 + 0xbadcaaaf
 dd BBf3_202 + 0xbadcaaaf
 dd BBf3_203 + 0xbadcaaaf
 dd BBf3_204 + 0xbadcaaaf
 dd BBf3_205 + 0xbadcaaaf
 dd BBf3_206 + 0xbadcaaaf
 dd BBf3_207 + 0xbadcaaaf
 dd BBf3_208 + 0xbadcaaaf
 dd BBf3_209 + 0xbadcaaaf
 dd BBf3_210 + 0xbadcaaaf
 dd BBf3_211 + 0xbadcaaaf
 dd BBf3_212 + 0xbadcaaaf
 dd BBf3_213 + 0xbadcaaaf
 dd BBf3_214 + 0xbadcaaaf
 dd BBf3_215 + 0xbadcaaaf
 dd BBf3_216 + 0xbadcaaaf
 dd BBf3_217 + 0xbadcaaaf
 dd BBf3_218 + 0xbadcaaaf
 dd BBf3_219 + 0xbadcaaaf
 dd BBf3_220 + 0xbadcaaaf
 dd BBf3_221 + 0xbadcaaaf
 dd BBf3_222 + 0xbadcaaaf
 dd BBf3_223 + 0xbadcaaaf
 dd BBf3_224 + 0xbadcaaaf
 dd BBf3_225 + 0xbadcaaaf
 dd BBf3_226 + 0xbadcaaaf
 dd BBf3_227 + 0xbadcaaaf
 dd BBf3_228 + 0xbadcaaaf
 dd BBf3_229 + 0xbadcaaaf
 dd BBf3_230 + 0xbadcaaaf
 dd BBf3_231 + 0xbadcaaaf
 dd BBf3_232 + 0xbadcaaaf
 dd BBf3_233 + 0xbadcaaaf
 dd BBf3_234 + 0xbadcaaaf
 dd BBf3_235 + 0xbadcaaaf
 dd BBf3_236 + 0xbadcaaaf
 dd BBf3_237 + 0xbadcaaaf
 dd BBf3_238 + 0xbadcaaaf
 dd BBf3_239 + 0xbadcaaaf
 dd BBf3_240 + 0xbadcaaaf
 dd BBf3_241 + 0xbadcaaaf
 dd BBf3_242 + 0xbadcaaaf
 dd BBf3_243 + 0xbadcaaaf
 dd BBf3_244 + 0xbadcaaaf
 dd BBf3_245 + 0xbadcaaaf
 dd BBf3_246 + 0xbadcaaaf
 dd BBf3_247 + 0xbadcaaaf
 dd BBf3_248 + 0xbadcaaaf
 dd BBf3_249 + 0xbadcaaaf
 dd BBf3_250 + 0xbadcaaaf
 dd BBf3_251 + 0xbadcaaaf
 dd BBf3_252 + 0xbadcaaaf
 dd BBf3_253 + 0xbadcaaaf
 dd BBf3_254 + 0xbadcaaaf
 dd BBf3_255 + 0xbadcaaaf
 dd BBf3_256 + 0xbadcaaaf
 dd BBf3_257 + 0xbadcaaaf
 dd BBf3_258 + 0xbadcaaaf
 dd BBf3_259 + 0xbadcaaaf
 dd BBf3_260 + 0xbadcaaaf
 dd BBf3_261 + 0xbadcaaaf
 dd BBf3_262 + 0xbadcaaaf
 dd BBf3_263 + 0xbadcaaaf
 dd BBf3_264 + 0xbadcaaaf
 dd BBf3_265 + 0xbadcaaaf
 dd BBf3_266 + 0xbadcaaaf
 dd BBf3_267 + 0xbadcaaaf
 dd BBf3_268 + 0xbadcaaaf
 dd BBf3_269 + 0xbadcaaaf
 dd BBf3_270 + 0xbadcaaaf
 dd BBf3_271 + 0xbadcaaaf
 dd BBf3_272 + 0xbadcaaaf
 dd BBf3_273 + 0xbadcaaaf
 dd BBf3_274 + 0xbadcaaaf
 dd BBf3_275 + 0xbadcaaaf
 dd BBf3_276 + 0xbadcaaaf
 dd BBf3_277 + 0xbadcaaaf
 dd BBf3_278 + 0xbadcaaaf
 dd BBf3_279 + 0xbadcaaaf
 dd BBf3_280 + 0xbadcaaaf
 dd BBf3_281 + 0xbadcaaaf
 dd BBf3_282 + 0xbadcaaaf
 dd BBf3_283 + 0xbadcaaaf
 dd BBf3_284 + 0xbadcaaaf
 dd BBf3_285 + 0xbadcaaaf
 dd BBf3_286 + 0xbadcaaaf
 dd BBf3_287 + 0xbadcaaaf
 dd BBf3_288 + 0xbadcaaaf
 dd BBf3_289 + 0xbadcaaaf
 dd BBf3_290 + 0xbadcaaaf
 dd BBf3_291 + 0xbadcaaaf
 dd BBf3_292 + 0xbadcaaaf
 dd BBf3_293 + 0xbadcaaaf
 dd BBf3_294 + 0xbadcaaaf
 dd BBf3_295 + 0xbadcaaaf
 dd BBf3_296 + 0xbadcaaaf
 dd BBf3_297 + 0xbadcaaaf
 dd BBf3_298 + 0xbadcaaaf
 dd BBf3_299 + 0xbadcaaaf
 dd BBf3_300 + 0xbadcaaaf
 dd BBf3_301 + 0xbadcaaaf
 dd BBf3_302 + 0xbadcaaaf
 dd BBf3_303 + 0xbadcaaaf
 dd BBf3_304 + 0xbadcaaaf
 dd BBf3_305 + 0xbadcaaaf
 dd BBf3_306 + 0xbadcaaaf
 dd BBf3_307 + 0xbadcaaaf
 dd BBf3_308 + 0xbadcaaaf
 dd BBf3_309 + 0xbadcaaaf
 dd BBf3_310 + 0xbadcaaaf
 dd BBf3_311 + 0xbadcaaaf
 dd BBf3_312 + 0xbadcaaaf
 dd BBf3_313 + 0xbadcaaaf
 dd BBf3_314 + 0xbadcaaaf
 dd BBf3_315 + 0xbadcaaaf
 dd BBf3_316 + 0xbadcaaaf
 dd BBf3_317 + 0xbadcaaaf
 dd BBf3_318 + 0xbadcaaaf
 dd BBf3_319 + 0xbadcaaaf
 dd BBf3_320 + 0xbadcaaaf
 dd BBf3_321 + 0xbadcaaaf
 dd BBf3_322 + 0xbadcaaaf
 dd BBf3_323 + 0xbadcaaaf
 dd BBf3_324 + 0xbadcaaaf
 dd BBf3_325 + 0xbadcaaaf
 dd BBf3_326 + 0xbadcaaaf
 dd BBf3_327 + 0xbadcaaaf
 dd BBf3_328 + 0xbadcaaaf
 dd BBf3_329 + 0xbadcaaaf
 dd BBf3_330 + 0xbadcaaaf
 dd BBf3_331 + 0xbadcaaaf
 dd BBf3_332 + 0xbadcaaaf
 dd BBf3_333 + 0xbadcaaaf
 dd BBf3_334 + 0xbadcaaaf
 dd BBf3_335 + 0xbadcaaaf
 dd BBf3_336 + 0xbadcaaaf
 dd BBf3_337 + 0xbadcaaaf
 dd BBf3_338 + 0xbadcaaaf
 dd BBf3_339 + 0xbadcaaaf
 dd BBf3_340 + 0xbadcaaaf
 dd BBf3_341 + 0xbadcaaaf
 dd BBf3_342 + 0xbadcaaaf
 dd BBf3_343 + 0xbadcaaaf
 dd BBf3_344 + 0xbadcaaaf
 dd BBf3_345 + 0xbadcaaaf
 dd BBf3_346 + 0xbadcaaaf
 dd BBf3_347 + 0xbadcaaaf
 dd BBf3_348 + 0xbadcaaaf
 dd BBf3_349 + 0xbadcaaaf
 dd BBf3_350 + 0xbadcaaaf
 dd BBf3_351 + 0xbadcaaaf
 dd BBf3_352 + 0xbadcaaaf
; ----- End of func 0 -----
;;;;;; ;;; ;=============================== START FUNC 3


;;;;;; ;;; ;=============================== START FUNC 4
section .data
reg_a4: dd 0
reg_b4: dd 0
reg_c4: dd 0
reg_d4: dd 0
reg_bp4: dd 0
reg_sp4: dd 0
reg_pc4: dd 0

section .text
global _start4
_start4:
 mov ebx, 0x1 ; fd
 mov edx, 1 ; len
 mov edi, 0
 mov eax, 1
; ----- Start of 0 -----
func_4:
 PCJMP_f4:
  cmp eax, 1
  je _PCJMP_f4
  ret
 _PCJMP_f4:
  pop eax
  mov eax, [JMP_TABLE_f4 + 4*edi]
  sub eax, 0x13333337
  jz PIX_START_f4
  jmp eax
PIX_START_f4:
 mov esi, [PIX_TABLE_f4 + 4*esi]
 jmp esi
PIXf4_0_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_0: mov edi, 0x26a
 mov eax, 1
 call PCJMP_f4
BBf4_1: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x34
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_0_1
PIXf4_1_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffd0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 jmp PIXf4_1_1
PIXf4_2_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_2_1
PIXf4_3_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_3_1
PIXf4_4_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffcd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_4_1
PIXf4_5_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_42: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_5_1
PIXf4_6_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x2d
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_6_1
PIXf4_7_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 jmp PIXf4_7_1
PIXf4_8_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_8_1
PIXf4_9_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_78: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 jmp PIXf4_9_1
PIXf4_10_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_90: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_10_1
PIXf4_11_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 cmp dword [reg_a4], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x66
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_101: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_11_1
PIXf4_12_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 jmp PIXf4_12_1
PIXf4_13_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_13_1
PIXf4_14_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_118: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x18
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_14_1
PIXf4_15_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_15_1
PIXf4_16_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_142: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 jmp PIXf4_16_1
PIXf4_17_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x97
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_150: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_a4]
 jmp PIXf4_17_1
PIXf4_18_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x9b
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_154: mov edi, 0x94
 mov eax, 1
 call PCJMP_f4
BBf4_155: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_18_1
PIXf4_19_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_161: mov eax, dword [reg_b4]
 jmp PIXf4_19_1
PIXf4_20_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_169: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_20_1
PIXf4_21_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_179: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_180: mov eax, dword [reg_b4]
 jmp PIXf4_21_1
PIXf4_22_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x61
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_22_1
PIXf4_23_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_202: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_23_1
PIXf4_24_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_b4], 0x529
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_24_1
PIXf4_25_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_220: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_25_1
PIXf4_26_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x2d
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xec
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_235: mov dword [reg_a4], 0x1
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_26_1
PIXf4_27_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_27_1
PIXf4_28_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 jmp PIXf4_28_1
PIXf4_29_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, 0x114
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_274: mov dword [reg_a4], 0x1
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_29_1
PIXf4_30_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_30_1
PIXf4_31_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 jmp PIXf4_31_1
PIXf4_32_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_296: mov dword [reg_a4], 0x30
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_32_1
PIXf4_33_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_33_1
PIXf4_34_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_310: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_34_1
PIXf4_35_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x139
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f4
BBf4_313: mov eax, dword [reg_b4]
 jmp PIXf4_35_1
PIXf4_36_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x142
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_321: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_36_1
PIXf4_37_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_37_1
PIXf4_38_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_38_1
PIXf4_39_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x157
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x134
 mov eax, 1
 jmp PIXf4_39_1
PIXf4_40_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_349: mov eax, dword [reg_bp4]
 jmp PIXf4_40_1
PIXf4_41_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_41_1
PIXf4_42_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_359: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_42_1
PIXf4_43_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov edi, 0x170
 mov eax, 1
 call PCJMP_f4
BBf4_372: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x176
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_373: mov edi, 0x177
 mov eax, 1
 call PCJMP_f4
BBf4_374: mov edi, 0x179
 mov eax, 1
 jmp PIXf4_43_1
PIXf4_44_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_44_1
PIXf4_45_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_395: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_45_1
PIXf4_46_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_405: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x197
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_406: mov edi, 0x198
 mov eax, 1
 call PCJMP_f4
BBf4_407: mov edi, 0x19d
 mov eax, 1
 call PCJMP_f4
BBf4_408: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_46_1
PIXf4_47_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_414: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_47_1
PIXf4_48_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_428: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_429: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_48_1
PIXf4_49_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_443: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 jmp PIXf4_49_1
PIXf4_50_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, 0x1c0
 mov eax, 1
 call PCJMP_f4
BBf4_447: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_50_1
PIXf4_51_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1c3
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_450: mov edi, 0x1bc
 mov eax, 1
 call PCJMP_f4
BBf4_451: mov edi, 0x1bb
 jmp PIXf4_51_1
PIXf4_52_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_52_1
PIXf4_53_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1d6
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_53_1
PIXf4_54_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 jmp PIXf4_54_1
PIXf4_55_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_55_1
PIXf4_56_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_486: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_56_1
PIXf4_57_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x25
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1f2
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_493: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_57_1
PIXf4_58_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x215
 mov eax, 1
 call PCJMP_f4
BBf4_498: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 jmp PIXf4_58_1
PIXf4_59_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x203
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_59_1
PIXf4_60_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_60_1
PIXf4_61_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 cmp dword [reg_a4], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x214
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_528: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_61_1
PIXf4_62_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f4
BBf4_531: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
BBf4_532: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_62_1
PIXf4_63_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x100
 jmp PIXf4_63_1
PIXf4_64_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f4
BBf4_540: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_64_1
PIXf4_65_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_65_1
PIXf4_66_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x226
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f4
BBf4_550: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 jmp PIXf4_66_1
PIXf4_67_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_560: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_67_1
PIXf4_68_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 call PCJMP_f4
BBf4_574: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_b4], 0x13f
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_68_1
PIXf4_69_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_587: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_69_1
PIXf4_70_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_592: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_70_1
PIXf4_71_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x256
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f4
BBf4_598: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 jmp PIXf4_71_1
PIXf4_72_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_72_1
PIXf4_73_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_612: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_73_1
PIXf4_74_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_620: mov edi, 0x26e
 mov eax, 1
 call PCJMP_f4
BBf4_621: mov edi, 0x275
 mov eax, 1
 call PCJMP_f4
BBf4_622: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_74_1
PIXf4_75_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff8
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_75_1
PIXf4_76_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff4
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x6d
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe8
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe9
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xb
 mov eax, dword [reg_a4]
 jmp PIXf4_76_1
PIXf4_77_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_77_1
PIXf4_78_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_78_1
PIXf4_79_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_79_1
PIXf4_80_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcd
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xb
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffce
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x2c
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xc
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_80_1
PIXf4_81_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffba
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_81_1
PIXf4_82_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x2a1
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_82_1
PIXf4_0_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffd0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 jmp PIXf4_0_2
PIXf4_1_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_1_2
PIXf4_2_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_2_2
PIXf4_3_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 jmp PIXf4_3_2
PIXf4_4_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_4_2
PIXf4_5_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_43: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_44: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_5_2
PIXf4_6_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_59: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 jmp PIXf4_6_2
PIXf4_7_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_7_2
PIXf4_8_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x47
 mov eax, 1
 call PCJMP_f4
BBf4_70: mov dword [reg_a4], 0x0
BBf4_71: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 jmp PIXf4_8_2
PIXf4_9_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 sub dword [reg_sp4], 0x5
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_79: mov eax, dword [reg_bp4]
 jmp PIXf4_9_2
PIXf4_10_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x4f
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_10_2
PIXf4_11_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 jmp PIXf4_11_2
PIXf4_12_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_12_2
PIXf4_13_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_13_2
PIXf4_14_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x78
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_119: mov edi, 0x79
 mov eax, 1
 call PCJMP_f4
BBf4_120: mov edi, 0x7f
 mov eax, 1
 call PCJMP_f4
BBf4_121: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_14_2
PIXf4_15_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov edi, 0x76
 mov eax, 1
 call PCJMP_f4
BBf4_127: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_15_2
PIXf4_16_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 call PCJMP_f4
BBf4_143: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x20
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_16_2
PIXf4_17_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov edi, 0x98
 mov eax, 1
 call PCJMP_f4
BBf4_151: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_17_2
PIXf4_18_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x9d
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_156: mov dword [reg_a4], 0x2d
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_18_2
PIXf4_19_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xa3
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_162: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xd
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_19_2
PIXf4_20_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_170: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_20_2
PIXf4_21_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xb8
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_181: mov dword [reg_a4], 0x41
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_21_2
PIXf4_22_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xc0
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_191: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_22_2
PIXf4_23_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_203: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_204: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_23_2
PIXf4_24_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 jmp PIXf4_24_2
PIXf4_25_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_221: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 jmp PIXf4_25_2
PIXf4_26_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_26_2
PIXf4_27_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x2
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_27_2
PIXf4_28_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f4
BBf4_261: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x106
 mov eax, dword [reg_sp4]
 jmp PIXf4_28_2
PIXf4_29_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_29_2
PIXf4_30_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_278: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_30_2
PIXf4_31_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_31_2
PIXf4_32_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_32_2
PIXf4_33_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_33_2
PIXf4_34_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_34_2
PIXf4_35_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_35_2
PIXf4_36_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_36_2
PIXf4_37_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_37_2
PIXf4_38_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 jmp PIXf4_38_2
PIXf4_39_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_343: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_344: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_39_2
PIXf4_40_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_40_2
PIXf4_41_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_41_2
PIXf4_42_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_360: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_42_2
PIXf4_43_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_375: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 jmp PIXf4_43_2
PIXf4_44_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 jmp PIXf4_44_2
PIXf4_45_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_45_2
PIXf4_46_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_46_2
PIXf4_47_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_415: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
BBf4_416: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_47_2
PIXf4_48_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_48_2
PIXf4_49_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 jmp PIXf4_49_2
PIXf4_50_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 jmp PIXf4_50_2
PIXf4_51_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 call PCJMP_f4
BBf4_452: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_453: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_51_2
PIXf4_52_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_52_2
PIXf4_53_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_463: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x24
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_53_2
PIXf4_54_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_466: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_54_2
PIXf4_55_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1dd
 jmp PIXf4_55_2
PIXf4_56_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1e7
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_56_2
PIXf4_57_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 cmp dword [reg_a4], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1f1
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_494: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_57_2
PIXf4_58_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_58_2
PIXf4_59_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f4
BBf4_515: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f4
BBf4_516: mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 jmp PIXf4_59_2
PIXf4_60_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_60_2
PIXf4_61_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffda
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_61_2
PIXf4_62_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffda
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_62_2
PIXf4_63_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_63_2
PIXf4_64_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_541: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_64_2
PIXf4_65_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x100
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffff00
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x222
 jmp PIXf4_65_2
PIXf4_66_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_66_2
PIXf4_67_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_561: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 jmp PIXf4_67_2
PIXf4_68_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_68_2
PIXf4_69_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_588: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_69_2
PIXf4_70_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_593: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_70_2
PIXf4_71_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_71_2
PIXf4_72_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_72_2
PIXf4_73_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 jmp PIXf4_73_2
PIXf4_74_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xfffffb
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 jmp PIXf4_74_2
PIXf4_75_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xfffffb
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x2
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_75_2
PIXf4_76_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffea
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xc
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffeb
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xd
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe7
 and dword [reg_b4], 0xffffff
 jmp PIXf4_76_2
PIXf4_77_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_77_2
PIXf4_78_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 jmp PIXf4_78_2
PIXf4_79_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe8
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 jmp PIXf4_79_2
PIXf4_80_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffd0
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffd1
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x19
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffd2
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x3a
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_80_2
PIXf4_81_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_667: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffba
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_81_2
PIXf4_82_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x4e
 mov eax, 1
 call PCJMP_f4
BBf4_673: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffff9b
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_82_2
PIXf4_0_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_0_3
PIXf4_1_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_1_3
PIXf4_2_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_2_3
PIXf4_3_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_3_3
PIXf4_4_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_4_3
PIXf4_5_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x5
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_5_3
PIXf4_6_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_60: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_61: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_6_3
PIXf4_7_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x43
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_66: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_7_3
PIXf4_8_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, 0x49
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_72: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_73: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x4b
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_74: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_8_3
PIXf4_9_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x18
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 jmp PIXf4_9_3
PIXf4_10_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_91: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 jmp PIXf4_10_3
PIXf4_11_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_102: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 jmp PIXf4_11_3
PIXf4_12_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_12_3
PIXf4_13_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_13_3
PIXf4_14_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_14_3
PIXf4_15_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_128: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_129: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_15_3
PIXf4_16_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 jmp PIXf4_16_3
PIXf4_17_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x61
 mov eax, dword [reg_a4]
 jmp PIXf4_17_3
PIXf4_18_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_18_3
PIXf4_19_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_163: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xa5
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_164: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_19_3
PIXf4_20_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_171: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_20_3
PIXf4_21_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xb7
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_182: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_21_3
PIXf4_22_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x7a
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_192: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xc4
 cmp dword [reg_a4], 0x0
 setne al
 jmp PIXf4_22_3
PIXf4_23_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xcd
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_23_3
PIXf4_24_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x529
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_b4], 0x529
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_24_3
PIXf4_25_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_222: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_25_3
PIXf4_26_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0xee
 mov eax, 1
 call PCJMP_f4
BBf4_236: mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_26_3
PIXf4_27_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x10
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_248: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_27_3
PIXf4_28_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f4
BBf4_262: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x10c
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_263: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_28_3
PIXf4_29_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x113
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f4
BBf4_275: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 jmp PIXf4_29_3
PIXf4_30_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_30_3
PIXf4_31_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x11f
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f4
BBf4_287: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_31_3
PIXf4_32_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_32_3
PIXf4_33_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_33_3
PIXf4_34_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x2
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_34_3
PIXf4_35_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_314: mov dword [reg_a4], 0x8000
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_35_3
PIXf4_36_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0x143
 mov eax, 1
 jmp PIXf4_36_3
PIXf4_37_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_37_3
PIXf4_38_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_38_3
PIXf4_39_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_345: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_39_3
PIXf4_40_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x159
 mov eax, 1
 call PCJMP_f4
BBf4_350: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 jmp PIXf4_40_3
PIXf4_41_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_41_3
PIXf4_42_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_361: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_42_3
PIXf4_43_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_376: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 jmp PIXf4_43_3
PIXf4_44_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x17c
 mov eax, 1
 call PCJMP_f4
BBf4_385: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 jmp PIXf4_44_3
PIXf4_45_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x18d
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_396: mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_45_3
PIXf4_46_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x19a
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_409: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_46_3
PIXf4_47_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x1a2
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_417: mov edi, 0x1a3
 mov eax, 1
 call PCJMP_f4
BBf4_418: mov edi, 0x1a6
 mov eax, 1
 call PCJMP_f4
BBf4_419: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_47_3
PIXf4_48_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0x1af
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_430: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 jmp PIXf4_48_3
PIXf4_49_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_444: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_49_3
PIXf4_50_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_50_3
PIXf4_51_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x24
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_51_3
PIXf4_52_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_52_3
PIXf4_53_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_464: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_53_3
PIXf4_54_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_54_3
PIXf4_55_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_476: mov edi, 0x1de
 mov eax, 1
 call PCJMP_f4
BBf4_477: mov edi, 0x1e1
 mov eax, 1
 call PCJMP_f4
BBf4_478: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_55_3
PIXf4_56_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_487: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, 0x4
 mov ecx, reg_a4
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_56_3
PIXf4_57_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_57_3
PIXf4_58_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x6c
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1f4
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_499: mov edi, 0x201
 mov eax, 1
 jmp PIXf4_58_3
PIXf4_59_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_59_3
PIXf4_60_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_60_3
PIXf4_61_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x212
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_529: mov dword [reg_a4], 0x1
 jmp PIXf4_61_3
PIXf4_62_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_533: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_62_3
PIXf4_63_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x219
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f4
BBf4_537: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_63_3
PIXf4_64_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_542: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 jmp PIXf4_64_3
PIXf4_65_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f4
BBf4_546: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffeff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 jmp PIXf4_65_3
PIXf4_66_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_551: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_552: mov eax, dword [reg_sp4]
 jmp PIXf4_66_3
PIXf4_67_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_562: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_67_3
PIXf4_68_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x244
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_575: mov dword [reg_b4], 0x140
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x241
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_576: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 jmp PIXf4_68_3
PIXf4_69_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_589: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 jmp PIXf4_69_3
PIXf4_70_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x253
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_594: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_70_3
PIXf4_71_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 jmp PIXf4_71_3
PIXf4_72_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_72_3
PIXf4_73_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x266
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_613: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_73_3
PIXf4_74_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 jmp PIXf4_74_3
PIXf4_75_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_75_3
PIXf4_76_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x4
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe6
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x9
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe5
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_76_3
PIXf4_77_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x27b
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x4e
 mov eax, 1
 call PCJMP_f4
BBf4_635: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_77_3
PIXf4_78_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_643: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 jmp PIXf4_78_3
PIXf4_79_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_79_3
PIXf4_80_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffd3
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x39
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffd4
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x2f
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffd5
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x52
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_80_3
PIXf4_81_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffba
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x295
 jmp PIXf4_81_3
PIXf4_82_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffff9a
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_82_3
PIXf4_0_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_2: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_0_4
PIXf4_1_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffce
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_1_4
PIXf4_2_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_15: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_2_4
PIXf4_3_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_3_4
PIXf4_4_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_31: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_4_4
PIXf4_5_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_45: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x18
 mov eax, dword [reg_a4]
 jmp PIXf4_5_4
PIXf4_6_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_6_4
PIXf4_7_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_7_4
PIXf4_8_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_8_4
PIXf4_9_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_9_4
PIXf4_10_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_10_4
PIXf4_11_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_11_4
PIXf4_12_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_12_4
PIXf4_13_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_13_4
PIXf4_14_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_14_4
PIXf4_15_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
BBf4_130: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x84
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_131: mov edi, 0x85
 jmp PIXf4_15_4
PIXf4_16_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_16_4
PIXf4_17_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_17_4
PIXf4_18_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_18_4
PIXf4_19_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_19_4
PIXf4_20_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_20_4
PIXf4_21_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_21_4
PIXf4_22_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_22_4
PIXf4_23_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_23_4
PIXf4_24_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_24_4
PIXf4_25_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_25_4
PIXf4_26_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_26_4
PIXf4_27_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_27_4
PIXf4_28_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_28_4
PIXf4_29_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_29_4
PIXf4_30_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0x102
 mov eax, 1
 call PCJMP_f4
BBf4_279: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_30_4
PIXf4_31_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_288: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_31_4
PIXf4_32_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0x12a
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 jmp PIXf4_32_4
PIXf4_33_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_33_4
PIXf4_34_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x137
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_34_4
PIXf4_35_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_35_4
PIXf4_36_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_36_4
PIXf4_37_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_37_4
PIXf4_38_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_38_4
PIXf4_39_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_39_4
PIXf4_40_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_40_4
PIXf4_41_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_41_4
PIXf4_42_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_42_4
PIXf4_43_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_43_4
PIXf4_44_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_44_4
PIXf4_45_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_45_4
PIXf4_46_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_46_4
PIXf4_47_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_47_4
PIXf4_48_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_48_4
PIXf4_49_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_49_4
PIXf4_50_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_50_4
PIXf4_51_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_51_4
PIXf4_52_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_52_4
PIXf4_53_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_53_4
PIXf4_54_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_54_4
PIXf4_55_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_55_4
PIXf4_56_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_56_4
PIXf4_57_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1f0
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_495: mov dword [reg_a4], 0x1
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_57_4
PIXf4_58_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_500: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x64
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_58_4
PIXf4_59_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_59_4
PIXf4_60_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 jmp PIXf4_60_4
PIXf4_61_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_61_4
PIXf4_62_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_62_4
PIXf4_63_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_63_4
PIXf4_64_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_64_4
PIXf4_65_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_65_4
PIXf4_66_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_66_4
PIXf4_67_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_563: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_67_4
PIXf4_68_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_68_4
PIXf4_69_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_69_4
PIXf4_70_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_70_4
PIXf4_71_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_71_4
PIXf4_72_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_72_4
PIXf4_73_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_73_4
PIXf4_74_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_74_4
PIXf4_75_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_75_4
PIXf4_76_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_76_4
PIXf4_77_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_77_4
PIXf4_78_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x27e
 mov eax, 1
 call PCJMP_f4
BBf4_644: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffde
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_78_4
PIXf4_79_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe7
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_79_4
PIXf4_80_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xffffd6
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x56
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffd7
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x44
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffd8
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x5b
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffd9
 jmp PIXf4_80_4
PIXf4_81_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 call PCJMP_f4
BBf4_668: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffff9b
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xe2
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffff9c
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xda
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffff9d
 and dword [reg_b4], 0xffffff
 jmp PIXf4_81_4
PIXf4_82_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_82_4
PIXf4_0_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe8
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_0_5
PIXf4_1_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_7: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_1_5
PIXf4_2_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x35
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_2_5
PIXf4_3_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 jmp PIXf4_3_5
PIXf4_4_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x21
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_32: mov edi, 0x22
 mov eax, 1
 jmp PIXf4_4_5
PIXf4_5_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x2f
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_46: mov edi, 0x30
 mov eax, 1
 call PCJMP_f4
BBf4_47: mov edi, 0x3b
 mov eax, 1
 call PCJMP_f4
BBf4_48: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 jmp PIXf4_5_5
PIXf4_6_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_6_5
PIXf4_7_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_7_5
PIXf4_8_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_8_5
PIXf4_9_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 setb  al
 jmp PIXf4_9_5
PIXf4_10_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_10_5
PIXf4_11_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_11_5
PIXf4_12_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_12_5
PIXf4_13_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_13_5
PIXf4_14_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_14_5
PIXf4_15_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 call PCJMP_f4
BBf4_132: mov edi, 0x87
 mov eax, 1
 call PCJMP_f4
BBf4_133: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_15_5
PIXf4_16_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_16_5
PIXf4_17_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_17_5
PIXf4_18_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_18_5
PIXf4_19_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_19_5
PIXf4_20_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_20_5
PIXf4_21_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_21_5
PIXf4_22_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_22_5
PIXf4_23_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_23_5
PIXf4_24_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_24_5
PIXf4_25_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_25_5
PIXf4_26_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x2b
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_26_5
PIXf4_27_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_27_5
PIXf4_28_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_28_5
PIXf4_29_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_29_5
PIXf4_30_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x11c
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 jmp PIXf4_30_5
PIXf4_31_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_289: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_31_5
PIXf4_32_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_297: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_32_5
PIXf4_33_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_33_5
PIXf4_34_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f4
BBf4_311: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 jmp PIXf4_34_5
PIXf4_35_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_35_5
PIXf4_36_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_36_5
PIXf4_37_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_37_5
PIXf4_38_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_38_5
PIXf4_39_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_39_5
PIXf4_40_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_40_5
PIXf4_41_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_41_5
PIXf4_42_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_42_5
PIXf4_43_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_43_5
PIXf4_44_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_44_5
PIXf4_45_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_45_5
PIXf4_46_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_46_5
PIXf4_47_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_47_5
PIXf4_48_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_431: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x1b1
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_432: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_48_5
PIXf4_49_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_49_5
PIXf4_50_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_50_5
PIXf4_51_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_51_5
PIXf4_52_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_52_5
PIXf4_53_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_53_5
PIXf4_54_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_54_5
PIXf4_55_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_55_5
PIXf4_56_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_56_5
PIXf4_57_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_57_5
PIXf4_58_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1f6
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_501: mov edi, 0x202
 mov eax, 1
 call PCJMP_f4
BBf4_502: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_58_5
PIXf4_59_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_59_5
PIXf4_60_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_60_5
PIXf4_61_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_61_5
PIXf4_62_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_62_5
PIXf4_63_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_63_5
PIXf4_64_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_64_5
PIXf4_65_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_65_5
PIXf4_66_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_66_5
PIXf4_67_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_67_5
PIXf4_68_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_577: mov eax, 0x3
 mov ecx, reg_a4
 int 0x80
 mov edi, 0x243
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_578: mov dword [reg_a4], 0xffffff
BBf4_579: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 jmp PIXf4_68_5
PIXf4_69_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_69_5
PIXf4_70_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_70_5
PIXf4_71_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_71_5
PIXf4_72_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_72_5
PIXf4_73_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_73_5
PIXf4_74_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_74_5
PIXf4_75_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_75_5
PIXf4_76_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_76_5
PIXf4_77_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_77_5
PIXf4_78_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_645: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffde
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe6
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_78_5
PIXf4_79_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x291
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_79_5
PIXf4_80_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x59
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffda
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x35
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x22
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 jmp PIXf4_80_5
PIXf4_81_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0xc2
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffff9e
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x9a
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffff9f
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x9b
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffa0
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xe2
 jmp PIXf4_81_5
PIXf4_82_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_674: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffff9a
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_82_5
PIXf4_0_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 jmp PIXf4_0_6
PIXf4_1_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x2
 mov eax, 1
 call PCJMP_f4
BBf4_8: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcd
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_9: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe8
 jmp PIXf4_1_6
PIXf4_2_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x11
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_16: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_2_6
PIXf4_3_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_3_6
PIXf4_4_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_33: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_4_6
PIXf4_5_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_5_6
PIXf4_6_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_6_6
PIXf4_7_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_7_6
PIXf4_8_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_8_6
PIXf4_9_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x51
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_80: mov edi, 0x52
 mov eax, 1
 call PCJMP_f4
BBf4_81: mov edi, 0x5b
 mov eax, 1
 call PCJMP_f4
BBf4_82: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_9_6
PIXf4_10_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_92: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_93: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_10_6
PIXf4_11_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x5e
 mov eax, 1
 call PCJMP_f4
BBf4_103: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_11_6
PIXf4_12_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_12_6
PIXf4_13_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_13_6
PIXf4_14_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_14_6
PIXf4_15_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, 0x4
 mov ecx, reg_a4
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_134: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 jmp PIXf4_15_6
PIXf4_16_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x90
 jmp PIXf4_16_6
PIXf4_17_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_17_6
PIXf4_18_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_18_6
PIXf4_19_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_19_6
PIXf4_20_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xad
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 jmp PIXf4_20_6
PIXf4_21_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x46
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
 jmp PIXf4_21_6
PIXf4_22_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_193: mov dword [reg_a4], 0x41
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_22_6
PIXf4_23_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f4
BBf4_205: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_b4], 0x1
 mov edi, 0xd1
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_206: mov dword [reg_a4], 0x20
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_23_6
PIXf4_24_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xd7
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_213: mov dword [reg_a4], 0x18
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_24_6
PIXf4_25_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x7
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_25_6
PIXf4_26_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xee
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_237: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_26_6
PIXf4_27_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_27_6
PIXf4_28_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_28_6
PIXf4_29_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_29_6
PIXf4_30_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_280: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x11a
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_281: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_30_6
PIXf4_31_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_31_6
PIXf4_32_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_32_6
PIXf4_33_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0x12f
 mov eax, 1
 call PCJMP_f4
BBf4_302: mov edi, 0x130
 mov eax, 1
 jmp PIXf4_33_6
PIXf4_34_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_34_6
PIXf4_35_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_35_6
PIXf4_36_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_36_6
PIXf4_37_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_37_6
PIXf4_38_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_38_6
PIXf4_39_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_39_6
PIXf4_40_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_40_6
PIXf4_41_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_41_6
PIXf4_42_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_42_6
PIXf4_43_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_43_6
PIXf4_44_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 jmp PIXf4_44_6
PIXf4_45_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_397: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_45_6
PIXf4_46_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_46_6
PIXf4_47_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_47_6
PIXf4_48_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_433: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_48_6
PIXf4_49_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_49_6
PIXf4_50_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_50_6
PIXf4_51_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_51_6
PIXf4_52_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1ca
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_52_6
PIXf4_53_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 jmp PIXf4_53_6
PIXf4_54_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 jmp PIXf4_54_6
PIXf4_55_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_55_6
PIXf4_56_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_56_6
PIXf4_57_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_57_6
PIXf4_58_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_58_6
PIXf4_59_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 jmp PIXf4_59_6
PIXf4_60_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_60_6
PIXf4_61_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_61_6
PIXf4_62_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_62_6
PIXf4_63_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_63_6
PIXf4_64_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x3
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_64_6
PIXf4_65_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffff00
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_65_6
PIXf4_66_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x3
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_66_6
PIXf4_67_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_67_6
PIXf4_68_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_68_6
PIXf4_69_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_69_6
PIXf4_70_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_70_6
PIXf4_71_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_71_6
PIXf4_72_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x25c
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_603: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f4
BBf4_604: mov edi, 0x25e
 mov eax, 1
 call PCJMP_f4
BBf4_605: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f4
BBf4_606: mov edi, 0x254
 mov eax, 1
 call PCJMP_f4
BBf4_607: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_72_6
PIXf4_73_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x4
 mov eax, dword [reg_a4]
 jmp PIXf4_73_6
PIXf4_74_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_623: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_74_6
PIXf4_75_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff7
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xfffffb
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_75_6
PIXf4_76_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
BBf4_630: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe6
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_76_6
PIXf4_77_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_77_6
PIXf4_78_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x287
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_646: mov edi, 0x288
 mov eax, 1
 call PCJMP_f4
BBf4_647: mov edi, 0x28c
 mov eax, 1
 call PCJMP_f4
BBf4_648: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_78_6
PIXf4_79_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f4
BBf4_657: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_79_6
PIXf4_80_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x66
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffbb
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x21
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffba
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_80_6
PIXf4_81_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffa1
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xd4
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffa2
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xce
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffa3
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x9b
 mov eax, dword [reg_a4]
 jmp PIXf4_81_6
PIXf4_82_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffff9a
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x29d
 mov eax, 1
 call PCJMP_f4
BBf4_675: mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffbc
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_82_6
PIXf4_0_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_0_7
PIXf4_1_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_1_7
PIXf4_2_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_2_7
PIXf4_3_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0x18
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_23: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_3_7
PIXf4_4_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x1d
 mov eax, 1
 call PCJMP_f4
BBf4_34: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_4_7
PIXf4_5_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_5_7
PIXf4_6_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_6_7
PIXf4_7_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_7_7
PIXf4_8_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_8_7
PIXf4_9_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_9_7
PIXf4_10_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 jmp PIXf4_10_7
PIXf4_11_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_104: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_11_7
PIXf4_12_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_12_7
PIXf4_13_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_13_7
PIXf4_14_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_14_7
PIXf4_15_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x82
 mov eax, 1
 call PCJMP_f4
BBf4_135: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_15_7
PIXf4_16_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f4
BBf4_144: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_16_7
PIXf4_17_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_17_7
PIXf4_18_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_18_7
PIXf4_19_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_19_7
PIXf4_20_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_172: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x39
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_20_7
PIXf4_21_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_183: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_184: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_21_7
PIXf4_22_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xc3
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_194: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_22_7
PIXf4_23_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xd0
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 jmp PIXf4_23_7
PIXf4_24_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xd6
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_214: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_24_7
PIXf4_25_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xe0
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_223: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_25_7
PIXf4_26_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_26_7
PIXf4_27_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_27_7
PIXf4_28_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_28_7
PIXf4_29_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_29_7
PIXf4_30_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_30_7
PIXf4_31_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x122
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_31_7
PIXf4_32_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x39
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_32_7
PIXf4_33_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_303: mov edi, 0x128
 mov eax, 1
 call PCJMP_f4
BBf4_304: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_33_7
PIXf4_34_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_34_7
PIXf4_35_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_35_7
PIXf4_36_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_36_7
PIXf4_37_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_331: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 jmp PIXf4_37_7
PIXf4_38_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x153
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f4
BBf4_339: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_38_7
PIXf4_39_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_39_7
PIXf4_40_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_40_7
PIXf4_41_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_41_7
PIXf4_42_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x16b
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_362: mov edi, 0x16c
 mov eax, 1
 call PCJMP_f4
BBf4_363: mov edi, 0x16d
 mov eax, 1
 call PCJMP_f4
BBf4_364: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_42_7
PIXf4_43_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_43_7
PIXf4_44_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_386: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_44_7
PIXf4_45_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_45_7
PIXf4_46_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_410: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_46_7
PIXf4_47_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1a5
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_420: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_47_7
PIXf4_48_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_48_7
PIXf4_49_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_49_7
PIXf4_50_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_50_7
PIXf4_51_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_51_7
PIXf4_52_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_455: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_52_7
PIXf4_53_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_53_7
PIXf4_54_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov edi, 0x1d4
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_467: mov edi, 0x1d6
 mov eax, 1
 call PCJMP_f4
BBf4_468: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_54_7
PIXf4_55_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1e0
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_479: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_55_7
PIXf4_56_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_56_7
PIXf4_57_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_57_7
PIXf4_58_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_58_7
PIXf4_59_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x205
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_59_7
PIXf4_60_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_60_7
PIXf4_61_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_61_7
PIXf4_62_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_62_7
PIXf4_63_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_63_7
PIXf4_64_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_64_7
PIXf4_65_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffeff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_65_7
PIXf4_66_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_66_7
PIXf4_67_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x234
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 jmp PIXf4_67_7
PIXf4_68_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 jmp PIXf4_68_7
PIXf4_69_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_69_7
PIXf4_70_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_70_7
PIXf4_71_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_71_7
PIXf4_72_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_72_7
PIXf4_73_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_73_7
PIXf4_74_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 jmp PIXf4_74_7
PIXf4_75_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x3
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_75_7
PIXf4_76_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x278
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_631: mov edi, 0x279
 mov eax, 1
 call PCJMP_f4
BBf4_632: mov edi, 0x27d
 mov eax, 1
 call PCJMP_f4
BBf4_633: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff5
 and dword [reg_b4], 0xffffff
 jmp PIXf4_76_7
PIXf4_77_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_77_7
PIXf4_78_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffde
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_78_7
PIXf4_79_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_79_7
PIXf4_80_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
BBf4_661: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffba
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffbb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_80_7
PIXf4_81_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffa4
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xdc
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffa5
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xd4
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffa6
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xcf
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_81_7
PIXf4_82_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffff9b
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x2a4
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_82_7
PIXf4_0_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 jmp PIXf4_0_8
PIXf4_1_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 jmp PIXf4_1_8
PIXf4_2_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_17: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_2_8
PIXf4_3_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_3_8
PIXf4_4_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_35: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 jmp PIXf4_4_8
PIXf4_5_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_5_8
PIXf4_6_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_6_8
PIXf4_7_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_7_8
PIXf4_8_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_8_8
PIXf4_9_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_9_8
PIXf4_10_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_94: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x18
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_10_8
PIXf4_11_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_11_8
PIXf4_12_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_12_8
PIXf4_13_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_13_8
PIXf4_14_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_14_8
PIXf4_15_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_136: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_15_8
PIXf4_16_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x91
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_145: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_16_8
PIXf4_17_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_17_8
PIXf4_18_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_18_8
PIXf4_19_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_19_8
PIXf4_20_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_20_8
PIXf4_21_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_21_8
PIXf4_22_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_22_8
PIXf4_23_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_23_8
PIXf4_24_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_24_8
PIXf4_25_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_224: mov eax, dword [reg_b4]
 jmp PIXf4_25_8
PIXf4_26_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_238: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_26_8
PIXf4_27_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xfd
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_249: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_27_8
PIXf4_28_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_28_8
PIXf4_29_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_29_8
PIXf4_30_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_30_8
PIXf4_31_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f4
BBf4_290: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 jmp PIXf4_31_8
PIXf4_32_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_298: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x12e
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_299: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_32_8
PIXf4_33_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_33_8
PIXf4_34_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_34_8
PIXf4_35_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_35_8
PIXf4_36_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_322: mov edi, 0x144
 mov eax, 1
 call PCJMP_f4
BBf4_323: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f4
BBf4_324: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_36_8
PIXf4_37_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_37_8
PIXf4_38_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x154
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_38_8
PIXf4_39_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_39_8
PIXf4_40_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_40_8
PIXf4_41_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_41_8
PIXf4_42_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_42_8
PIXf4_43_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_43_8
PIXf4_44_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_44_8
PIXf4_45_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_45_8
PIXf4_46_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_46_8
PIXf4_47_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_421: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_47_8
PIXf4_48_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_434: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_48_8
PIXf4_49_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_49_8
PIXf4_50_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_50_8
PIXf4_51_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_51_8
PIXf4_52_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_52_8
PIXf4_53_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_53_8
PIXf4_54_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1d6
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 jmp PIXf4_54_8
PIXf4_55_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_55_8
PIXf4_56_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_56_8
PIXf4_57_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_57_8
PIXf4_58_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x75
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1f8
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_503: mov edi, 0x202
 mov eax, 1
 call PCJMP_f4
BBf4_504: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_58_8
PIXf4_59_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x92
 mov eax, 1
 call PCJMP_f4
BBf4_517: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f4
BBf4_518: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_59_8
PIXf4_60_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f4
BBf4_521: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_60_8
PIXf4_61_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_61_8
PIXf4_62_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_62_8
PIXf4_63_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_63_8
PIXf4_64_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_64_8
PIXf4_65_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_65_8
PIXf4_66_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x229
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f4
BBf4_553: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_66_8
PIXf4_67_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_564: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_565: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_67_8
PIXf4_68_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x140
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_68_8
PIXf4_69_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_69_8
PIXf4_70_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_70_8
PIXf4_71_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_71_8
PIXf4_72_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_72_8
PIXf4_73_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_73_8
PIXf4_74_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_74_8
PIXf4_75_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_75_8
PIXf4_76_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_76_8
PIXf4_77_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_636: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe5
 jmp PIXf4_77_8
PIXf4_78_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_78_8
PIXf4_79_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x292
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x4e
 mov eax, 1
 call PCJMP_f4
BBf4_658: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_79_8
PIXf4_80_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x297
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_662: mov edi, 0x298
 mov eax, 1
 call PCJMP_f4
BBf4_663: mov edi, 0x29c
 mov eax, 1
 call PCJMP_f4
BBf4_664: mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffbc
 and dword [reg_a4], 0xffffff
 jmp PIXf4_80_8
PIXf4_81_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffa7
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x9b
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffa8
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xcf
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffa9
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xd3
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_81_8
PIXf4_82_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x225
 mov eax, 1
 call PCJMP_f4
BBf4_676: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
BBf4_677: nop
 add dword [reg_b4], 0xfffffe
 mov eax, dword [mem4 + 4*eax]
 call PCJMP_f4
 jmp PIXf4_82_8
PIXf4_0_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffce
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_0_9
PIXf4_1_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_1_9
PIXf4_2_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x13
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_18: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_2_9
PIXf4_3_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_24: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x1a
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_25: mov edi, 0x1c
 mov eax, 1
 call PCJMP_f4
BBf4_26: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_3_9
PIXf4_4_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 call PCJMP_f4
BBf4_36: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_4_9
PIXf4_5_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x32
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 jmp PIXf4_5_9
PIXf4_6_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_6_9
PIXf4_7_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_7_9
PIXf4_8_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_8_9
PIXf4_9_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_9_9
PIXf4_10_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_10_9
PIXf4_11_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_11_9
PIXf4_12_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_12_9
PIXf4_13_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_13_9
PIXf4_14_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_14_9
PIXf4_15_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_15_9
PIXf4_16_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_146: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 jmp PIXf4_16_9
PIXf4_17_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_17_9
PIXf4_18_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_18_9
PIXf4_19_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_19_9
PIXf4_20_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_20_9
PIXf4_21_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_21_9
PIXf4_22_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_22_9
PIXf4_23_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_23_9
PIXf4_24_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_24_9
PIXf4_25_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xe2
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_225: mov dword [reg_a4], 0x24
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_25_9
PIXf4_26_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xf0
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_239: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_26_9
PIXf4_27_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xfb
 jmp PIXf4_27_9
PIXf4_28_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_28_9
PIXf4_29_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_29_9
PIXf4_30_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_30_9
PIXf4_31_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_291: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_292: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_31_9
PIXf4_32_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x3
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_32_9
PIXf4_33_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_33_9
PIXf4_34_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_34_9
PIXf4_35_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_35_9
PIXf4_36_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x146
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_325: mov edi, 0x152
 mov eax, 1
 call PCJMP_f4
BBf4_326: mov dword [reg_a4], 0x0
 jmp PIXf4_36_9
PIXf4_37_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov edi, 0x147
 mov eax, 1
 call PCJMP_f4
BBf4_332: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_37_9
PIXf4_38_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f4
BBf4_340: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_38_9
PIXf4_39_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_39_9
PIXf4_40_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_40_9
PIXf4_41_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_41_9
PIXf4_42_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_42_9
PIXf4_43_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_43_9
PIXf4_44_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_44_9
PIXf4_45_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_45_9
PIXf4_46_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_46_9
PIXf4_47_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x1a0
 mov eax, 1
 call PCJMP_f4
BBf4_422: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 jmp PIXf4_47_9
PIXf4_48_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_48_9
PIXf4_49_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_49_9
PIXf4_50_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_50_9
PIXf4_51_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_51_9
PIXf4_52_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1c9
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_456: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_52_9
PIXf4_53_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_53_9
PIXf4_54_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_54_9
PIXf4_55_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_55_9
PIXf4_56_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_56_9
PIXf4_57_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_57_9
PIXf4_58_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x78
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 jmp PIXf4_58_9
PIXf4_59_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_59_9
PIXf4_60_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20a
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x8f
 mov eax, 1
 call PCJMP_f4
BBf4_522: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x124
 jmp PIXf4_60_9
PIXf4_61_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_61_9
PIXf4_62_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_62_9
PIXf4_63_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_63_9
PIXf4_64_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_64_9
PIXf4_65_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_65_9
PIXf4_66_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_554: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 jmp PIXf4_66_9
PIXf4_67_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_67_9
PIXf4_68_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_580: mov dword [reg_b4], 0x13f
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_68_9
PIXf4_69_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_69_9
PIXf4_70_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_70_9
PIXf4_71_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_71_9
PIXf4_72_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_72_9
PIXf4_73_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_73_9
PIXf4_74_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_74_9
PIXf4_75_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_75_9
PIXf4_76_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_76_9
PIXf4_77_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_77_9
PIXf4_78_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffec
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_78_9
PIXf4_79_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_79_9
PIXf4_80_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffba
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_80_9
PIXf4_81_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffaa
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xd2
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffab
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xc8
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffac
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x9b
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_81_9
PIXf4_82_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_sp4], eax
 mov eax, dword [reg_a4]
 call PCJMP_f4
 and dword [reg_d4], 0xffffff
 mov eax, 1
 call PCJMP_f4
 mov eax, 1
 mov eax, dword [reg_sp4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 call PCJMP_f4
 mov eax, dword [mem4 + 4*eax]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_a4], 0x90
 mov eax, dword [reg_sp4]
 call PCJMP_f4
 mov dword [reg_a4], 0x0
 mov dword [reg_b4], eax
 mov dword [reg_bp4], eax
 add dword [reg_sp4], 0x1
 call PCJMP_f4
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_b4], eax
 jmp PIXf4_82_9
PIXf4_0_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffce
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_0_10
PIXf4_1_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xb
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_10: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_1_10
PIXf4_2_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_19: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 jmp PIXf4_2_10
PIXf4_3_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_27: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 jmp PIXf4_3_10
PIXf4_4_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x26
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_37: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_4_10
PIXf4_5_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_49: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_5_10
PIXf4_6_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_6_10
PIXf4_7_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_7_10
PIXf4_8_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_8_10
PIXf4_9_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x54
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_83: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_9_10
PIXf4_10_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_10_10
PIXf4_11_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_11_10
PIXf4_12_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_12_10
PIXf4_13_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_114: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_13_10
PIXf4_14_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_14_10
PIXf4_15_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
BBf4_137: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_15_10
PIXf4_16_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_16_10
PIXf4_17_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_17_10
PIXf4_18_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_18_10
PIXf4_19_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_19_10
PIXf4_20_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_173: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_20_10
PIXf4_21_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_185: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_186: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_21_10
PIXf4_22_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x5a
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_195: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 jmp PIXf4_22_10
PIXf4_23_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_207: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x7f
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_23_10
PIXf4_24_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_215: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_24_10
PIXf4_25_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_226: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0xe6
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_227: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 jmp PIXf4_25_10
PIXf4_26_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x10
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_240: mov eax, dword [reg_b4]
 jmp PIXf4_26_10
PIXf4_27_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_250: mov dword [reg_a4], 0x8
 mov edi, 0xfc
 mov eax, 1
 call PCJMP_f4
BBf4_251: mov dword [reg_a4], 0xa
BBf4_252: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_253: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x101
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_27_10
PIXf4_28_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_28_10
PIXf4_29_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_29_10
PIXf4_30_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_30_10
PIXf4_31_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_31_10
PIXf4_32_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_32_10
PIXf4_33_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_33_10
PIXf4_34_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_34_10
PIXf4_35_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_35_10
PIXf4_36_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_327: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_36_10
PIXf4_37_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x14e
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_333: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_37_10
PIXf4_38_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_38_10
PIXf4_39_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_39_10
PIXf4_40_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_40_10
PIXf4_41_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_41_10
PIXf4_42_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x169
 mov eax, 1
 jmp PIXf4_42_10
PIXf4_43_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x174
 mov eax, 1
 call PCJMP_f4
BBf4_377: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_43_10
PIXf4_44_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_387: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 jmp PIXf4_44_10
PIXf4_45_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x184
 mov eax, 1
 call PCJMP_f4
BBf4_398: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_45_10
PIXf4_46_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_46_10
PIXf4_47_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_423: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_47_10
PIXf4_48_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_48_10
PIXf4_49_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_49_10
PIXf4_50_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_50_10
PIXf4_51_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_51_10
PIXf4_52_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_457: mov edi, 0x1cb
 mov eax, 1
 call PCJMP_f4
BBf4_458: mov edi, 0x1cc
 mov eax, 1
 call PCJMP_f4
BBf4_459: mov edi, 0x1c6
 mov eax, 1
 call PCJMP_f4
BBf4_460: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_52_10
PIXf4_53_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_53_10
PIXf4_54_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_54_10
PIXf4_55_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_55_10
PIXf4_56_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_56_10
PIXf4_57_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_57_10
PIXf4_58_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1fa
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_505: mov edi, 0x204
 mov eax, 1
 call PCJMP_f4
BBf4_506: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_58_10
PIXf4_59_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f4
BBf4_519: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_59_10
PIXf4_60_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20b
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_523: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_60_10
PIXf4_61_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_61_10
PIXf4_62_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x1e9
 mov eax, 1
 call PCJMP_f4
BBf4_534: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_62_10
PIXf4_63_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_63_10
PIXf4_64_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_64_10
PIXf4_65_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_65_10
PIXf4_66_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_66_10
PIXf4_67_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x237
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_566: mov edi, 0x238
 mov eax, 1
 call PCJMP_f4
BBf4_567: mov edi, 0x23a
 mov eax, 1
 call PCJMP_f4
BBf4_568: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_67_10
PIXf4_68_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov dword [reg_b4], 0x13f
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_68_10
PIXf4_69_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_69_10
PIXf4_70_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_70_10
PIXf4_71_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_71_10
PIXf4_72_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_72_10
PIXf4_73_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0x267
 mov eax, 1
 call PCJMP_f4
BBf4_614: mov edi, 0x268
 mov eax, 1
 call PCJMP_f4
BBf4_615: mov edi, 0x264
 mov eax, 1
 call PCJMP_f4
BBf4_616: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_73_10
PIXf4_74_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov edi, 0x271
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_624: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_74_10
PIXf4_75_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff6
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 jmp PIXf4_75_10
PIXf4_76_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe5
 and dword [reg_b4], 0xffffff
 jmp PIXf4_76_10
PIXf4_77_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x276
 mov eax, 1
 call PCJMP_f4
BBf4_637: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe0
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xb1
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe1
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x9e
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_77_10
PIXf4_78_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffde
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 jmp PIXf4_78_10
PIXf4_79_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 jmp PIXf4_79_10
PIXf4_80_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_80_10
PIXf4_81_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffad
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xc8
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffae
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xcf
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffaf
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xc9
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_81_10
PIXf4_82_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_bp4], eax
 mov eax, 1
 mov dword [reg_a4], eax
 and dword [reg_sp4], 0xffffff
 mov dword [reg_bp4], eax
 mov dword [reg_bp4], eax
 add dword [reg_b4], 0xfffffc
 mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [mem4 + 4*eax]
 sete  al
 mov ebx, 0x0
 mov eax, dword [mem4 + 4*eax]
 mov eax, dword [reg_a4]
 mov edi, 0x82
 mov eax, dword [reg_bp4]
 call PCJMP_f4
 sete  al
 sete  al
 mov dword [reg_d4], eax
 mov eax, dword [reg_sp4]
 and dword [reg_sp4], 0xffffff
 mov ecx, dword [reg_a4]
 mov eax, dword [reg_d4]
 sub dword [reg_sp4], 0x2
 jmp PIXf4_82_10
PIXf4_0_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0x4
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_3: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffce
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_0_11
PIXf4_1_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xffffcd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffd0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_1_11
PIXf4_2_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 jmp PIXf4_2_11
PIXf4_3_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x16
 mov eax, 1
 call PCJMP_f4
BBf4_28: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcb
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 jmp PIXf4_3_11
PIXf4_4_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_38: mov eax, dword [reg_bp4]
 jmp PIXf4_4_11
PIXf4_5_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x33
 mov eax, 1
 call PCJMP_f4
BBf4_50: mov dword [reg_a4], 0x0
BBf4_51: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_5_11
PIXf4_6_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_6_11
PIXf4_7_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_7_11
PIXf4_8_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_8_11
PIXf4_9_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 jmp PIXf4_9_11
PIXf4_10_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_10_11
PIXf4_11_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_11_11
PIXf4_12_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_12_11
PIXf4_13_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_13_11
PIXf4_14_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x7b
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_122: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_14_11
PIXf4_15_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_15_11
PIXf4_16_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_16_11
PIXf4_17_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_17_11
PIXf4_18_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_18_11
PIXf4_19_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_19_11
PIXf4_20_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_174: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_175: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_20_11
PIXf4_21_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x41
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_21_11
PIXf4_22_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_196: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_197: mov eax, dword [reg_bp4]
 jmp PIXf4_22_11
PIXf4_23_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_208: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_209: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_23_11
PIXf4_24_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_216: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 jmp PIXf4_24_11
PIXf4_25_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 jmp PIXf4_25_11
PIXf4_26_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xf2
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_241: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_26_11
PIXf4_27_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_254: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_27_11
PIXf4_28_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_28_11
PIXf4_29_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_29_11
PIXf4_30_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_30_11
PIXf4_31_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_31_11
PIXf4_32_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_32_11
PIXf4_33_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_33_11
PIXf4_34_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_34_11
PIXf4_35_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov dword [reg_a4], 0x13b
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, dword [reg_c4]
 mov eax, 1
 call PCJMP_f4
BBf4_315: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_35_11
PIXf4_36_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x149
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_328: mov edi, 0x14a
 jmp PIXf4_36_11
PIXf4_37_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0x150
 mov eax, 1
 call PCJMP_f4
BBf4_334: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_37_11
PIXf4_38_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_38_11
PIXf4_39_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_39_11
PIXf4_40_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_40_11
PIXf4_41_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_41_11
PIXf4_42_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_365: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 jmp PIXf4_42_11
PIXf4_43_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_378: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 jmp PIXf4_43_11
PIXf4_44_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_388: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0x186
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_389: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_44_11
PIXf4_45_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_399: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_45_11
PIXf4_46_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x19c
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_411: mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_46_11
PIXf4_47_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_424: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_47_11
PIXf4_48_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1b4
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_435: mov edi, 0x1b5
 mov eax, 1
 call PCJMP_f4
BBf4_436: mov edi, 0x1b8
 mov eax, 1
 call PCJMP_f4
BBf4_437: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_48_11
PIXf4_49_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_49_11
PIXf4_50_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_50_11
PIXf4_51_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_51_11
PIXf4_52_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_52_11
PIXf4_53_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_53_11
PIXf4_54_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_54_11
PIXf4_55_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_55_11
PIXf4_56_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_56_11
PIXf4_57_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_57_11
PIXf4_58_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x73
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1fc
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_507: mov edi, 0x206
 mov eax, 1
 call PCJMP_f4
BBf4_508: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_58_11
PIXf4_59_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_59_11
PIXf4_60_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20c
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_60_11
PIXf4_61_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_61_11
PIXf4_62_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_62_11
PIXf4_63_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_538: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_63_11
PIXf4_64_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_64_11
PIXf4_65_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_65_11
PIXf4_66_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_66_11
PIXf4_67_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_67_11
PIXf4_68_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_581: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_68_11
PIXf4_69_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_69_11
PIXf4_70_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_70_11
PIXf4_71_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_71_11
PIXf4_72_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_72_11
PIXf4_73_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_617: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_73_11
PIXf4_74_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x272
 mov eax, 1
 call PCJMP_f4
BBf4_625: mov edi, 0x273
 mov eax, 1
 call PCJMP_f4
BBf4_626: mov edi, 0x26f
 mov eax, 1
 call PCJMP_f4
BBf4_627: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_74_11
PIXf4_75_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xfffffb
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x4
 jmp PIXf4_75_11
PIXf4_76_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_76_11
PIXf4_77_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe2
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x86
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe3
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xf5
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe4
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 jmp PIXf4_77_11
PIXf4_78_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_78_11
PIXf4_79_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_79_11
PIXf4_80_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_80_11
PIXf4_81_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xffffb0
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xd2
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffb1
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xd5
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffb2
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xdc
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffb3
 jmp PIXf4_81_11
PIXf4_82_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 cmp dword [reg_a4], 0x0
 call PCJMP_f4
 mov eax, dword [reg_b4]
 mov dword [reg_b4], eax
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_b4], 0x1
 mov eax, dword [reg_a4]
 call PCJMP_f4
 add dword [reg_sp4], 0x1
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_b4], eax
 setne al
 mov dword [reg_d4], eax
 mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], eax
 call PCJMP_f4
 mov dword [reg_a4], eax
 mov eax, 1
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_b4], eax
 jmp PIXf4_82_11
PIXf4_0_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 jmp PIXf4_0_12
PIXf4_1_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_1_12
PIXf4_2_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov edi, 0x15
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_20: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_2_12
PIXf4_3_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_29: mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffcd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_3_12
PIXf4_4_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xfffffe
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_4_12
PIXf4_5_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 jmp PIXf4_5_12
PIXf4_6_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_6_12
PIXf4_7_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_7_12
PIXf4_8_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_8_12
PIXf4_9_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x55
 mov eax, 1
 call PCJMP_f4
BBf4_84: mov dword [reg_a4], 0x0
BBf4_85: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 jmp PIXf4_9_12
PIXf4_10_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x60
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_95: mov edi, 0x61
 mov eax, 1
 call PCJMP_f4
BBf4_96: mov edi, 0x67
 mov eax, 1
 call PCJMP_f4
BBf4_97: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_10_12
PIXf4_11_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_11_12
PIXf4_12_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_12_12
PIXf4_13_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_13_12
PIXf4_14_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_14_12
PIXf4_15_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x8a
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f4
BBf4_138: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 jmp PIXf4_15_12
PIXf4_16_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x94
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 jmp PIXf4_16_12
PIXf4_17_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_17_12
PIXf4_18_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_18_12
PIXf4_19_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_19_12
PIXf4_20_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_20_12
PIXf4_21_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_21_12
PIXf4_22_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_22_12
PIXf4_23_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_23_12
PIXf4_24_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_24_12
PIXf4_25_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov edi, 0xe5
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_228: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 jmp PIXf4_25_12
PIXf4_26_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_242: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xf6
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_243: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_26_12
PIXf4_27_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x100
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_255: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_27_12
PIXf4_28_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x108
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xba
 mov eax, 1
 call PCJMP_f4
BBf4_264: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x10a
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_265: mov dword [reg_a4], 0x41
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_28_12
PIXf4_29_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_29_12
PIXf4_30_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_30_12
PIXf4_31_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_31_12
PIXf4_32_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_32_12
PIXf4_33_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_33_12
PIXf4_34_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_34_12
PIXf4_35_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x13d
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_316: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_35_12
PIXf4_36_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 call PCJMP_f4
BBf4_329: mov edi, 0x14c
 mov eax, 1
 call PCJMP_f4
BBf4_330: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_36_12
PIXf4_37_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x150
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_335: mov eax, dword [reg_bp4]
 jmp PIXf4_37_12
PIXf4_38_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_38_12
PIXf4_39_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_39_12
PIXf4_40_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_40_12
PIXf4_41_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_41_12
PIXf4_42_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_42_12
PIXf4_43_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_43_12
PIXf4_44_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_44_12
PIXf4_45_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_45_12
PIXf4_46_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_46_12
PIXf4_47_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1a9
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x168
 jmp PIXf4_47_12
PIXf4_48_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 jmp PIXf4_48_12
PIXf4_49_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_49_12
PIXf4_50_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_50_12
PIXf4_51_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_51_12
PIXf4_52_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_52_12
PIXf4_53_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 jmp PIXf4_53_12
PIXf4_54_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_54_12
PIXf4_55_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_55_12
PIXf4_56_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_56_12
PIXf4_57_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x1f1
 mov eax, 1
 call PCJMP_f4
BBf4_496: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_57_12
PIXf4_58_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x63
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1fe
 jmp PIXf4_58_12
PIXf4_59_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_59_12
PIXf4_60_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_60_12
PIXf4_61_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_61_12
PIXf4_62_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_62_12
PIXf4_63_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_63_12
PIXf4_64_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_64_12
PIXf4_65_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_65_12
PIXf4_66_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_66_12
PIXf4_67_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_67_12
PIXf4_68_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_582: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 jmp PIXf4_68_12
PIXf4_69_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_69_12
PIXf4_70_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_70_12
PIXf4_71_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_71_12
PIXf4_72_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_72_12
PIXf4_73_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_73_12
PIXf4_74_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_74_12
PIXf4_75_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_75_12
PIXf4_76_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_76_12
PIXf4_77_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdf
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_638: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_77_12
PIXf4_78_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x28b
 jmp PIXf4_78_12
PIXf4_79_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_659: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdd
 jmp PIXf4_79_12
PIXf4_80_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffba
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_80_12
PIXf4_81_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x81
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffb4
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x9b
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffb5
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x9e
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffb6
 and dword [reg_b4], 0xffffff
 jmp PIXf4_81_12
PIXf4_82_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov eax, 1
 mov dword [reg_b4], eax
 mov dword [reg_a4], eax
 mov eax, dword [mem4 + 4*eax]
 movzx eax, al
 call PCJMP_f4
 and dword [reg_b4], 0xffffff
 mov eax, 1
 mov eax, dword [mem4 + 4*eax]
 sete  al
 mov eax, 1
 mov dword [mem4 + 4*ecx], eax
 mov ecx, dword [reg_d4]
 mov eax, dword [reg_a4]
 mov dword [reg_d4], eax
 mov dword [reg_a4], eax
 mov eax, dword [mem4 + 4*eax]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_d4], eax
 mov eax, dword [reg_sp4]
 mov eax, 1
 mov eax, dword [reg_sp4]
 mov eax, dword [reg_b4]
 add dword [reg_b4], 0xffffff
 jmp PIXf4_82_12
PIXf4_0_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_4: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x6
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_5: mov edi, 0x8
 mov eax, 1
 call PCJMP_f4
BBf4_6: mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffd0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_0_13
PIXf4_1_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_1_13
PIXf4_2_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_21: mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_2_13
PIXf4_3_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_3_13
PIXf4_4_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x27
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_4_13
PIXf4_5_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x35
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_52: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_5_13
PIXf4_6_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_6_13
PIXf4_7_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_7_13
PIXf4_8_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_8_13
PIXf4_9_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_9_13
PIXf4_10_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_10_13
PIXf4_11_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_11_13
PIXf4_12_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_12_13
PIXf4_13_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_13_13
PIXf4_14_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x7c
 mov eax, 1
 call PCJMP_f4
BBf4_123: mov dword [reg_a4], 0x0
BBf4_124: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_14_13
PIXf4_15_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_15_13
PIXf4_16_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_147: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_16_13
PIXf4_17_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_17_13
PIXf4_18_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_18_13
PIXf4_19_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_19_13
PIXf4_20_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_20_13
PIXf4_21_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_21_13
PIXf4_22_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_22_13
PIXf4_23_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_23_13
PIXf4_24_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_24_13
PIXf4_25_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_229: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 jmp PIXf4_25_13
PIXf4_26_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x78
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_26_13
PIXf4_27_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_27_13
PIXf4_28_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov edi, 0x10b
 mov eax, 1
 call PCJMP_f4
BBf4_266: mov dword [reg_a4], 0x61
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_28_13
PIXf4_29_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_29_13
PIXf4_30_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_30_13
PIXf4_31_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_31_13
PIXf4_32_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_32_13
PIXf4_33_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_33_13
PIXf4_34_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x138
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f4
BBf4_312: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_34_13
PIXf4_35_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_35_13
PIXf4_36_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 jmp PIXf4_36_13
PIXf4_37_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_336: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_37_13
PIXf4_38_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x155
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_38_13
PIXf4_39_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_39_13
PIXf4_40_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_40_13
PIXf4_41_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_41_13
PIXf4_42_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_42_13
PIXf4_43_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_43_13
PIXf4_44_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_44_13
PIXf4_45_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_45_13
PIXf4_46_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_46_13
PIXf4_47_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 call PCJMP_f4
BBf4_425: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_47_13
PIXf4_48_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1b7
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_438: mov edi, 0x1b1
 mov eax, 1
 call PCJMP_f4
BBf4_439: mov edi, 0x1b2
 mov eax, 1
 call PCJMP_f4
BBf4_440: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_48_13
PIXf4_49_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_49_13
PIXf4_50_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_50_13
PIXf4_51_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_51_13
PIXf4_52_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_52_13
PIXf4_53_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1d2
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_465: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 jmp PIXf4_53_13
PIXf4_54_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_469: mov edi, 0x1d0
 mov eax, 1
 call PCJMP_f4
BBf4_470: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_471: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 jmp PIXf4_54_13
PIXf4_55_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_55_13
PIXf4_56_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_56_13
PIXf4_57_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_57_13
PIXf4_58_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_509: mov edi, 0x207
 mov eax, 1
 call PCJMP_f4
BBf4_510: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x25
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_58_13
PIXf4_59_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_59_13
PIXf4_60_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_60_13
PIXf4_61_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_61_13
PIXf4_62_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_62_13
PIXf4_63_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_63_13
PIXf4_64_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_64_13
PIXf4_65_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_65_13
PIXf4_66_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_66_13
PIXf4_67_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, 0x4
 mov ecx, reg_a4
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_569: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_67_13
PIXf4_68_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x247
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x23e
 mov eax, 1
 jmp PIXf4_68_13
PIXf4_69_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_69_13
PIXf4_70_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_70_13
PIXf4_71_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_71_13
PIXf4_72_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_72_13
PIXf4_73_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_73_13
PIXf4_74_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_74_13
PIXf4_75_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_75_13
PIXf4_76_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_76_13
PIXf4_77_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x5
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x280
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_639: mov edi, 0x281
 mov eax, 1
 call PCJMP_f4
BBf4_640: mov edi, 0x284
 mov eax, 1
 call PCJMP_f4
BBf4_641: mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 jmp PIXf4_77_13
PIXf4_78_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_649: mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x28a
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_78_13
PIXf4_79_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x28d
 mov eax, 1
 call PCJMP_f4
BBf4_660: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffbc
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x32
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_79_13
PIXf4_80_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe6
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_80_13
PIXf4_81_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0xc8
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffb7
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xb1
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffb8
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xbb
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffb9
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xbb
 jmp PIXf4_81_13
PIXf4_82_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 cmp dword [reg_a4], 0x0
 mov dword [reg_c4], eax
 and dword [reg_b4], 0xffffff
 call PCJMP_f4
 mov dword [reg_b4], eax
 mov dword [reg_a4], eax
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 call PCJMP_f4
 mov eax, 1
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 call PCJMP_f4
 call PCJMP_f4
 mov edi, dword [reg_a4]
 add dword [reg_sp4], 0x1
 mov dword [reg_a4], eax
 mov dword [reg_b4], eax
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_b4], eax
 mov eax, 1
 mov dword [reg_b4], eax
 jmp PIXf4_82_13
PIXf4_0_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 jmp PIXf4_0_14
PIXf4_1_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_1_14
PIXf4_2_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_22: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe5
 and dword [reg_a4], 0xffffff
 jmp PIXf4_2_14
PIXf4_3_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_3_14
PIXf4_4_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f4
BBf4_39: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_4_14
PIXf4_5_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_5_14
PIXf4_6_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_6_14
PIXf4_7_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_7_14
PIXf4_8_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_8_14
PIXf4_9_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x57
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_86: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_9_14
PIXf4_10_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 jmp PIXf4_10_14
PIXf4_11_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_11_14
PIXf4_12_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_12_14
PIXf4_13_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_13_14
PIXf4_14_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_14_14
PIXf4_15_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_15_14
PIXf4_16_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_148: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 sub dword [reg_a4], 0x1
 jmp PIXf4_16_14
PIXf4_17_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_17_14
PIXf4_18_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_18_14
PIXf4_19_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_19_14
PIXf4_20_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_20_14
PIXf4_21_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_21_14
PIXf4_22_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_22_14
PIXf4_23_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_23_14
PIXf4_24_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_24_14
PIXf4_25_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_230: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_25_14
PIXf4_26_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xf5
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_244: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_26_14
PIXf4_27_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 jmp PIXf4_27_14
PIXf4_28_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
BBf4_267: mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_28_14
PIXf4_29_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_29_14
PIXf4_30_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_30_14
PIXf4_31_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_31_14
PIXf4_32_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_32_14
PIXf4_33_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_305: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_306: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_33_14
PIXf4_34_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 jmp PIXf4_34_14
PIXf4_35_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_35_14
PIXf4_36_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_36_14
PIXf4_37_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_37_14
PIXf4_38_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f4
BBf4_341: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_38_14
PIXf4_39_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_39_14
PIXf4_40_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_40_14
PIXf4_41_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_41_14
PIXf4_42_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_42_14
PIXf4_43_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_43_14
PIXf4_44_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_44_14
PIXf4_45_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_45_14
PIXf4_46_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_46_14
PIXf4_47_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_47_14
PIXf4_48_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1ba
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_441: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_48_14
PIXf4_49_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_49_14
PIXf4_50_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_50_14
PIXf4_51_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_51_14
PIXf4_52_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 jmp PIXf4_52_14
PIXf4_53_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 jmp PIXf4_53_14
PIXf4_54_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_472: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_54_14
PIXf4_55_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_55_14
PIXf4_56_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_56_14
PIXf4_57_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_57_14
PIXf4_58_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x200
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_511: mov edi, 0x208
 mov eax, 1
 call PCJMP_f4
BBf4_512: mov edi, 0x209
 mov eax, 1
 call PCJMP_f4
BBf4_513: mov edi, 0x1f2
 mov eax, 1
 call PCJMP_f4
BBf4_514: mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 jmp PIXf4_58_14
PIXf4_59_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_59_14
PIXf4_60_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_60_14
PIXf4_61_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_61_14
PIXf4_62_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_62_14
PIXf4_63_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_63_14
PIXf4_64_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_64_14
PIXf4_65_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffff00
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x223
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 jmp PIXf4_65_14
PIXf4_66_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x22b
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f4
BBf4_555: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_66_14
PIXf4_67_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x235
 mov eax, 1
 call PCJMP_f4
BBf4_570: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_67_14
PIXf4_68_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_583: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_584: mov eax, dword [reg_bp4]
 jmp PIXf4_68_14
PIXf4_69_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_69_14
PIXf4_70_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_70_14
PIXf4_71_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 sete  al
 jmp PIXf4_71_14
PIXf4_72_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_72_14
PIXf4_73_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_73_14
PIXf4_74_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_74_14
PIXf4_75_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_75_14
PIXf4_76_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 jmp PIXf4_76_14
PIXf4_77_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_a4], 0xffffe0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_77_14
PIXf4_78_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov edi, 0x225
 mov eax, 1
 call PCJMP_f4
BBf4_650: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
BBf4_651: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffde
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_78_14
PIXf4_79_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xffffbd
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x3b
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffbe
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x2c
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffbf
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x20
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffc0
 jmp PIXf4_79_14
PIXf4_80_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x299
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f4
BBf4_665: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_80_14
PIXf4_81_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffff9a
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_669: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffff9a
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_81_14
PIXf4_82_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov eax, 1
 call PCJMP_f4
 call PCJMP_f4
 mov eax, dword [mem4 + 4*eax]
 mov eax, dword [reg_a4]
 cmp dword [reg_a4], 0x0
 and dword [reg_b4], 0xffffff
 mov eax, 1
 mov dword [reg_a4], eax
 mov eax, dword [mem4 + 4*eax]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [mem4 + 4*eax]
 mov edi, dword [reg_a4]
 mov eax, dword [reg_bp4]
 mov eax, dword [mem4 + 4*eax]
 call PCJMP_f4
 sete  al
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_b4], eax
 mov dword [reg_sp4], eax
 setne al
 call PCJMP_f4
 mov dword [reg_sp4], eax
 jmp PIXf4_82_14
PIXf4_0_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_0_15
PIXf4_1_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_1_15
PIXf4_2_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_2_15
PIXf4_3_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1f
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_30: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_3_15
PIXf4_4_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_40: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_4_15
PIXf4_5_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x36
 mov eax, 1
 call PCJMP_f4
BBf4_53: mov dword [reg_a4], 0x0
BBf4_54: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 jmp PIXf4_5_15
PIXf4_6_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x5
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 jmp PIXf4_6_15
PIXf4_7_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_7_15
PIXf4_8_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_8_15
PIXf4_9_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_9_15
PIXf4_10_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_10_15
PIXf4_11_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_105: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 jmp PIXf4_11_15
PIXf4_12_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x6f
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_110: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_12_15
PIXf4_13_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x6a
 mov eax, 1
 call PCJMP_f4
BBf4_115: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_13_15
PIXf4_14_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x7e
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_125: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_14_15
PIXf4_15_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_15_15
PIXf4_16_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x10
 jmp PIXf4_16_15
PIXf4_17_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
BBf4_152: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_17_15
PIXf4_18_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
BBf4_157: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 jmp PIXf4_18_15
PIXf4_19_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x9
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 jmp PIXf4_19_15
PIXf4_20_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_20_15
PIXf4_21_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xbc
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_187: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_21_15
PIXf4_22_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_198: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_22_15
PIXf4_23_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_210: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_23_15
PIXf4_24_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_217: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_24_15
PIXf4_25_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_231: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_25_15
PIXf4_26_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x58
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 jmp PIXf4_26_15
PIXf4_27_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_256: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_27_15
PIXf4_28_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f4
BBf4_268: mov edi, 0x117
 mov eax, 1
 call PCJMP_f4
BBf4_269: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_28_15
PIXf4_29_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0x116
 jmp PIXf4_29_15
PIXf4_30_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov edi, 0x11b
 mov eax, 1
 call PCJMP_f4
BBf4_282: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
BBf4_283: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_30_15
PIXf4_31_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_31_15
PIXf4_32_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x12c
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f4
BBf4_300: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 jmp PIXf4_32_15
PIXf4_33_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_33_15
PIXf4_34_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_34_15
PIXf4_35_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, 0x13e
 mov eax, 1
 call PCJMP_f4
BBf4_317: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f4
BBf4_318: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f4
BBf4_319: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_35_15
PIXf4_36_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_36_15
PIXf4_37_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_37_15
PIXf4_38_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_38_15
PIXf4_39_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 jmp PIXf4_39_15
PIXf4_40_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_351: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_40_15
PIXf4_41_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 jmp PIXf4_41_15
PIXf4_42_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 call PCJMP_f4
BBf4_366: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_367: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_42_15
PIXf4_43_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 call PCJMP_f4
BBf4_379: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_43_15
PIXf4_44_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_390: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x188
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_391: mov edi, 0x189
 mov eax, 1
 call PCJMP_f4
BBf4_392: mov edi, 0x18e
 mov eax, 1
 call PCJMP_f4
BBf4_393: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 jmp PIXf4_44_15
PIXf4_45_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_400: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_45_15
PIXf4_46_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_412: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 jmp PIXf4_46_15
PIXf4_47_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1aa
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f4
BBf4_426: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_47_15
PIXf4_48_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_48_15
PIXf4_49_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_49_15
PIXf4_50_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_448: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 jmp PIXf4_50_15
PIXf4_51_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_51_15
PIXf4_52_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_52_15
PIXf4_53_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_53_15
PIXf4_54_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
BBf4_473: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_54_15
PIXf4_55_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 jmp PIXf4_55_15
PIXf4_56_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_488: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 jmp PIXf4_56_15
PIXf4_57_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_57_15
PIXf4_58_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_58_15
PIXf4_59_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_59_15
PIXf4_60_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_524: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x129
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20d
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_60_15
PIXf4_61_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x214
 mov eax, 1
 call PCJMP_f4
BBf4_530: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_61_15
PIXf4_62_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_62_15
PIXf4_63_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_539: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x4
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_63_15
PIXf4_64_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x21f
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x218
 mov eax, 1
 call PCJMP_f4
BBf4_543: mov eax, dword [reg_b4]
 jmp PIXf4_64_15
PIXf4_65_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_547: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffeff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_65_15
PIXf4_66_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_556: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_66_15
PIXf4_67_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_571: mov eax, dword [reg_bp4]
 jmp PIXf4_67_15
PIXf4_68_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_585: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_68_15
PIXf4_69_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, 0x4
 mov ecx, reg_a4
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 jmp PIXf4_69_15
PIXf4_70_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_595: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 jmp PIXf4_70_15
PIXf4_71_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x25a
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_599: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x259
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_600: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f4
BBf4_601: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_71_15
PIXf4_72_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 jmp PIXf4_72_15
PIXf4_73_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_618: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x66
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 add dword [reg_b4], 0x1
 and dword [reg_b4], 0xffffff
 jmp PIXf4_73_15
PIXf4_74_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_628: mov eax, dword [reg_bp4]
 jmp PIXf4_74_15
PIXf4_75_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_75_15
PIXf4_76_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe8
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_76_15
PIXf4_77_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_77_15
PIXf4_78_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffde
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x285
 mov eax, 1
 call PCJMP_f4
BBf4_652: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 jmp PIXf4_78_15
PIXf4_79_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x18
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffc1
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x1d
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffc2
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x5f
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffc3
 and dword [reg_b4], 0xffffff
 jmp PIXf4_79_15
PIXf4_80_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_80_15
PIXf4_81_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1f
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x29f
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_670: mov edi, 0x2a0
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_81_15
PIXf4_82_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, 0xc4
 add dword [reg_d4], 0xffffff
 call PCJMP_f4
 call PCJMP_f4
 mov eax, dword [reg_a4]
 setb  al
 mov dword [reg_a4], 0x0
 mov dword [reg_a4], eax
 call PCJMP_f4
 mov eax, dword [reg_b4]
 call PCJMP_f4
 mov eax, dword [reg_sp4]
 sete  al
 mov dword [reg_a4], eax
 mov eax, dword [mem4 + 4*eax]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 mov edi, 0xe6
 mov dword [reg_a4], eax
 mov dword [reg_a4], eax
 mov eax, 1
 mov eax, dword [reg_sp4]
 mov edi, dword [reg_a4]
 mov eax, dword [reg_a4]
 jmp PIXf4_82_15
PIXf4_0_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffd0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 jmp PIXf4_0_16
PIXf4_1_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
BBf4_11: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_1_16
PIXf4_2_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_2_16
PIXf4_3_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe5
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_3_16
PIXf4_4_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_41: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xfffffe
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_4_16
PIXf4_5_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0x38
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_55: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_56: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x3a
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_5_16
PIXf4_6_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_62: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x18
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_6_16
PIXf4_7_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x44
 mov eax, 1
 call PCJMP_f4
BBf4_67: mov dword [reg_a4], 0x0
BBf4_68: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 jmp PIXf4_7_16
PIXf4_8_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_75: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_8_16
PIXf4_9_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x58
 mov eax, 1
 call PCJMP_f4
BBf4_87: mov dword [reg_a4], 0x0
BBf4_88: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_9_16
PIXf4_10_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x63
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_98: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_10_16
PIXf4_11_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_106: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_11_16
PIXf4_12_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_12_16
PIXf4_13_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_116: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_13_16
PIXf4_14_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 jmp PIXf4_14_16
PIXf4_15_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x8b
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_15_16
PIXf4_16_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_16_16
PIXf4_17_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_17_16
PIXf4_18_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 call PCJMP_f4
BBf4_158: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_159: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_18_16
PIXf4_19_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_165: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xa7
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_166: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_19_16
PIXf4_20_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0xb0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f4
BBf4_176: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_b4], 0x1
 mov edi, 0xb4
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_177: mov dword [reg_a4], 0x61
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_20_16
PIXf4_21_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x5a
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 jmp PIXf4_21_16
PIXf4_22_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xc7
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_22_16
PIXf4_23_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_211: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_23_16
PIXf4_24_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_24_16
PIXf4_25_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 jmp PIXf4_25_16
PIXf4_26_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_245: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_246: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0xf8
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_247: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_26_16
PIXf4_27_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_257: mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_27_16
PIXf4_28_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 jmp PIXf4_28_16
PIXf4_29_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 call PCJMP_f4
BBf4_276: mov dword [reg_a4], 0x1
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_29_16
PIXf4_30_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_30_16
PIXf4_31_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x125
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f4
BBf4_293: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_31_16
PIXf4_32_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_32_16
PIXf4_33_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_307: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_308: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 jmp PIXf4_33_16
PIXf4_34_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_34_16
PIXf4_35_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 jmp PIXf4_35_16
PIXf4_36_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 jmp PIXf4_36_16
PIXf4_37_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_37_16
PIXf4_38_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_38_16
PIXf4_39_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x15b
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_346: mov edi, 0x15c
 mov eax, 1
 call PCJMP_f4
BBf4_347: mov edi, 0x15e
 mov eax, 1
 call PCJMP_f4
BBf4_348: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_39_16
PIXf4_40_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_352: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_353: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 jmp PIXf4_40_16
PIXf4_41_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_41_16
PIXf4_42_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_368: mov eax, dword [reg_bp4]
 jmp PIXf4_42_16
PIXf4_43_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_380: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x17e
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_381: mov edi, 0x17f
 mov eax, 1
 jmp PIXf4_43_16
PIXf4_44_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_44_16
PIXf4_45_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
BBf4_401: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0x193
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_402: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_45_16
PIXf4_46_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_46_16
PIXf4_47_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_47_16
PIXf4_48_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_48_16
PIXf4_49_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_49_16
PIXf4_50_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_50_16
PIXf4_51_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_454: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_51_16
PIXf4_52_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_52_16
PIXf4_53_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_53_16
PIXf4_54_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_54_16
PIXf4_55_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_55_16
PIXf4_56_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 sub dword [reg_sp4], 0x26
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_56_16
PIXf4_57_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 jmp PIXf4_57_16
PIXf4_58_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_58_16
PIXf4_59_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_59_16
PIXf4_60_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_525: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp4], 0x1
 jmp PIXf4_60_16
PIXf4_61_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_61_16
PIXf4_62_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_62_16
PIXf4_63_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 jmp PIXf4_63_16
PIXf4_64_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_64_16
PIXf4_65_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_548: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_549: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_65_16
PIXf4_66_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_557: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_66_16
PIXf4_67_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_572: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_67_16
PIXf4_68_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_b4], 0x13f
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_68_16
PIXf4_69_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_590: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_69_16
PIXf4_70_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_596: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_70_16
PIXf4_71_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_602: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_71_16
PIXf4_72_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_608: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_609: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_72_16
PIXf4_73_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 add dword [reg_b4], 0x1
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 add dword [reg_b4], 0x1
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 add dword [reg_b4], 0x1
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 jmp PIXf4_73_16
PIXf4_74_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_74_16
PIXf4_75_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffec
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x79
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffed
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x63
 mov eax, dword [reg_a4]
 jmp PIXf4_75_16
PIXf4_76_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_76_16
PIXf4_77_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_77_16
PIXf4_78_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdd
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_653: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_78_16
PIXf4_79_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x51
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffc4
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x51
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffc5
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x41
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffc6
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x5b
 jmp PIXf4_79_16
PIXf4_80_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_80_16
PIXf4_81_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_671: mov edi, 0x2a3
 mov eax, 1
 call PCJMP_f4
BBf4_672: mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffff9b
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_81_16
PIXf4_82_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov eax, dword [reg_a4]
 add dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov eax, 1
 add dword [reg_sp4], 0x1
 sub dword [reg_a4], eax
 mov dword [reg_b4], eax
 mov eax, 1
 call PCJMP_f4
 mov dword [reg_a4], eax
 mov dword [reg_b4], eax
 mov dword [reg_b4], eax
 add dword [reg_sp4], 0x1
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, 1
 add dword [reg_d4], 0xffffff
 mov eax, 1
 add dword [reg_sp4], 0x1
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], eax
 jmp PIXf4_82_16
PIXf4_0_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 jmp PIXf4_0_17
PIXf4_1_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xd
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_12: mov edi, 0xe
 mov eax, 1
 call PCJMP_f4
BBf4_13: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_1_17
PIXf4_2_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_2_17
PIXf4_3_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_3_17
PIXf4_4_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_4_17
PIXf4_5_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_57: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_5_17
PIXf4_6_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x40
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_63: mov edi, 0x41
 mov eax, 1
 call PCJMP_f4
BBf4_64: mov edi, 0x4c
 mov eax, 1
 call PCJMP_f4
BBf4_65: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_6_17
PIXf4_7_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_7_17
PIXf4_8_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x3e
 mov eax, 1
 call PCJMP_f4
BBf4_76: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 jmp PIXf4_8_17
PIXf4_9_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x5a
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_9_17
PIXf4_10_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_10_17
PIXf4_11_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x18
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x6c
 jmp PIXf4_11_17
PIXf4_12_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x70
 mov eax, 1
 call PCJMP_f4
BBf4_111: mov dword [reg_a4], 0x0
BBf4_112: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x72
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_12_17
PIXf4_13_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_117: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x4
 jmp PIXf4_13_17
PIXf4_14_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_14_17
PIXf4_15_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f4
BBf4_139: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_15_17
PIXf4_16_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x95
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f4
BBf4_149: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_16_17
PIXf4_17_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x10
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_17_17
PIXf4_18_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xc
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_18_17
PIXf4_19_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xb
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
 jmp PIXf4_19_17
PIXf4_20_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 jmp PIXf4_20_17
PIXf4_21_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
BBf4_188: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_189: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_21_17
PIXf4_22_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f4
BBf4_199: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_b4], 0x1
 mov edi, 0xca
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_200: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_22_17
PIXf4_23_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_212: mov eax, dword [reg_sp4]
 jmp PIXf4_23_17
PIXf4_24_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xda
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f4
BBf4_218: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 jmp PIXf4_24_17
PIXf4_25_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xe8
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_25_17
PIXf4_26_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_26_17
PIXf4_27_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_258: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x103
 jmp PIXf4_27_17
PIXf4_28_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, 0x10f
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_270: mov edi, 0x117
 mov eax, 1
 call PCJMP_f4
BBf4_271: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 jmp PIXf4_28_17
PIXf4_29_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_29_17
PIXf4_30_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
BBf4_284: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 jmp PIXf4_30_17
PIXf4_31_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_294: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_31_17
PIXf4_32_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_32_17
PIXf4_33_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x6
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 jmp PIXf4_33_17
PIXf4_34_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_34_17
PIXf4_35_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x140
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, dword [reg_c4]
 mov eax, 1
 call PCJMP_f4
BBf4_320: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_35_17
PIXf4_36_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_36_17
PIXf4_37_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 jmp PIXf4_37_17
PIXf4_38_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x156
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_38_17
PIXf4_39_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_39_17
PIXf4_40_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_40_17
PIXf4_41_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_357: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 jmp PIXf4_41_17
PIXf4_42_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x172
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_369: mov edi, 0x173
 mov eax, 1
 call PCJMP_f4
BBf4_370: mov edi, 0x174
 mov eax, 1
 call PCJMP_f4
BBf4_371: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_42_17
PIXf4_43_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_382: mov edi, 0x181
 mov eax, 1
 call PCJMP_f4
BBf4_383: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_43_17
PIXf4_44_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x18b
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_394: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_44_17
PIXf4_45_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_403: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0x195
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_404: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_45_17
PIXf4_46_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_46_17
PIXf4_47_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1ab
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f4
BBf4_427: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_47_17
PIXf4_48_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_442: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_48_17
PIXf4_49_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1c1
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_445: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_49_17
PIXf4_50_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_50_17
PIXf4_51_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_51_17
PIXf4_52_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_461: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_52_17
PIXf4_53_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_53_17
PIXf4_54_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1e2
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_474: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 jmp PIXf4_54_17
PIXf4_55_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_480: mov edi, 0x1db
 mov eax, 1
 call PCJMP_f4
BBf4_481: mov edi, 0x1e3
 mov eax, 1
 call PCJMP_f4
BBf4_482: mov edi, 0x1e4
 mov eax, 1
 call PCJMP_f4
BBf4_483: mov edi, 0x1d9
 mov eax, 1
 jmp PIXf4_55_17
PIXf4_56_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_489: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_56_17
PIXf4_57_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_57_17
PIXf4_58_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_58_17
PIXf4_59_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f4
BBf4_520: mov dword [reg_a4], 0x25
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_59_17
PIXf4_60_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
BBf4_526: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20f
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_60_17
PIXf4_61_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 jmp PIXf4_61_17
PIXf4_62_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_535: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 jmp PIXf4_62_17
PIXf4_63_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_63_17
PIXf4_64_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_544: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_64_17
PIXf4_65_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x2
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 jmp PIXf4_65_17
PIXf4_66_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_558: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 jmp PIXf4_66_17
PIXf4_67_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x23d
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_67_17
PIXf4_68_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x24b
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_68_17
PIXf4_69_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_591: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_69_17
PIXf4_70_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_70_17
PIXf4_71_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_71_17
PIXf4_72_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 cmp dword [reg_a4], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x263
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_610: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_72_17
PIXf4_73_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x141
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_619: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_73_17
PIXf4_74_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x26b
 mov eax, 1
 call PCJMP_f4
BBf4_629: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xfffffb
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_74_17
PIXf4_75_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffee
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x63
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffef
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x7a
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff0
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x55
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_75_17
PIXf4_76_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe7
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_76_17
PIXf4_77_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x282
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x4e
 mov eax, 1
 jmp PIXf4_77_17
PIXf4_78_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffe6
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x28f
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_654: mov edi, 0x290
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_78_17
PIXf4_79_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffc7
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x5c
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffc8
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x41
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffc9
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 jmp PIXf4_79_17
PIXf4_80_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x29a
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x4e
 mov eax, 1
 call PCJMP_f4
BBf4_666: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 jmp PIXf4_80_17
PIXf4_81_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffff9a
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_81_17
PIXf4_82_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 mov eax, 1
 cmp dword [reg_a4], 0x0
 add dword [reg_d4], 0xffffff
 and dword [reg_sp4], 0xffffff
 add dword [reg_sp4], 0x1
 mov edi, dword [reg_a4]
 movzx eax, al
 call PCJMP_f4
 and dword [reg_sp4], 0xffffff
 add dword [reg_d4], 0xffffff
 call PCJMP_f4
 mov eax, 1
 mov dword [mem4 + 4*ecx], eax
 add dword [reg_sp4], 0x1
 mov eax, dword [reg_a4]
 mov eax, dword [reg_a4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [mem4 + 4*eax]
 mov eax, 1
 and dword [reg_d4], 0xffffff
 mov eax, dword [mem4 + 4*eax]
 and dword [reg_sp4], 0xffffff
 int 0x80
 jmp PIXf4_82_17
PIXf4_0_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov esi, 1
 jmp PIX_END_f4
PIXf4_1_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x9
 mov eax, 1
 call PCJMP_f4
BBf4_14: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov esi, 2
 jmp PIX_END_f4
PIXf4_2_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffcd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov esi, 3
 jmp PIX_END_f4
PIXf4_3_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov esi, 4
 jmp PIX_END_f4
PIXf4_4_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x2a
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f4
 mov esi, 5
 jmp PIX_END_f4
PIXf4_5_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_58: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov esi, 6
 jmp PIX_END_f4
PIXf4_6_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov esi, 7
 jmp PIX_END_f4
PIXf4_7_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x46
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_69: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 mov esi, 8
 jmp PIX_END_f4
PIXf4_8_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_77: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov esi, 9
 jmp PIX_END_f4
PIXf4_9_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_89: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov esi, 10
 jmp PIX_END_f4
PIXf4_10_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x64
 mov eax, 1
 call PCJMP_f4
BBf4_99: mov dword [reg_a4], 0x0
BBf4_100: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 mov esi, 11
 jmp PIX_END_f4
PIXf4_11_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_107: mov edi, 0x6d
 mov eax, 1
 call PCJMP_f4
BBf4_108: mov edi, 0x73
 mov eax, 1
 call PCJMP_f4
BBf4_109: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 mov esi, 12
 jmp PIX_END_f4
PIXf4_12_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_113: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov esi, 13
 jmp PIX_END_f4
PIXf4_13_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 mov esi, 14
 jmp PIX_END_f4
PIXf4_14_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_126: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov esi, 15
 jmp PIX_END_f4
PIXf4_15_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x8d
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_140: mov edi, 0x89
 mov eax, 1
 call PCJMP_f4
BBf4_141: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov esi, 16
 jmp PIX_END_f4
PIXf4_16_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 mov esi, 17
 jmp PIX_END_f4
PIXf4_17_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x99
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f4
BBf4_153: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 mov esi, 18
 jmp PIX_END_f4
PIXf4_18_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xa1
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_160: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov esi, 19
 jmp PIX_END_f4
PIXf4_19_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_167: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xa9
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_168: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20
 mov eax, dword [reg_a4]
 mov esi, 20
 jmp PIX_END_f4
PIXf4_20_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xb3
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_178: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x66
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov esi, 21
 jmp PIX_END_f4
PIXf4_21_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_190: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov esi, 22
 jmp PIX_END_f4
PIXf4_22_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xc9
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f4
BBf4_201: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov esi, 23
 jmp PIX_END_f4
PIXf4_23_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_b4], 0x529
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov esi, 24
 jmp PIX_END_f4
PIXf4_24_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xdb
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f4
BBf4_219: mov eax, dword [reg_b4]
 mov esi, 25
 jmp PIX_END_f4
PIXf4_25_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_232: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0xea
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_233: mov edi, 0xe7
 mov eax, 1
 call PCJMP_f4
BBf4_234: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov esi, 26
 jmp PIX_END_f4
PIXf4_26_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov esi, 27
 jmp PIX_END_f4
PIXf4_27_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f4
BBf4_259: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x105
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_260: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov esi, 28
 jmp PIX_END_f4
PIXf4_28_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x111
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_272: mov edi, 0x116
 mov eax, 1
 call PCJMP_f4
BBf4_273: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov esi, 29
 jmp PIX_END_f4
PIXf4_29_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x115
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f4
BBf4_277: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov esi, 30
 jmp PIX_END_f4
PIXf4_30_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, 1
 call PCJMP_f4
BBf4_285: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_286: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov esi, 31
 jmp PIX_END_f4
PIXf4_31_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_295: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov esi, 32
 jmp PIX_END_f4
PIXf4_32_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x12d
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f4
BBf4_301: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 mov esi, 33
 jmp PIX_END_f4
PIXf4_33_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x136
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_309: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov esi, 34
 jmp PIX_END_f4
PIXf4_34_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov esi, 35
 jmp PIX_END_f4
PIXf4_35_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x8000
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov esi, 36
 jmp PIX_END_f4
PIXf4_36_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov esi, 37
 jmp PIX_END_f4
PIXf4_37_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_337: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f4
BBf4_338: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov esi, 38
 jmp PIX_END_f4
PIXf4_38_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f4
BBf4_342: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 mov esi, 39
 jmp PIX_END_f4
PIXf4_39_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov esi, 40
 jmp PIX_END_f4
PIXf4_40_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x163
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_354: mov edi, 0x164
 mov eax, 1
 call PCJMP_f4
BBf4_355: mov edi, 0x166
 mov eax, 1
 call PCJMP_f4
BBf4_356: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 mov esi, 41
 jmp PIX_END_f4
PIXf4_41_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x161
 mov eax, 1
 call PCJMP_f4
BBf4_358: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov esi, 42
 jmp PIX_END_f4
PIXf4_42_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 mov esi, 43
 jmp PIX_END_f4
PIXf4_43_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_384: mov eax, dword [reg_bp4]
 mov esi, 44
 jmp PIX_END_f4
PIXf4_44_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 mov esi, 45
 jmp PIX_END_f4
PIXf4_45_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 mov esi, 46
 jmp PIX_END_f4
PIXf4_46_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x191
 mov eax, 1
 call PCJMP_f4
BBf4_413: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov esi, 47
 jmp PIX_END_f4
PIXf4_47_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 mov esi, 48
 jmp PIX_END_f4
PIXf4_48_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 mov esi, 49
 jmp PIX_END_f4
PIXf4_49_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1bf
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_446: mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov esi, 50
 jmp PIX_END_f4
PIXf4_50_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_449: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov esi, 51
 jmp PIX_END_f4
PIXf4_51_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov esi, 52
 jmp PIX_END_f4
PIXf4_52_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_462: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov esi, 53
 jmp PIX_END_f4
PIXf4_53_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov esi, 54
 jmp PIX_END_f4
PIXf4_54_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
BBf4_475: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov esi, 55
 jmp PIX_END_f4
PIXf4_55_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_484: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_485: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov esi, 56
 jmp PIX_END_f4
PIXf4_56_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, 0x1eb
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_490: mov edi, 0x1ec
 mov eax, 1
 call PCJMP_f4
BBf4_491: mov edi, 0x216
 mov eax, 1
 call PCJMP_f4
BBf4_492: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 mov esi, 57
 jmp PIX_END_f4
PIXf4_57_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_497: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 mov esi, 58
 jmp PIX_END_f4
PIXf4_58_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov esi, 59
 jmp PIX_END_f4
PIXf4_59_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov esi, 60
 jmp PIX_END_f4
PIXf4_60_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x168
 mov eax, 1
 call PCJMP_f4
BBf4_527: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffda
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov esi, 61
 jmp PIX_END_f4
PIXf4_61_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x213
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov esi, 62
 jmp PIX_END_f4
PIXf4_62_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_536: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov esi, 63
 jmp PIX_END_f4
PIXf4_63_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x21c
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov esi, 64
 jmp PIX_END_f4
PIXf4_64_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_545: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x101
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov esi, 65
 jmp PIX_END_f4
PIXf4_65_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 mov esi, 66
 jmp PIX_END_f4
PIXf4_66_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_559: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_b4], 0x13c
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov esi, 67
 jmp PIX_END_f4
PIXf4_67_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_573: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov esi, 68
 jmp PIX_END_f4
PIXf4_68_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_586: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x13f
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov esi, 69
 jmp PIX_END_f4
PIXf4_69_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, 0x4
 mov ecx, reg_a4
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov esi, 70
 jmp PIX_END_f4
PIXf4_70_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x25d
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_597: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov esi, 71
 jmp PIX_END_f4
PIXf4_71_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov esi, 72
 jmp PIX_END_f4
PIXf4_72_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_611: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov esi, 73
 jmp PIX_END_f4
PIXf4_73_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x5
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x26d
 mov esi, 74
 jmp PIX_END_f4
PIXf4_74_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov esi, 75
 jmp PIX_END_f4
PIXf4_75_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff1
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x6d
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff2
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x60
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff3
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x6c
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov esi, 76
 jmp PIX_END_f4
PIXf4_76_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x27a
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f4
BBf4_634: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov esi, 77
 jmp PIX_END_f4
PIXf4_77_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 call PCJMP_f4
BBf4_642: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov esi, 78
 jmp PIX_END_f4
PIXf4_78_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
BBf4_655: mov edi, 0x294
 mov eax, 1
 call PCJMP_f4
BBf4_656: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov esi, 79
 jmp PIX_END_f4
PIXf4_79_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffca
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x11
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcb
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x9
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0xd
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov esi, 80
 jmp PIX_END_f4
PIXf4_80_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffbc
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov esi, 81
 jmp PIX_END_f4
PIXf4_81_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem4 + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xbb
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem4 + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov esi, 82
 jmp PIX_END_f4
PIXf4_82_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem4]
 mov edi, 0x1bf
 mov ecx, dword [reg_b4]
 mov eax, 1
 mov dword [reg_a4], eax
 mov dword [reg_d4], eax
 mov eax, dword [reg_bp4]
 call PCJMP_f4
 call PCJMP_f4
 and dword [reg_d4], 0xffffff
 mov eax, 1
 mov eax, 1
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov ecx, dword [reg_b4]
 mov dword [reg_d4], eax
 add dword [reg_b4], 0xffffe1
 call PCJMP_f4
 mov ebx, 0x0
 mov dword [reg_a4], eax
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov eax, dword [reg_b4]
 mov eax, 1
 add dword [reg_b4], 0xffff9a
 mov esi, 83
 jmp PIX_END_f4
PIX_PAD_f4_0: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_1
PIX_PAD_f4_1: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_2
PIX_PAD_f4_2: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_3
PIX_PAD_f4_3: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_4
PIX_PAD_f4_4: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_5
PIX_PAD_f4_5: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_6
PIX_PAD_f4_6: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_7
PIX_PAD_f4_7: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_8
PIX_PAD_f4_8: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_9
PIX_PAD_f4_9: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_10
PIX_PAD_f4_10: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_11
PIX_PAD_f4_11: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_12
PIX_PAD_f4_12: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_13
PIX_PAD_f4_13: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_14
PIX_PAD_f4_14: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_15
PIX_PAD_f4_15: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_16
PIX_PAD_f4_16: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_17
PIX_PAD_f4_17: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_END_f4
PIX_END_f4:
jmp PIX_START_f4
PIX_TABLE_f4:
 dd PIXf4_0_0
 dd PIXf4_1_0
 dd PIXf4_2_0
 dd PIXf4_3_0
 dd PIXf4_4_0
 dd PIXf4_5_0
 dd PIXf4_6_0
 dd PIXf4_7_0
 dd PIXf4_8_0
 dd PIXf4_9_0
 dd PIXf4_10_0
 dd PIXf4_11_0
 dd PIXf4_12_0
 dd PIXf4_13_0
 dd PIXf4_14_0
 dd PIXf4_15_0
 dd PIXf4_16_0
 dd PIXf4_17_0
 dd PIXf4_18_0
 dd PIXf4_19_0
 dd PIXf4_20_0
 dd PIXf4_21_0
 dd PIXf4_22_0
 dd PIXf4_23_0
 dd PIXf4_24_0
 dd PIXf4_25_0
 dd PIXf4_26_0
 dd PIXf4_27_0
 dd PIXf4_28_0
 dd PIXf4_29_0
 dd PIXf4_30_0
 dd PIXf4_31_0
 dd PIXf4_32_0
 dd PIXf4_33_0
 dd PIXf4_34_0
 dd PIXf4_35_0
 dd PIXf4_36_0
 dd PIXf4_37_0
 dd PIXf4_38_0
 dd PIXf4_39_0
 dd PIXf4_40_0
 dd PIXf4_41_0
 dd PIXf4_42_0
 dd PIXf4_43_0
 dd PIXf4_44_0
 dd PIXf4_45_0
 dd PIXf4_46_0
 dd PIXf4_47_0
 dd PIXf4_48_0
 dd PIXf4_49_0
 dd PIXf4_50_0
 dd PIXf4_51_0
 dd PIXf4_52_0
 dd PIXf4_53_0
 dd PIXf4_54_0
 dd PIXf4_55_0
 dd PIXf4_56_0
 dd PIXf4_57_0
 dd PIXf4_58_0
 dd PIXf4_59_0
 dd PIXf4_60_0
 dd PIXf4_61_0
 dd PIXf4_62_0
 dd PIXf4_63_0
 dd PIXf4_64_0
 dd PIXf4_65_0
 dd PIXf4_66_0
 dd PIXf4_67_0
 dd PIXf4_68_0
 dd PIXf4_69_0
 dd PIXf4_70_0
 dd PIXf4_71_0
 dd PIXf4_72_0
 dd PIXf4_73_0
 dd PIXf4_74_0
 dd PIXf4_75_0
 dd PIXf4_76_0
 dd PIXf4_77_0
 dd PIXf4_78_0
 dd PIXf4_79_0
 dd PIXf4_80_0
 dd PIXf4_81_0
 dd PIXf4_82_0
 dd PIX_PAD_f4_0
JMP_TABLE_f4:
 dd BBf4_0 + 0x13333337
 dd BBf4_1 + 0x13333337
 dd BBf4_2 + 0x13333337
 dd BBf4_3 + 0x13333337
 dd BBf4_4 + 0x13333337
 dd BBf4_5 + 0x13333337
 dd BBf4_6 + 0x13333337
 dd BBf4_7 + 0x13333337
 dd BBf4_8 + 0x13333337
 dd BBf4_9 + 0x13333337
 dd BBf4_10 + 0x13333337
 dd BBf4_11 + 0x13333337
 dd BBf4_12 + 0x13333337
 dd BBf4_13 + 0x13333337
 dd BBf4_14 + 0x13333337
 dd BBf4_15 + 0x13333337
 dd BBf4_16 + 0x13333337
 dd BBf4_17 + 0x13333337
 dd BBf4_18 + 0x13333337
 dd BBf4_19 + 0x13333337
 dd BBf4_20 + 0x13333337
 dd BBf4_21 + 0x13333337
 dd BBf4_22 + 0x13333337
 dd BBf4_23 + 0x13333337
 dd BBf4_24 + 0x13333337
 dd BBf4_25 + 0x13333337
 dd BBf4_26 + 0x13333337
 dd BBf4_27 + 0x13333337
 dd BBf4_28 + 0x13333337
 dd BBf4_29 + 0x13333337
 dd BBf4_30 + 0x13333337
 dd BBf4_31 + 0x13333337
 dd BBf4_32 + 0x13333337
 dd BBf4_33 + 0x13333337
 dd BBf4_34 + 0x13333337
 dd BBf4_35 + 0x13333337
 dd BBf4_36 + 0x13333337
 dd BBf4_37 + 0x13333337
 dd BBf4_38 + 0x13333337
 dd BBf4_39 + 0x13333337
 dd BBf4_40 + 0x13333337
 dd BBf4_41 + 0x13333337
 dd BBf4_42 + 0x13333337
 dd BBf4_43 + 0x13333337
 dd BBf4_44 + 0x13333337
 dd BBf4_45 + 0x13333337
 dd BBf4_46 + 0x13333337
 dd BBf4_47 + 0x13333337
 dd BBf4_48 + 0x13333337
 dd BBf4_49 + 0x13333337
 dd BBf4_50 + 0x13333337
 dd BBf4_51 + 0x13333337
 dd BBf4_52 + 0x13333337
 dd BBf4_53 + 0x13333337
 dd BBf4_54 + 0x13333337
 dd BBf4_55 + 0x13333337
 dd BBf4_56 + 0x13333337
 dd BBf4_57 + 0x13333337
 dd BBf4_58 + 0x13333337
 dd BBf4_59 + 0x13333337
 dd BBf4_60 + 0x13333337
 dd BBf4_61 + 0x13333337
 dd BBf4_62 + 0x13333337
 dd BBf4_63 + 0x13333337
 dd BBf4_64 + 0x13333337
 dd BBf4_65 + 0x13333337
 dd BBf4_66 + 0x13333337
 dd BBf4_67 + 0x13333337
 dd BBf4_68 + 0x13333337
 dd BBf4_69 + 0x13333337
 dd BBf4_70 + 0x13333337
 dd BBf4_71 + 0x13333337
 dd BBf4_72 + 0x13333337
 dd BBf4_73 + 0x13333337
 dd BBf4_74 + 0x13333337
 dd BBf4_75 + 0x13333337
 dd BBf4_76 + 0x13333337
 dd BBf4_77 + 0x13333337
 dd BBf4_78 + 0x13333337
 dd BBf4_79 + 0x13333337
 dd BBf4_80 + 0x13333337
 dd BBf4_81 + 0x13333337
 dd BBf4_82 + 0x13333337
 dd BBf4_83 + 0x13333337
 dd BBf4_84 + 0x13333337
 dd BBf4_85 + 0x13333337
 dd BBf4_86 + 0x13333337
 dd BBf4_87 + 0x13333337
 dd BBf4_88 + 0x13333337
 dd BBf4_89 + 0x13333337
 dd BBf4_90 + 0x13333337
 dd BBf4_91 + 0x13333337
 dd BBf4_92 + 0x13333337
 dd BBf4_93 + 0x13333337
 dd BBf4_94 + 0x13333337
 dd BBf4_95 + 0x13333337
 dd BBf4_96 + 0x13333337
 dd BBf4_97 + 0x13333337
 dd BBf4_98 + 0x13333337
 dd BBf4_99 + 0x13333337
 dd BBf4_100 + 0x13333337
 dd BBf4_101 + 0x13333337
 dd BBf4_102 + 0x13333337
 dd BBf4_103 + 0x13333337
 dd BBf4_104 + 0x13333337
 dd BBf4_105 + 0x13333337
 dd BBf4_106 + 0x13333337
 dd BBf4_107 + 0x13333337
 dd BBf4_108 + 0x13333337
 dd BBf4_109 + 0x13333337
 dd BBf4_110 + 0x13333337
 dd BBf4_111 + 0x13333337
 dd BBf4_112 + 0x13333337
 dd BBf4_113 + 0x13333337
 dd BBf4_114 + 0x13333337
 dd BBf4_115 + 0x13333337
 dd BBf4_116 + 0x13333337
 dd BBf4_117 + 0x13333337
 dd BBf4_118 + 0x13333337
 dd BBf4_119 + 0x13333337
 dd BBf4_120 + 0x13333337
 dd BBf4_121 + 0x13333337
 dd BBf4_122 + 0x13333337
 dd BBf4_123 + 0x13333337
 dd BBf4_124 + 0x13333337
 dd BBf4_125 + 0x13333337
 dd BBf4_126 + 0x13333337
 dd BBf4_127 + 0x13333337
 dd BBf4_128 + 0x13333337
 dd BBf4_129 + 0x13333337
 dd BBf4_130 + 0x13333337
 dd BBf4_131 + 0x13333337
 dd BBf4_132 + 0x13333337
 dd BBf4_133 + 0x13333337
 dd BBf4_134 + 0x13333337
 dd BBf4_135 + 0x13333337
 dd BBf4_136 + 0x13333337
 dd BBf4_137 + 0x13333337
 dd BBf4_138 + 0x13333337
 dd BBf4_139 + 0x13333337
 dd BBf4_140 + 0x13333337
 dd BBf4_141 + 0x13333337
 dd BBf4_142 + 0x13333337
 dd BBf4_143 + 0x13333337
 dd BBf4_144 + 0x13333337
 dd BBf4_145 + 0x13333337
 dd BBf4_146 + 0x13333337
 dd BBf4_147 + 0x13333337
 dd BBf4_148 + 0x13333337
 dd BBf4_149 + 0x13333337
 dd BBf4_150 + 0x13333337
 dd BBf4_151 + 0x13333337
 dd BBf4_152 + 0x13333337
 dd BBf4_153 + 0x13333337
 dd BBf4_154 + 0x13333337
 dd BBf4_155 + 0x13333337
 dd BBf4_156 + 0x13333337
 dd BBf4_157 + 0x13333337
 dd BBf4_158 + 0x13333337
 dd BBf4_159 + 0x13333337
 dd BBf4_160 + 0x13333337
 dd BBf4_161 + 0x13333337
 dd BBf4_162 + 0x13333337
 dd BBf4_163 + 0x13333337
 dd BBf4_164 + 0x13333337
 dd BBf4_165 + 0x13333337
 dd BBf4_166 + 0x13333337
 dd BBf4_167 + 0x13333337
 dd BBf4_168 + 0x13333337
 dd BBf4_169 + 0x13333337
 dd BBf4_170 + 0x13333337
 dd BBf4_171 + 0x13333337
 dd BBf4_172 + 0x13333337
 dd BBf4_173 + 0x13333337
 dd BBf4_174 + 0x13333337
 dd BBf4_175 + 0x13333337
 dd BBf4_176 + 0x13333337
 dd BBf4_177 + 0x13333337
 dd BBf4_178 + 0x13333337
 dd BBf4_179 + 0x13333337
 dd BBf4_180 + 0x13333337
 dd BBf4_181 + 0x13333337
 dd BBf4_182 + 0x13333337
 dd BBf4_183 + 0x13333337
 dd BBf4_184 + 0x13333337
 dd BBf4_185 + 0x13333337
 dd BBf4_186 + 0x13333337
 dd BBf4_187 + 0x13333337
 dd BBf4_188 + 0x13333337
 dd BBf4_189 + 0x13333337
 dd BBf4_190 + 0x13333337
 dd BBf4_191 + 0x13333337
 dd BBf4_192 + 0x13333337
 dd BBf4_193 + 0x13333337
 dd BBf4_194 + 0x13333337
 dd BBf4_195 + 0x13333337
 dd BBf4_196 + 0x13333337
 dd BBf4_197 + 0x13333337
 dd BBf4_198 + 0x13333337
 dd BBf4_199 + 0x13333337
 dd BBf4_200 + 0x13333337
 dd BBf4_201 + 0x13333337
 dd BBf4_202 + 0x13333337
 dd BBf4_203 + 0x13333337
 dd BBf4_204 + 0x13333337
 dd BBf4_205 + 0x13333337
 dd BBf4_206 + 0x13333337
 dd BBf4_207 + 0x13333337
 dd BBf4_208 + 0x13333337
 dd BBf4_209 + 0x13333337
 dd BBf4_210 + 0x13333337
 dd BBf4_211 + 0x13333337
 dd BBf4_212 + 0x13333337
 dd BBf4_213 + 0x13333337
 dd BBf4_214 + 0x13333337
 dd BBf4_215 + 0x13333337
 dd BBf4_216 + 0x13333337
 dd BBf4_217 + 0x13333337
 dd BBf4_218 + 0x13333337
 dd BBf4_219 + 0x13333337
 dd BBf4_220 + 0x13333337
 dd BBf4_221 + 0x13333337
 dd BBf4_222 + 0x13333337
 dd BBf4_223 + 0x13333337
 dd BBf4_224 + 0x13333337
 dd BBf4_225 + 0x13333337
 dd BBf4_226 + 0x13333337
 dd BBf4_227 + 0x13333337
 dd BBf4_228 + 0x13333337
 dd BBf4_229 + 0x13333337
 dd BBf4_230 + 0x13333337
 dd BBf4_231 + 0x13333337
 dd BBf4_232 + 0x13333337
 dd BBf4_233 + 0x13333337
 dd BBf4_234 + 0x13333337
 dd BBf4_235 + 0x13333337
 dd BBf4_236 + 0x13333337
 dd BBf4_237 + 0x13333337
 dd BBf4_238 + 0x13333337
 dd BBf4_239 + 0x13333337
 dd BBf4_240 + 0x13333337
 dd BBf4_241 + 0x13333337
 dd BBf4_242 + 0x13333337
 dd BBf4_243 + 0x13333337
 dd BBf4_244 + 0x13333337
 dd BBf4_245 + 0x13333337
 dd BBf4_246 + 0x13333337
 dd BBf4_247 + 0x13333337
 dd BBf4_248 + 0x13333337
 dd BBf4_249 + 0x13333337
 dd BBf4_250 + 0x13333337
 dd BBf4_251 + 0x13333337
 dd BBf4_252 + 0x13333337
 dd BBf4_253 + 0x13333337
 dd BBf4_254 + 0x13333337
 dd BBf4_255 + 0x13333337
 dd BBf4_256 + 0x13333337
 dd BBf4_257 + 0x13333337
 dd BBf4_258 + 0x13333337
 dd BBf4_259 + 0x13333337
 dd BBf4_260 + 0x13333337
 dd BBf4_261 + 0x13333337
 dd BBf4_262 + 0x13333337
 dd BBf4_263 + 0x13333337
 dd BBf4_264 + 0x13333337
 dd BBf4_265 + 0x13333337
 dd BBf4_266 + 0x13333337
 dd BBf4_267 + 0x13333337
 dd BBf4_268 + 0x13333337
 dd BBf4_269 + 0x13333337
 dd BBf4_270 + 0x13333337
 dd BBf4_271 + 0x13333337
 dd BBf4_272 + 0x13333337
 dd BBf4_273 + 0x13333337
 dd BBf4_274 + 0x13333337
 dd BBf4_275 + 0x13333337
 dd BBf4_276 + 0x13333337
 dd BBf4_277 + 0x13333337
 dd BBf4_278 + 0x13333337
 dd BBf4_279 + 0x13333337
 dd BBf4_280 + 0x13333337
 dd BBf4_281 + 0x13333337
 dd BBf4_282 + 0x13333337
 dd BBf4_283 + 0x13333337
 dd BBf4_284 + 0x13333337
 dd BBf4_285 + 0x13333337
 dd BBf4_286 + 0x13333337
 dd BBf4_287 + 0x13333337
 dd BBf4_288 + 0x13333337
 dd BBf4_289 + 0x13333337
 dd BBf4_290 + 0x13333337
 dd BBf4_291 + 0x13333337
 dd BBf4_292 + 0x13333337
 dd BBf4_293 + 0x13333337
 dd BBf4_294 + 0x13333337
 dd BBf4_295 + 0x13333337
 dd BBf4_296 + 0x13333337
 dd BBf4_297 + 0x13333337
 dd BBf4_298 + 0x13333337
 dd BBf4_299 + 0x13333337
 dd BBf4_300 + 0x13333337
 dd BBf4_301 + 0x13333337
 dd BBf4_302 + 0x13333337
 dd BBf4_303 + 0x13333337
 dd BBf4_304 + 0x13333337
 dd BBf4_305 + 0x13333337
 dd BBf4_306 + 0x13333337
 dd BBf4_307 + 0x13333337
 dd BBf4_308 + 0x13333337
 dd BBf4_309 + 0x13333337
 dd BBf4_310 + 0x13333337
 dd BBf4_311 + 0x13333337
 dd BBf4_312 + 0x13333337
 dd BBf4_313 + 0x13333337
 dd BBf4_314 + 0x13333337
 dd BBf4_315 + 0x13333337
 dd BBf4_316 + 0x13333337
 dd BBf4_317 + 0x13333337
 dd BBf4_318 + 0x13333337
 dd BBf4_319 + 0x13333337
 dd BBf4_320 + 0x13333337
 dd BBf4_321 + 0x13333337
 dd BBf4_322 + 0x13333337
 dd BBf4_323 + 0x13333337
 dd BBf4_324 + 0x13333337
 dd BBf4_325 + 0x13333337
 dd BBf4_326 + 0x13333337
 dd BBf4_327 + 0x13333337
 dd BBf4_328 + 0x13333337
 dd BBf4_329 + 0x13333337
 dd BBf4_330 + 0x13333337
 dd BBf4_331 + 0x13333337
 dd BBf4_332 + 0x13333337
 dd BBf4_333 + 0x13333337
 dd BBf4_334 + 0x13333337
 dd BBf4_335 + 0x13333337
 dd BBf4_336 + 0x13333337
 dd BBf4_337 + 0x13333337
 dd BBf4_338 + 0x13333337
 dd BBf4_339 + 0x13333337
 dd BBf4_340 + 0x13333337
 dd BBf4_341 + 0x13333337
 dd BBf4_342 + 0x13333337
 dd BBf4_343 + 0x13333337
 dd BBf4_344 + 0x13333337
 dd BBf4_345 + 0x13333337
 dd BBf4_346 + 0x13333337
 dd BBf4_347 + 0x13333337
 dd BBf4_348 + 0x13333337
 dd BBf4_349 + 0x13333337
 dd BBf4_350 + 0x13333337
 dd BBf4_351 + 0x13333337
 dd BBf4_352 + 0x13333337
 dd BBf4_353 + 0x13333337
 dd BBf4_354 + 0x13333337
 dd BBf4_355 + 0x13333337
 dd BBf4_356 + 0x13333337
 dd BBf4_357 + 0x13333337
 dd BBf4_358 + 0x13333337
 dd BBf4_359 + 0x13333337
 dd BBf4_360 + 0x13333337
 dd BBf4_361 + 0x13333337
 dd BBf4_362 + 0x13333337
 dd BBf4_363 + 0x13333337
 dd BBf4_364 + 0x13333337
 dd BBf4_365 + 0x13333337
 dd BBf4_366 + 0x13333337
 dd BBf4_367 + 0x13333337
 dd BBf4_368 + 0x13333337
 dd BBf4_369 + 0x13333337
 dd BBf4_370 + 0x13333337
 dd BBf4_371 + 0x13333337
 dd BBf4_372 + 0x13333337
 dd BBf4_373 + 0x13333337
 dd BBf4_374 + 0x13333337
 dd BBf4_375 + 0x13333337
 dd BBf4_376 + 0x13333337
 dd BBf4_377 + 0x13333337
 dd BBf4_378 + 0x13333337
 dd BBf4_379 + 0x13333337
 dd BBf4_380 + 0x13333337
 dd BBf4_381 + 0x13333337
 dd BBf4_382 + 0x13333337
 dd BBf4_383 + 0x13333337
 dd BBf4_384 + 0x13333337
 dd BBf4_385 + 0x13333337
 dd BBf4_386 + 0x13333337
 dd BBf4_387 + 0x13333337
 dd BBf4_388 + 0x13333337
 dd BBf4_389 + 0x13333337
 dd BBf4_390 + 0x13333337
 dd BBf4_391 + 0x13333337
 dd BBf4_392 + 0x13333337
 dd BBf4_393 + 0x13333337
 dd BBf4_394 + 0x13333337
 dd BBf4_395 + 0x13333337
 dd BBf4_396 + 0x13333337
 dd BBf4_397 + 0x13333337
 dd BBf4_398 + 0x13333337
 dd BBf4_399 + 0x13333337
 dd BBf4_400 + 0x13333337
 dd BBf4_401 + 0x13333337
 dd BBf4_402 + 0x13333337
 dd BBf4_403 + 0x13333337
 dd BBf4_404 + 0x13333337
 dd BBf4_405 + 0x13333337
 dd BBf4_406 + 0x13333337
 dd BBf4_407 + 0x13333337
 dd BBf4_408 + 0x13333337
 dd BBf4_409 + 0x13333337
 dd BBf4_410 + 0x13333337
 dd BBf4_411 + 0x13333337
 dd BBf4_412 + 0x13333337
 dd BBf4_413 + 0x13333337
 dd BBf4_414 + 0x13333337
 dd BBf4_415 + 0x13333337
 dd BBf4_416 + 0x13333337
 dd BBf4_417 + 0x13333337
 dd BBf4_418 + 0x13333337
 dd BBf4_419 + 0x13333337
 dd BBf4_420 + 0x13333337
 dd BBf4_421 + 0x13333337
 dd BBf4_422 + 0x13333337
 dd BBf4_423 + 0x13333337
 dd BBf4_424 + 0x13333337
 dd BBf4_425 + 0x13333337
 dd BBf4_426 + 0x13333337
 dd BBf4_427 + 0x13333337
 dd BBf4_428 + 0x13333337
 dd BBf4_429 + 0x13333337
 dd BBf4_430 + 0x13333337
 dd BBf4_431 + 0x13333337
 dd BBf4_432 + 0x13333337
 dd BBf4_433 + 0x13333337
 dd BBf4_434 + 0x13333337
 dd BBf4_435 + 0x13333337
 dd BBf4_436 + 0x13333337
 dd BBf4_437 + 0x13333337
 dd BBf4_438 + 0x13333337
 dd BBf4_439 + 0x13333337
 dd BBf4_440 + 0x13333337
 dd BBf4_441 + 0x13333337
 dd BBf4_442 + 0x13333337
 dd BBf4_443 + 0x13333337
 dd BBf4_444 + 0x13333337
 dd BBf4_445 + 0x13333337
 dd BBf4_446 + 0x13333337
 dd BBf4_447 + 0x13333337
 dd BBf4_448 + 0x13333337
 dd BBf4_449 + 0x13333337
 dd BBf4_450 + 0x13333337
 dd BBf4_451 + 0x13333337
 dd BBf4_452 + 0x13333337
 dd BBf4_453 + 0x13333337
 dd BBf4_454 + 0x13333337
 dd BBf4_455 + 0x13333337
 dd BBf4_456 + 0x13333337
 dd BBf4_457 + 0x13333337
 dd BBf4_458 + 0x13333337
 dd BBf4_459 + 0x13333337
 dd BBf4_460 + 0x13333337
 dd BBf4_461 + 0x13333337
 dd BBf4_462 + 0x13333337
 dd BBf4_463 + 0x13333337
 dd BBf4_464 + 0x13333337
 dd BBf4_465 + 0x13333337
 dd BBf4_466 + 0x13333337
 dd BBf4_467 + 0x13333337
 dd BBf4_468 + 0x13333337
 dd BBf4_469 + 0x13333337
 dd BBf4_470 + 0x13333337
 dd BBf4_471 + 0x13333337
 dd BBf4_472 + 0x13333337
 dd BBf4_473 + 0x13333337
 dd BBf4_474 + 0x13333337
 dd BBf4_475 + 0x13333337
 dd BBf4_476 + 0x13333337
 dd BBf4_477 + 0x13333337
 dd BBf4_478 + 0x13333337
 dd BBf4_479 + 0x13333337
 dd BBf4_480 + 0x13333337
 dd BBf4_481 + 0x13333337
 dd BBf4_482 + 0x13333337
 dd BBf4_483 + 0x13333337
 dd BBf4_484 + 0x13333337
 dd BBf4_485 + 0x13333337
 dd BBf4_486 + 0x13333337
 dd BBf4_487 + 0x13333337
 dd BBf4_488 + 0x13333337
 dd BBf4_489 + 0x13333337
 dd BBf4_490 + 0x13333337
 dd BBf4_491 + 0x13333337
 dd BBf4_492 + 0x13333337
 dd BBf4_493 + 0x13333337
 dd BBf4_494 + 0x13333337
 dd BBf4_495 + 0x13333337
 dd BBf4_496 + 0x13333337
 dd BBf4_497 + 0x13333337
 dd BBf4_498 + 0x13333337
 dd BBf4_499 + 0x13333337
 dd BBf4_500 + 0x13333337
 dd BBf4_501 + 0x13333337
 dd BBf4_502 + 0x13333337
 dd BBf4_503 + 0x13333337
 dd BBf4_504 + 0x13333337
 dd BBf4_505 + 0x13333337
 dd BBf4_506 + 0x13333337
 dd BBf4_507 + 0x13333337
 dd BBf4_508 + 0x13333337
 dd BBf4_509 + 0x13333337
 dd BBf4_510 + 0x13333337
 dd BBf4_511 + 0x13333337
 dd BBf4_512 + 0x13333337
 dd BBf4_513 + 0x13333337
 dd BBf4_514 + 0x13333337
 dd BBf4_515 + 0x13333337
 dd BBf4_516 + 0x13333337
 dd BBf4_517 + 0x13333337
 dd BBf4_518 + 0x13333337
 dd BBf4_519 + 0x13333337
 dd BBf4_520 + 0x13333337
 dd BBf4_521 + 0x13333337
 dd BBf4_522 + 0x13333337
 dd BBf4_523 + 0x13333337
 dd BBf4_524 + 0x13333337
 dd BBf4_525 + 0x13333337
 dd BBf4_526 + 0x13333337
 dd BBf4_527 + 0x13333337
 dd BBf4_528 + 0x13333337
 dd BBf4_529 + 0x13333337
 dd BBf4_530 + 0x13333337
 dd BBf4_531 + 0x13333337
 dd BBf4_532 + 0x13333337
 dd BBf4_533 + 0x13333337
 dd BBf4_534 + 0x13333337
 dd BBf4_535 + 0x13333337
 dd BBf4_536 + 0x13333337
 dd BBf4_537 + 0x13333337
 dd BBf4_538 + 0x13333337
 dd BBf4_539 + 0x13333337
 dd BBf4_540 + 0x13333337
 dd BBf4_541 + 0x13333337
 dd BBf4_542 + 0x13333337
 dd BBf4_543 + 0x13333337
 dd BBf4_544 + 0x13333337
 dd BBf4_545 + 0x13333337
 dd BBf4_546 + 0x13333337
 dd BBf4_547 + 0x13333337
 dd BBf4_548 + 0x13333337
 dd BBf4_549 + 0x13333337
 dd BBf4_550 + 0x13333337
 dd BBf4_551 + 0x13333337
 dd BBf4_552 + 0x13333337
 dd BBf4_553 + 0x13333337
 dd BBf4_554 + 0x13333337
 dd BBf4_555 + 0x13333337
 dd BBf4_556 + 0x13333337
 dd BBf4_557 + 0x13333337
 dd BBf4_558 + 0x13333337
 dd BBf4_559 + 0x13333337
 dd BBf4_560 + 0x13333337
 dd BBf4_561 + 0x13333337
 dd BBf4_562 + 0x13333337
 dd BBf4_563 + 0x13333337
 dd BBf4_564 + 0x13333337
 dd BBf4_565 + 0x13333337
 dd BBf4_566 + 0x13333337
 dd BBf4_567 + 0x13333337
 dd BBf4_568 + 0x13333337
 dd BBf4_569 + 0x13333337
 dd BBf4_570 + 0x13333337
 dd BBf4_571 + 0x13333337
 dd BBf4_572 + 0x13333337
 dd BBf4_573 + 0x13333337
 dd BBf4_574 + 0x13333337
 dd BBf4_575 + 0x13333337
 dd BBf4_576 + 0x13333337
 dd BBf4_577 + 0x13333337
 dd BBf4_578 + 0x13333337
 dd BBf4_579 + 0x13333337
 dd BBf4_580 + 0x13333337
 dd BBf4_581 + 0x13333337
 dd BBf4_582 + 0x13333337
 dd BBf4_583 + 0x13333337
 dd BBf4_584 + 0x13333337
 dd BBf4_585 + 0x13333337
 dd BBf4_586 + 0x13333337
 dd BBf4_587 + 0x13333337
 dd BBf4_588 + 0x13333337
 dd BBf4_589 + 0x13333337
 dd BBf4_590 + 0x13333337
 dd BBf4_591 + 0x13333337
 dd BBf4_592 + 0x13333337
 dd BBf4_593 + 0x13333337
 dd BBf4_594 + 0x13333337
 dd BBf4_595 + 0x13333337
 dd BBf4_596 + 0x13333337
 dd BBf4_597 + 0x13333337
 dd BBf4_598 + 0x13333337
 dd BBf4_599 + 0x13333337
 dd BBf4_600 + 0x13333337
 dd BBf4_601 + 0x13333337
 dd BBf4_602 + 0x13333337
 dd BBf4_603 + 0x13333337
 dd BBf4_604 + 0x13333337
 dd BBf4_605 + 0x13333337
 dd BBf4_606 + 0x13333337
 dd BBf4_607 + 0x13333337
 dd BBf4_608 + 0x13333337
 dd BBf4_609 + 0x13333337
 dd BBf4_610 + 0x13333337
 dd BBf4_611 + 0x13333337
 dd BBf4_612 + 0x13333337
 dd BBf4_613 + 0x13333337
 dd BBf4_614 + 0x13333337
 dd BBf4_615 + 0x13333337
 dd BBf4_616 + 0x13333337
 dd BBf4_617 + 0x13333337
 dd BBf4_618 + 0x13333337
 dd BBf4_619 + 0x13333337
 dd BBf4_620 + 0x13333337
 dd BBf4_621 + 0x13333337
 dd BBf4_622 + 0x13333337
 dd BBf4_623 + 0x13333337
 dd BBf4_624 + 0x13333337
 dd BBf4_625 + 0x13333337
 dd BBf4_626 + 0x13333337
 dd BBf4_627 + 0x13333337
 dd BBf4_628 + 0x13333337
 dd BBf4_629 + 0x13333337
 dd BBf4_630 + 0x13333337
 dd BBf4_631 + 0x13333337
 dd BBf4_632 + 0x13333337
 dd BBf4_633 + 0x13333337
 dd BBf4_634 + 0x13333337
 dd BBf4_635 + 0x13333337
 dd BBf4_636 + 0x13333337
 dd BBf4_637 + 0x13333337
 dd BBf4_638 + 0x13333337
 dd BBf4_639 + 0x13333337
 dd BBf4_640 + 0x13333337
 dd BBf4_641 + 0x13333337
 dd BBf4_642 + 0x13333337
 dd BBf4_643 + 0x13333337
 dd BBf4_644 + 0x13333337
 dd BBf4_645 + 0x13333337
 dd BBf4_646 + 0x13333337
 dd BBf4_647 + 0x13333337
 dd BBf4_648 + 0x13333337
 dd BBf4_649 + 0x13333337
 dd BBf4_650 + 0x13333337
 dd BBf4_651 + 0x13333337
 dd BBf4_652 + 0x13333337
 dd BBf4_653 + 0x13333337
 dd BBf4_654 + 0x13333337
 dd BBf4_655 + 0x13333337
 dd BBf4_656 + 0x13333337
 dd BBf4_657 + 0x13333337
 dd BBf4_658 + 0x13333337
 dd BBf4_659 + 0x13333337
 dd BBf4_660 + 0x13333337
 dd BBf4_661 + 0x13333337
 dd BBf4_662 + 0x13333337
 dd BBf4_663 + 0x13333337
 dd BBf4_664 + 0x13333337
 dd BBf4_665 + 0x13333337
 dd BBf4_666 + 0x13333337
 dd BBf4_667 + 0x13333337
 dd BBf4_668 + 0x13333337
 dd BBf4_669 + 0x13333337
 dd BBf4_670 + 0x13333337
 dd BBf4_671 + 0x13333337
 dd BBf4_672 + 0x13333337
 dd BBf4_673 + 0x13333337
 dd BBf4_674 + 0x13333337
 dd BBf4_675 + 0x13333337
 dd BBf4_676 + 0x13333337
; ----- End of func 0 -----

;; ============================= START FUNC 5
section .data
reg_a5: dd 0
reg_b5: dd 0
reg_c5: dd 0
reg_d5: dd 0
reg_bp5: dd 0
reg_sp5: dd 0
reg_pc5: dd 0

section .text
global _start5
_start5:
 mov ebx, 0x1 ; fd
 mov edx, 1 ; len
 mov edi, 0
 mov eax, 1
; ----- Start of 0 -----
func_5:
 PCJMP_f5:
  cmp eax, 1
  je _PCJMP_f5
  ret
 _PCJMP_f5:
  pop eax
  mov eax, [JMP_TABLE_f5 + 4*edi]
  sub eax, 0x10000001
  jz PIX_START_f5
  jmp eax
PIX_START_f5:
 mov esi, [PIX_TABLE_f5 + 4*esi]
 jmp esi
PIXf5_0_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_0: mov edi, 0x261
 mov eax, 1
 call PCJMP_f5
BBf5_1: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x34
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_0_1
PIXf5_1_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_7: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcf
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcf
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_1_1
PIXf5_2_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x13
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_18: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 jmp PIXf5_2_1
PIXf5_3_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_24: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov edi, 0x1a
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_25: mov edi, 0x1c
 mov eax, 1
 call PCJMP_f5
BBf5_26: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_3_1
PIXf5_4_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffe5
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_4_1
PIXf5_5_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_40: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 jmp PIXf5_5_1
PIXf5_6_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 jmp PIXf5_6_1
PIXf5_7_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_7_1
PIXf5_8_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_8_1
PIXf5_9_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_9_1
PIXf5_10_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_106: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_10_1
PIXf5_11_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_11_1
PIXf5_12_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x7e
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_125: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_12_1
PIXf5_13_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_142: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_13_1
PIXf5_14_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_14_1
PIXf5_15_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_173: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_15_1
PIXf5_16_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0xb8
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_181: mov dword [reg_a5], 0x41
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_16_1
PIXf5_17_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x5a
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_188: mov eax, dword [reg_b5]
 jmp PIXf5_17_1
PIXf5_18_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x7f
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 jmp PIXf5_18_1
PIXf5_19_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_222: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_19_1
PIXf5_20_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 jmp PIXf5_20_1
PIXf5_21_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffff9
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 jmp PIXf5_21_1
PIXf5_22_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x10f
 cmp dword [reg_a5], 0x0
 sete  al
 jmp PIXf5_22_1
PIXf5_23_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x115
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f5
BBf5_277: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_23_1
PIXf5_24_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_24_1
PIXf5_25_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x39
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 jmp PIXf5_25_1
PIXf5_26_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x137
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_26_1
PIXf5_27_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_27_1
PIXf5_28_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_28_1
PIXf5_29_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 jmp PIXf5_29_1
PIXf5_30_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_341: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_30_1
PIXf5_31_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_31_1
PIXf5_32_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x172
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_369: mov edi, 0x173
 mov eax, 1
 call PCJMP_f5
BBf5_370: mov edi, 0x174
 mov eax, 1
 call PCJMP_f5
BBf5_371: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_32_1
PIXf5_33_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 mov edi, 0x186
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_389: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 jmp PIXf5_33_1
PIXf5_34_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x19a
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_409: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_34_1
PIXf5_35_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1a9
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x168
 mov eax, 1
 call PCJMP_f5
BBf5_425: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_35_1
PIXf5_36_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1b7
 cmp dword [reg_a5], 0x0
 sete  al
 jmp PIXf5_36_1
PIXf5_37_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 jmp PIXf5_37_1
PIXf5_38_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 jmp PIXf5_38_1
PIXf5_39_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_462: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x3
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_39_1
PIXf5_40_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 sub dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 jmp PIXf5_40_1
PIXf5_41_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_486: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_41_1
PIXf5_42_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x64
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1f6
 jmp PIXf5_42_1
PIXf5_43_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x5
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x5
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_43_1
PIXf5_44_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_527: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffda
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 cmp dword [reg_a5], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x214
 jmp PIXf5_44_1
PIXf5_45_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x100
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_45_1
PIXf5_46_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x21f
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x218
 mov eax, 1
 call PCJMP_f5
BBf5_543: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x3
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 jmp PIXf5_46_1
PIXf5_47_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0x2
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_47_1
PIXf5_48_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_563: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x3
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_48_1
PIXf5_49_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_49_1
PIXf5_50_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_587: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_50_1
PIXf5_51_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_599: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x259
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_600: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f5
BBf5_601: mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_51_1
PIXf5_0_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffd0
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 jmp PIXf5_0_2
PIXf5_1_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x2
 mov eax, 1
 call PCJMP_f5
BBf5_8: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcd
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_9: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffe8
 jmp PIXf5_1_2
PIXf5_2_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_19: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 jmp PIXf5_2_2
PIXf5_3_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_27: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 jmp PIXf5_3_2
PIXf5_4_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_4_2
PIXf5_5_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_41: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xfffffe
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_5_2
PIXf5_6_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x1
 mov edi, 0x36
 mov eax, 1
 call PCJMP_f5
BBf5_53: mov dword [reg_a5], 0x0
BBf5_54: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_6_2
PIXf5_7_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x46
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_69: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_7_2
PIXf5_8_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x1
 mov edi, 0x55
 mov eax, 1
 call PCJMP_f5
BBf5_84: mov dword [reg_a5], 0x0
BBf5_85: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_8_2
PIXf5_9_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 jmp PIXf5_9_2
PIXf5_10_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x18
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x6c
 cmp dword [reg_a5], 0x0
 sete  al
 jmp PIXf5_10_2
PIXf5_11_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_11_2
PIXf5_12_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_12_2
PIXf5_13_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_143: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x20
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffe0
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_13_2
PIXf5_14_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x10
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_14_2
PIXf5_15_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_174: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_175: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_15_2
PIXf5_16_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x0
 mov edi, 0xb7
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_182: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_16_2
PIXf5_17_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_189: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_17_2
PIXf5_18_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_208: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_209: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_18_2
PIXf5_19_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x7
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_19_2
PIXf5_20_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_238: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_20_2
PIXf5_21_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x100
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_255: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffff9
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_21_2
PIXf5_22_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_270: mov edi, 0x117
 mov eax, 1
 call PCJMP_f5
BBf5_271: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffa
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_22_2
PIXf5_23_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 jmp PIXf5_23_2
PIXf5_24_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_24_2
PIXf5_25_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_298: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov edi, 0x12e
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_299: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_25_2
PIXf5_26_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f5
BBf5_311: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_26_2
PIXf5_27_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x143
 mov eax, 1
 call PCJMP_f5
BBf5_322: mov edi, 0x144
 jmp PIXf5_27_2
PIXf5_28_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_28_2
PIXf5_29_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_29_2
PIXf5_30_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_30_2
PIXf5_31_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x163
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_354: mov edi, 0x164
 mov eax, 1
 call PCJMP_f5
BBf5_355: mov edi, 0x166
 mov eax, 1
 call PCJMP_f5
BBf5_356: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_31_2
PIXf5_32_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x170
 jmp PIXf5_32_2
PIXf5_33_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_390: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov edi, 0x188
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_391: mov edi, 0x189
 mov eax, 1
 call PCJMP_f5
BBf5_392: mov edi, 0x18e
 mov eax, 1
 call PCJMP_f5
BBf5_393: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_33_2
PIXf5_34_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 jmp PIXf5_34_2
PIXf5_35_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_35_2
PIXf5_36_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_438: mov edi, 0x1b1
 mov eax, 1
 call PCJMP_f5
BBf5_439: mov edi, 0x1b2
 mov eax, 1
 call PCJMP_f5
BBf5_440: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 jmp PIXf5_36_2
PIXf5_37_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_37_2
PIXf5_38_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1c9
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_456: mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 jmp PIXf5_38_2
PIXf5_39_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setne al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1d6
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_463: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov dword [reg_a5], 0x24
 jmp PIXf5_39_2
PIXf5_40_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_40_2
PIXf5_41_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1e7
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_487: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_41_2
PIXf5_42_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_501: mov edi, 0x202
 mov eax, 1
 call PCJMP_f5
BBf5_502: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x75
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_42_2
PIXf5_43_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffdd
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_43_2
PIXf5_44_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_528: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_44_2
PIXf5_45_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x219
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_45_2
PIXf5_46_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_46_2
PIXf5_47_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_47_2
PIXf5_48_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_48_2
PIXf5_49_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_577: mov eax, 0x3
 mov ecx, reg_a5
 int 0x80
 mov edi, 0x243
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_578: mov dword [reg_a5], 0xffffff
BBf5_579: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 jmp PIXf5_49_2
PIXf5_50_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_588: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 jmp PIXf5_50_2
PIXf5_51_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_602: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_51_2
PIXf5_0_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_0_3
PIXf5_1_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcf
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_1_3
PIXf5_2_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 jmp PIXf5_2_3
PIXf5_3_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x16
 mov eax, 1
 call PCJMP_f5
BBf5_28: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcb
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_3_3
PIXf5_4_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_4_3
PIXf5_5_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_5_3
PIXf5_6_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x0
 mov edi, 0x38
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_55: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_56: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov edi, 0x3a
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
 jmp PIXf5_6_3
PIXf5_7_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 jmp PIXf5_7_3
PIXf5_8_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_8_3
PIXf5_9_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x63
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_98: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_9_3
PIXf5_10_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_107: mov edi, 0x6d
 mov eax, 1
 call PCJMP_f5
BBf5_108: mov edi, 0x73
 mov eax, 1
 call PCJMP_f5
BBf5_109: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_10_3
PIXf5_11_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_11_3
PIXf5_12_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 jmp PIXf5_12_3
PIXf5_13_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x20
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_13_3
PIXf5_14_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x99
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f5
BBf5_153: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 jmp PIXf5_14_3
PIXf5_15_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xb0
 mov eax, dword [reg_sp5]
 jmp PIXf5_15_3
PIXf5_16_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x46
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_183: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 jmp PIXf5_16_3
PIXf5_17_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_190: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov dword [reg_a5], 0x61
 mov eax, dword [reg_sp5]
 jmp PIXf5_17_3
PIXf5_18_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_210: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_18_3
PIXf5_19_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 mov edi, 0xe0
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_223: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_19_3
PIXf5_20_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 mov edi, 0xf0
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_239: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_20_3
PIXf5_21_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffff9
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 jmp PIXf5_21_3
PIXf5_22_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x111
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_272: mov edi, 0x116
 mov eax, 1
 call PCJMP_f5
BBf5_273: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x114
 cmp dword [reg_a5], 0x0
 sete  al
 jmp PIXf5_22_3
PIXf5_23_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_278: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_23_3
PIXf5_24_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x11f
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f5
BBf5_287: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x3
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_24_3
PIXf5_25_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x3
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_25_3
PIXf5_26_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_26_3
PIXf5_27_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_323: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f5
BBf5_324: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 jmp PIXf5_27_3
PIXf5_28_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_331: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_28_3
PIXf5_29_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_337: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f5
BBf5_338: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_29_3
PIXf5_30_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_30_3
PIXf5_31_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_31_3
PIXf5_32_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_372: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x176
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_373: mov edi, 0x177
 mov eax, 1
 call PCJMP_f5
BBf5_374: mov edi, 0x179
 mov eax, 1
 call PCJMP_f5
BBf5_375: mov eax, dword [reg_bp5]
 jmp PIXf5_32_3
PIXf5_33_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_33_3
PIXf5_34_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_410: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_34_3
PIXf5_35_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1aa
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_35_3
PIXf5_36_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1ba
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_441: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_36_3
PIXf5_37_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_449: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 jmp PIXf5_37_3
PIXf5_38_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_457: mov edi, 0x1cb
 mov eax, 1
 call PCJMP_f5
BBf5_458: mov edi, 0x1cc
 mov eax, 1
 call PCJMP_f5
BBf5_459: mov edi, 0x1c6
 mov eax, 1
 call PCJMP_f5
BBf5_460: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_38_3
PIXf5_39_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 jmp PIXf5_39_3
PIXf5_40_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_40_3
PIXf5_41_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0xa
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, 0x4
 mov ecx, reg_a5
 int 0x80
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 jmp PIXf5_41_3
PIXf5_42_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1f8
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_503: mov edi, 0x202
 mov eax, 1
 call PCJMP_f5
BBf5_504: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_42_3
PIXf5_43_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_43_3
PIXf5_44_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffda
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_44_3
PIXf5_45_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f5
BBf5_537: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x4
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_45_3
PIXf5_46_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_544: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_545: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_46_3
PIXf5_47_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x226
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f5
BBf5_550: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_47_3
PIXf5_48_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_48_3
PIXf5_49_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 jmp PIXf5_49_3
PIXf5_50_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_589: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_50_3
PIXf5_51_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_51_3
PIXf5_0_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcf
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_2: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_0_4
PIXf5_1_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 jmp PIXf5_1_4
PIXf5_2_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov edi, 0x15
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_20: mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_2_4
PIXf5_3_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_29: mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffcd
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 jmp PIXf5_3_4
PIXf5_4_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffcd
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_4_4
PIXf5_5_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x2a
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f5
BBf5_42: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 jmp PIXf5_5_4
PIXf5_6_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_57: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_6_4
PIXf5_7_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x1
 mov edi, 0x47
 mov eax, 1
 call PCJMP_f5
BBf5_70: mov dword [reg_a5], 0x0
BBf5_71: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 mov edi, 0x49
 cmp dword [reg_a5], 0x0
 jmp PIXf5_7_4
PIXf5_8_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x57
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_86: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_8_4
PIXf5_9_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_9_4
PIXf5_10_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_10_4
PIXf5_11_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_114: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_11_4
PIXf5_12_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_126: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_12_4
PIXf5_13_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_13_4
PIXf5_14_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x9b
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_154: mov edi, 0x94
 mov eax, 1
 call PCJMP_f5
BBf5_155: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_14_4
PIXf5_15_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f5
BBf5_176: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_b5], 0x1
 mov edi, 0xb4
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_177: mov dword [reg_a5], 0x61
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_15_4
PIXf5_16_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_184: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 jmp PIXf5_16_4
PIXf5_17_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 jmp PIXf5_17_4
PIXf5_18_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_211: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_18_4
PIXf5_19_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_224: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 jmp PIXf5_19_4
PIXf5_20_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x10
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_240: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x0
 jmp PIXf5_20_4
PIXf5_21_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 jmp PIXf5_21_4
PIXf5_22_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_274: mov dword [reg_a5], 0x1
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffa
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_22_4
PIXf5_23_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_23_4
PIXf5_24_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_288: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_24_4
PIXf5_25_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x12c
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f5
BBf5_300: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 jmp PIXf5_25_4
PIXf5_26_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x138
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f5
BBf5_312: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_26_4
PIXf5_27_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x146
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_325: mov edi, 0x152
 mov eax, 1
 call PCJMP_f5
BBf5_326: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 jmp PIXf5_27_4
PIXf5_28_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x147
 jmp PIXf5_28_4
PIXf5_29_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 jmp PIXf5_29_4
PIXf5_30_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x156
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_30_4
PIXf5_31_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_31_4
PIXf5_32_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_32_4
PIXf5_33_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_33_4
PIXf5_34_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_34_4
PIXf5_35_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f5
BBf5_426: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_35_4
PIXf5_36_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 jmp PIXf5_36_4
PIXf5_37_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setne al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1c3
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_450: mov edi, 0x1bc
 mov eax, 1
 call PCJMP_f5
BBf5_451: mov edi, 0x1bb
 mov eax, 1
 call PCJMP_f5
BBf5_452: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_37_4
PIXf5_38_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_38_4
PIXf5_39_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_464: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_39_4
PIXf5_40_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_466: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_40_4
PIXf5_41_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_488: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x26
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov dword [reg_a5], 0x0
 jmp PIXf5_41_4
PIXf5_42_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x78
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1fa
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
 jmp PIXf5_42_4
PIXf5_43_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_43_4
PIXf5_44_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_44_4
PIXf5_45_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_45_4
PIXf5_46_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_46_4
PIXf5_47_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_47_4
PIXf5_48_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_48_4
PIXf5_49_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x140
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_49_4
PIXf5_50_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, 0x4
 mov ecx, reg_a5
 int 0x80
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_50_4
PIXf5_51_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 jmp PIXf5_51_4
PIXf5_0_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffe8
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_0_5
PIXf5_1_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_1_5
PIXf5_2_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_21: mov dword [reg_a5], 0x0
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_2_5
PIXf5_3_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_5
PIXf5_4_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_4_5
PIXf5_5_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_5_5
PIXf5_6_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_6_5
PIXf5_7_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 setne al
 jmp PIXf5_7_5
PIXf5_8_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_8_5
PIXf5_9_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_5
PIXf5_10_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 jmp PIXf5_10_5
PIXf5_11_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x6a
 mov eax, 1
 call PCJMP_f5
BBf5_115: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_11_5
PIXf5_12_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x76
 jmp PIXf5_12_5
PIXf5_13_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_13_5
PIXf5_14_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x9d
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_156: mov dword [reg_a5], 0x2d
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 sub dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 jmp PIXf5_14_5
PIXf5_15_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_5
PIXf5_16_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_5
PIXf5_17_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_17_5
PIXf5_18_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_18_5
PIXf5_19_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_19_5
PIXf5_20_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_20_5
PIXf5_21_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_21_5
PIXf5_22_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_22_5
PIXf5_23_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x102
 mov eax, 1
 call PCJMP_f5
BBf5_279: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_23_5
PIXf5_24_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_289: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_24_5
PIXf5_25_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 jmp PIXf5_25_5
PIXf5_26_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_26_5
PIXf5_27_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_327: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_27_5
PIXf5_28_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_332: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_28_5
PIXf5_29_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x5
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_29_5
PIXf5_30_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_30_5
PIXf5_31_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_31_5
PIXf5_32_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_32_5
PIXf5_33_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_33_5
PIXf5_34_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_34_5
PIXf5_35_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_35_5
PIXf5_36_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_36_5
PIXf5_37_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_37_5
PIXf5_38_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_38_5
PIXf5_39_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_39_5
PIXf5_40_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_40_5
PIXf5_41_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_41_5
PIXf5_42_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_505: mov edi, 0x204
 mov eax, 1
 call PCJMP_f5
BBf5_506: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x73
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_42_5
PIXf5_43_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_43_5
PIXf5_44_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_44_5
PIXf5_45_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_538: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_539: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_45_5
PIXf5_46_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x101
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_46_5
PIXf5_47_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_47_5
PIXf5_48_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_48_5
PIXf5_49_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_49_5
PIXf5_50_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_590: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 jmp PIXf5_50_5
PIXf5_51_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_51_5
PIXf5_0_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcf
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 jmp PIXf5_0_6
PIXf5_1_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0xb
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_10: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_1_6
PIXf5_2_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_22: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_2_6
PIXf5_3_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_6
PIXf5_4_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_4_6
PIXf5_5_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x3
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_5_6
PIXf5_6_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_58: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_6_6
PIXf5_7_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_72: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_73: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov edi, 0x4b
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_74: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 jmp PIXf5_7_6
PIXf5_8_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_8_6
PIXf5_9_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_6
PIXf5_10_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_6
PIXf5_11_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_116: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_11_6
PIXf5_12_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_127: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_12_6
PIXf5_13_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x90
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_13_6
PIXf5_14_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_157: mov eax, dword [reg_bp5]
 jmp PIXf5_14_6
PIXf5_15_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_6
PIXf5_16_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_6
PIXf5_17_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x0
 mov edi, 0xc0
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_191: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x7a
 mov eax, dword [reg_a5]
 jmp PIXf5_17_6
PIXf5_18_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_212: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_18_6
PIXf5_19_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0xe2
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_225: mov dword [reg_a5], 0x24
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_19_6
PIXf5_20_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0xf2
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_241: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x30
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_20_6
PIXf5_21_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_21_6
PIXf5_22_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_22_6
PIXf5_23_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_23_6
PIXf5_24_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 jmp PIXf5_24_6
PIXf5_25_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_25_6
PIXf5_26_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_26_6
PIXf5_27_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x149
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_328: mov edi, 0x14a
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_27_6
PIXf5_28_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x14e
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_333: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_28_6
PIXf5_29_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_29_6
PIXf5_30_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_30_6
PIXf5_31_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_31_6
PIXf5_32_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_376: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_32_6
PIXf5_33_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x18b
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_394: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_33_6
PIXf5_34_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x19c
 jmp PIXf5_34_6
PIXf5_35_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_35_6
PIXf5_36_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_36_6
PIXf5_37_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_37_6
PIXf5_38_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_38_6
PIXf5_39_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 jmp PIXf5_39_6
PIXf5_40_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1d4
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_467: mov edi, 0x1d6
 jmp PIXf5_40_6
PIXf5_41_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_489: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x1eb
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_490: mov edi, 0x1ec
 mov eax, 1
 jmp PIXf5_41_6
PIXf5_42_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1fc
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_507: mov edi, 0x206
 mov eax, 1
 call PCJMP_f5
BBf5_508: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_42_6
PIXf5_43_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_43_6
PIXf5_44_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x212
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_529: mov dword [reg_a5], 0x1
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 jmp PIXf5_44_6
PIXf5_45_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0x4
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_45_6
PIXf5_46_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x100
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_46_6
PIXf5_47_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 jmp PIXf5_47_6
PIXf5_48_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x234
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f5
BBf5_564: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 jmp PIXf5_48_6
PIXf5_49_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_49_6
PIXf5_50_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_50_6
PIXf5_51_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_51_6
PIXf5_0_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_0_7
PIXf5_1_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xffffcd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffd0
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_1_7
PIXf5_2_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffe5
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_2_7
PIXf5_3_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_7
PIXf5_4_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_4_7
PIXf5_5_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_43: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_44: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 jmp PIXf5_5_7
PIXf5_6_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x2d
 mov eax, 1
 call PCJMP_f5
BBf5_59: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_6_7
PIXf5_7_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_7_7
PIXf5_8_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x1
 jmp PIXf5_8_7
PIXf5_9_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_7
PIXf5_10_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_7
PIXf5_11_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_117: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x4
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 jmp PIXf5_11_7
PIXf5_12_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_128: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_129: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 jmp PIXf5_12_7
PIXf5_13_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f5
BBf5_144: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x91
 mov eax, dword [reg_sp5]
 jmp PIXf5_13_7
PIXf5_14_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_14_7
PIXf5_15_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_7
PIXf5_16_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_7
PIXf5_17_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_192: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 mov edi, 0xc4
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_193: mov dword [reg_a5], 0x41
 jmp PIXf5_17_7
PIXf5_18_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov dword [reg_b5], 0x14d
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_b5], 0x14d
 jmp PIXf5_18_7
PIXf5_19_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_226: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov edi, 0xe6
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_227: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_19_7
PIXf5_20_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_242: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x0
 mov edi, 0xf6
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_243: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 jmp PIXf5_20_7
PIXf5_21_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_256: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffff9
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_21_7
PIXf5_22_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_22_7
PIXf5_23_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_23_7
PIXf5_24_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x122
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xde
 mov eax, 1
 jmp PIXf5_24_7
PIXf5_25_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], 0x12d
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f5
BBf5_301: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_25_7
PIXf5_26_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_26_7
PIXf5_27_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_329: mov edi, 0x14c
 mov eax, 1
 call PCJMP_f5
BBf5_330: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_27_7
PIXf5_28_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_28_7
PIXf5_29_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_29_7
PIXf5_30_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f5
BBf5_342: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_30_7
PIXf5_31_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_31_7
PIXf5_32_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 jmp PIXf5_32_7
PIXf5_33_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_33_7
PIXf5_34_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_411: mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_412: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_34_7
PIXf5_35_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_35_7
PIXf5_36_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_442: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_36_7
PIXf5_37_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_37_7
PIXf5_38_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_38_7
PIXf5_39_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_39_7
PIXf5_40_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_468: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 sub dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_40_7
PIXf5_41_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_491: mov edi, 0x216
 mov eax, 1
 call PCJMP_f5
BBf5_492: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_41_7
PIXf5_42_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x63
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1fe
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_509: mov edi, 0x207
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_42_7
PIXf5_43_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffdd
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_43_7
PIXf5_44_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_44_7
PIXf5_45_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_45_7
PIXf5_46_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffff00
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x222
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_46_7
PIXf5_47_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_551: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_552: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_47_7
PIXf5_48_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_565: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_48_7
PIXf5_49_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_49_7
PIXf5_50_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_50_7
PIXf5_51_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xa
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x25c
 cmp dword [reg_a5], 0x0
 sete  al
 jmp PIXf5_51_7
PIXf5_0_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 jmp PIXf5_0_8
PIXf5_1_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcf
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_1_8
PIXf5_2_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 jmp PIXf5_2_8
PIXf5_3_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_8
PIXf5_4_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_31: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_4_8
PIXf5_5_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x5
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 jmp PIXf5_5_8
PIXf5_6_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_60: mov eax, dword [reg_bp5]
 jmp PIXf5_6_8
PIXf5_7_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_75: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_7_8
PIXf5_8_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x58
 mov eax, 1
 call PCJMP_f5
BBf5_87: mov dword [reg_a5], 0x0
BBf5_88: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_8_8
PIXf5_9_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_8
PIXf5_10_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_8
PIXf5_11_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_11_8
PIXf5_12_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
BBf5_130: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x84
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_131: mov edi, 0x85
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_12_8
PIXf5_13_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_145: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_13_8
PIXf5_14_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_158: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_159: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_14_8
PIXf5_15_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_8
PIXf5_16_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_8
PIXf5_17_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 jmp PIXf5_17_8
PIXf5_18_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 jmp PIXf5_18_8
PIXf5_19_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setne al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0xe5
 jmp PIXf5_19_8
PIXf5_20_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x78
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_20_8
PIXf5_21_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffff9
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_257: mov dword [reg_a5], 0x0
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_bp5]
 jmp PIXf5_21_8
PIXf5_22_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_22_8
PIXf5_23_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_23_8
PIXf5_24_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_290: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x3
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_291: mov eax, dword [reg_bp5]
 jmp PIXf5_24_8
PIXf5_25_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_25_8
PIXf5_26_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_26_8
PIXf5_27_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 jmp PIXf5_27_8
PIXf5_28_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_28_8
PIXf5_29_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_29_8
PIXf5_30_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x157
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f5
BBf5_343: mov eax, dword [reg_b5]
 jmp PIXf5_30_8
PIXf5_31_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 jmp PIXf5_31_8
PIXf5_32_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_32_8
PIXf5_33_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_395: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_33_8
PIXf5_34_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_34_8
PIXf5_35_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1ab
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f5
BBf5_427: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_35_8
PIXf5_36_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_36_8
PIXf5_37_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_37_8
PIXf5_38_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_38_8
PIXf5_39_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_39_8
PIXf5_40_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setne al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1d6
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_469: mov edi, 0x1d0
 mov eax, 1
 call PCJMP_f5
BBf5_470: mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_40_8
PIXf5_41_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], 0x25
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setne al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1f2
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_493: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 cmp dword [reg_a5], 0x0
 sete  al
 jmp PIXf5_41_8
PIXf5_42_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_510: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x25
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_42_8
PIXf5_43_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_43_8
PIXf5_44_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_44_8
PIXf5_45_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 jmp PIXf5_45_8
PIXf5_46_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f5
BBf5_546: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x4
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffeff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_46_8
PIXf5_47_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0x3
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_47_8
PIXf5_48_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 jmp PIXf5_48_8
PIXf5_49_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_49_8
PIXf5_50_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_50_8
PIXf5_51_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_603: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f5
BBf5_604: mov edi, 0x25e
 mov eax, 1
 call PCJMP_f5
BBf5_605: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f5
BBf5_606: mov edi, 0x254
 mov eax, 1
 call PCJMP_f5
BBf5_607: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_51_8
PIXf5_0_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffce
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 jmp PIXf5_0_9
PIXf5_1_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_1_9
PIXf5_2_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_2_9
PIXf5_3_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_9
PIXf5_4_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x21
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_32: mov edi, 0x22
 mov eax, 1
 call PCJMP_f5
BBf5_33: mov eax, dword [reg_bp5]
 jmp PIXf5_4_9
PIXf5_5_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_45: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x18
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_5_9
PIXf5_6_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_61: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_6_9
PIXf5_7_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x3e
 mov eax, 1
 call PCJMP_f5
BBf5_76: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_7_9
PIXf5_8_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setne al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x5a
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
 jmp PIXf5_8_9
PIXf5_9_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_9
PIXf5_10_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_9
PIXf5_11_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_118: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x18
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_11_9
PIXf5_12_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_132: mov edi, 0x87
 mov eax, 1
 call PCJMP_f5
BBf5_133: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, 0x4
 jmp PIXf5_12_9
PIXf5_13_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_146: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_13_9
PIXf5_14_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xc
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_14_9
PIXf5_15_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_9
PIXf5_16_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_9
PIXf5_17_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x0
 mov edi, 0xc3
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_194: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x5a
 jmp PIXf5_17_9
PIXf5_18_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x14d
 jmp PIXf5_18_9
PIXf5_19_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_228: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_19_9
PIXf5_20_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 mov edi, 0xf5
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_244: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_20_9
PIXf5_21_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffa
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_258: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x103
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_21_9
PIXf5_22_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_22_9
PIXf5_23_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_23_9
PIXf5_24_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_292: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_24_9
PIXf5_25_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_25_9
PIXf5_26_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_26_9
PIXf5_27_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_27_9
PIXf5_28_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_28_9
PIXf5_29_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_29_9
PIXf5_30_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x4
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_344: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 jmp PIXf5_30_9
PIXf5_31_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_31_9
PIXf5_32_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x174
 mov eax, 1
 call PCJMP_f5
BBf5_377: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 jmp PIXf5_32_9
PIXf5_33_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_33_9
PIXf5_34_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 jmp PIXf5_34_9
PIXf5_35_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_428: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_35_9
PIXf5_36_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_443: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_36_9
PIXf5_37_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_453: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x3
 jmp PIXf5_37_9
PIXf5_38_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_38_9
PIXf5_39_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_39_9
PIXf5_40_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_471: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_40_9
PIXf5_41_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1f1
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_494: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_41_9
PIXf5_42_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x200
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_511: mov edi, 0x208
 mov eax, 1
 call PCJMP_f5
BBf5_512: mov edi, 0x209
 mov eax, 1
 call PCJMP_f5
BBf5_513: mov edi, 0x1f2
 mov eax, 1
 call PCJMP_f5
BBf5_514: mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffdd
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_42_9
PIXf5_43_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffdd
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f5
BBf5_520: mov dword [reg_a5], 0x25
 jmp PIXf5_43_9
PIXf5_44_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 jmp PIXf5_44_9
PIXf5_45_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x21c
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x1e8
 mov eax, 1
 jmp PIXf5_45_9
PIXf5_46_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffff00
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_46_9
PIXf5_47_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x229
 jmp PIXf5_47_9
PIXf5_48_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x237
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_566: mov edi, 0x238
 mov eax, 1
 call PCJMP_f5
BBf5_567: mov edi, 0x23a
 mov eax, 1
 call PCJMP_f5
BBf5_568: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_48_9
PIXf5_49_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_49_9
PIXf5_50_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_50_9
PIXf5_51_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_51_9
PIXf5_0_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffce
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_0_10
PIXf5_1_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_1_10
PIXf5_2_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_2_10
PIXf5_3_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_10
PIXf5_4_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 sub dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_4_10
PIXf5_5_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x2f
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_46: mov edi, 0x30
 mov eax, 1
 call PCJMP_f5
BBf5_47: mov edi, 0x3b
 mov eax, 1
 call PCJMP_f5
BBf5_48: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_5_10
PIXf5_6_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x5
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 jmp PIXf5_6_10
PIXf5_7_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_77: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_7_10
PIXf5_8_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_89: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_8_10
PIXf5_9_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_10
PIXf5_10_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_10
PIXf5_11_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x78
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_119: mov edi, 0x79
 mov eax, 1
 call PCJMP_f5
BBf5_120: mov edi, 0x7f
 mov eax, 1
 call PCJMP_f5
BBf5_121: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_11_10
PIXf5_12_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, reg_a5
 int 0x80
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_134: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 jmp PIXf5_12_10
PIXf5_13_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 jmp PIXf5_13_10
PIXf5_14_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 mov edi, 0xa1
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_160: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_14_10
PIXf5_15_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_10
PIXf5_16_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_10
PIXf5_17_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_195: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 jmp PIXf5_17_10
PIXf5_18_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_b5], 0x14d
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_18_10
PIXf5_19_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_229: mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_19_10
PIXf5_20_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x58
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
 jmp PIXf5_20_10
PIXf5_21_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f5
BBf5_259: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x105
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_260: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_21_10
PIXf5_22_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_22_10
PIXf5_23_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_23_10
PIXf5_24_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_24_10
PIXf5_25_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_25_10
PIXf5_26_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x139
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f5
BBf5_313: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 jmp PIXf5_26_10
PIXf5_27_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_27_10
PIXf5_28_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_28_10
PIXf5_29_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 jmp PIXf5_29_10
PIXf5_30_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_345: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_30_10
PIXf5_31_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
BBf5_357: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 jmp PIXf5_31_10
PIXf5_32_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_378: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_32_10
PIXf5_33_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x18d
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_396: mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_33_10
PIXf5_34_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 jmp PIXf5_34_10
PIXf5_35_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_429: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x4
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_35_10
PIXf5_36_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_36_10
PIXf5_37_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov dword [reg_a5], 0x24
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 jmp PIXf5_37_10
PIXf5_38_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_38_10
PIXf5_39_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_39_10
PIXf5_40_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_472: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x3
 and dword [reg_sp5], 0xffffff
BBf5_473: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 jmp PIXf5_40_10
PIXf5_41_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 jmp PIXf5_41_10
PIXf5_42_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x20
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 jmp PIXf5_42_10
PIXf5_43_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffdd
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_43_10
PIXf5_44_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x214
 mov eax, 1
 call PCJMP_f5
BBf5_530: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_44_10
PIXf5_45_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_540: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x4
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_45_10
PIXf5_46_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffeff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_46_10
PIXf5_47_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f5
BBf5_553: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 jmp PIXf5_47_10
PIXf5_48_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_48_10
PIXf5_49_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_49_10
PIXf5_50_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_50_10
PIXf5_51_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_51_10
PIXf5_0_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 mov edi, 0x4
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_3: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffce
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_0_11
PIXf5_1_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 jmp PIXf5_1_11
PIXf5_2_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_2_11
PIXf5_3_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_11
PIXf5_4_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_4_11
PIXf5_5_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_5_11
PIXf5_6_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_6_11
PIXf5_7_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_7_11
PIXf5_8_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_8_11
PIXf5_9_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_11
PIXf5_10_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_10_11
PIXf5_11_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_11_11
PIXf5_12_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x82
 mov eax, 1
 call PCJMP_f5
BBf5_135: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_12_11
PIXf5_13_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_13_11
PIXf5_14_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xa
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_161: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 jmp PIXf5_14_11
PIXf5_15_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_11
PIXf5_16_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_11
PIXf5_17_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_17_11
PIXf5_18_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_18_11
PIXf5_19_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_19_11
PIXf5_20_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_20_11
PIXf5_21_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_21_11
PIXf5_22_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_22_11
PIXf5_23_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setne al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x11c
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_280: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_23_11
PIXf5_24_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_24_11
PIXf5_25_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 jmp PIXf5_25_11
PIXf5_26_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 jmp PIXf5_26_11
PIXf5_27_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_27_11
PIXf5_28_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_28_11
PIXf5_29_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_29_11
PIXf5_30_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 jmp PIXf5_30_11
PIXf5_31_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x161
 mov eax, 1
 call PCJMP_f5
BBf5_358: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_31_11
PIXf5_32_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_379: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_32_11
PIXf5_33_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_397: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 jmp PIXf5_33_11
PIXf5_34_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x191
 mov eax, 1
 call PCJMP_f5
BBf5_413: mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_34_11
PIXf5_35_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_35_11
PIXf5_36_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 jmp PIXf5_36_11
PIXf5_37_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_454: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 jmp PIXf5_37_11
PIXf5_38_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_38_11
PIXf5_39_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_39_11
PIXf5_40_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_40_11
PIXf5_41_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1f0
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_495: mov dword [reg_a5], 0x1
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 jmp PIXf5_41_11
PIXf5_42_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_42_11
PIXf5_43_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_43_11
PIXf5_44_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_44_11
PIXf5_45_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_45_11
PIXf5_46_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_46_11
PIXf5_47_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_47_11
PIXf5_48_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_48_11
PIXf5_49_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_49_11
PIXf5_50_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_591: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_50_11
PIXf5_51_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_51_11
PIXf5_0_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 jmp PIXf5_0_12
PIXf5_1_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
BBf5_11: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcf
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_1_12
PIXf5_2_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffcd
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_2_12
PIXf5_3_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_12
PIXf5_4_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_4_12
PIXf5_5_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_5_12
PIXf5_6_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_6_12
PIXf5_7_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_7_12
PIXf5_8_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_8_12
PIXf5_9_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_12
PIXf5_10_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_12
PIXf5_11_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_11_12
PIXf5_12_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_136: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_12_12
PIXf5_13_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x94
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_147: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 jmp PIXf5_13_12
PIXf5_14_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0xa3
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_162: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xd
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_14_12
PIXf5_15_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_12
PIXf5_16_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_12
PIXf5_17_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_17_12
PIXf5_18_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_18_12
PIXf5_19_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_19_12
PIXf5_20_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_20_12
PIXf5_21_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x30
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_21_12
PIXf5_22_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_22_12
PIXf5_23_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xfffffa
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x11a
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_281: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_23_12
PIXf5_24_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], 0x125
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f5
BBf5_293: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x3
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_24_12
PIXf5_25_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x30
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 jmp PIXf5_25_12
PIXf5_26_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_314: mov dword [reg_a5], 0x8000
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_26_12
PIXf5_27_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_27_12
PIXf5_28_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_28_12
PIXf5_29_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_29_12
PIXf5_30_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov edi, 0x15b
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_346: mov edi, 0x15c
 mov eax, 1
 call PCJMP_f5
BBf5_347: mov edi, 0x15e
 mov eax, 1
 call PCJMP_f5
BBf5_348: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_30_12
PIXf5_31_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_359: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 jmp PIXf5_31_12
PIXf5_32_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_380: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x17e
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_381: mov edi, 0x17f
 mov eax, 1
 call PCJMP_f5
BBf5_382: mov edi, 0x181
 jmp PIXf5_32_12
PIXf5_33_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 jmp PIXf5_33_12
PIXf5_34_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_414: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_34_12
PIXf5_35_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x0
 mov edi, 0x1af
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_430: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 jmp PIXf5_35_12
PIXf5_36_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_444: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 jmp PIXf5_36_12
PIXf5_37_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 jmp PIXf5_37_12
PIXf5_38_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_38_12
PIXf5_39_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_39_12
PIXf5_40_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 jmp PIXf5_40_12
PIXf5_41_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_41_12
PIXf5_42_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 jmp PIXf5_42_12
PIXf5_43_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_43_12
PIXf5_44_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_44_12
PIXf5_45_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_45_12
PIXf5_46_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_46_12
PIXf5_47_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_47_12
PIXf5_48_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_48_12
PIXf5_49_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 jmp PIXf5_49_12
PIXf5_50_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, 0x4
 mov ecx, reg_a5
 int 0x80
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 jmp PIXf5_50_12
PIXf5_51_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_608: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_51_12
PIXf5_0_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_4: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov edi, 0x6
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_5: mov edi, 0x8
 mov eax, 1
 call PCJMP_f5
BBf5_6: mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffd0
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_0_13
PIXf5_1_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0xd
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_12: mov edi, 0xe
 mov eax, 1
 call PCJMP_f5
BBf5_13: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcf
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_1_13
PIXf5_2_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_2_13
PIXf5_3_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_13
PIXf5_4_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x1d
 mov eax, 1
 call PCJMP_f5
BBf5_34: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 jmp PIXf5_4_13
PIXf5_5_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_5_13
PIXf5_6_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
BBf5_62: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x18
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_6_13
PIXf5_7_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_78: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x5
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_7_13
PIXf5_8_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_90: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_8_13
PIXf5_9_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_13
PIXf5_10_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_13
PIXf5_11_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_11_13
PIXf5_12_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_137: mov eax, dword [reg_bp5]
 jmp PIXf5_12_13
PIXf5_13_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 jmp PIXf5_13_13
PIXf5_14_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_163: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 mov edi, 0xa5
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_164: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 jmp PIXf5_14_13
PIXf5_15_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_13
PIXf5_16_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_13
PIXf5_17_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
BBf5_196: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_197: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_17_13
PIXf5_18_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0xd7
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_213: mov dword [reg_a5], 0x18
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xd6
 jmp PIXf5_18_13
PIXf5_19_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_230: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_19_13
PIXf5_20_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_20_13
PIXf5_21_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_21_13
PIXf5_22_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_22_13
PIXf5_23_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_23_13
PIXf5_24_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_294: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_24_13
PIXf5_25_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x12f
 mov eax, 1
 call PCJMP_f5
BBf5_302: mov edi, 0x130
 mov eax, 1
 call PCJMP_f5
BBf5_303: mov edi, 0x128
 jmp PIXf5_25_13
PIXf5_26_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x5
 and dword [reg_b5], 0xffffff
 jmp PIXf5_26_13
PIXf5_27_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_27_13
PIXf5_28_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_28_13
PIXf5_29_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], 0x153
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f5
BBf5_339: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_29_13
PIXf5_30_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_30_13
PIXf5_31_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_360: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_361: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_31_13
PIXf5_32_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_383: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_32_13
PIXf5_33_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x184
 mov eax, 1
 call PCJMP_f5
BBf5_398: mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_33_13
PIXf5_34_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_415: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
BBf5_416: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_34_13
PIXf5_35_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 jmp PIXf5_35_13
PIXf5_36_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_36_13
PIXf5_37_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_37_13
PIXf5_38_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_38_13
PIXf5_39_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_39_13
PIXf5_40_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setne al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1e2
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_474: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 jmp PIXf5_40_13
PIXf5_41_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 jmp PIXf5_41_13
PIXf5_42_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x5
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x5
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 jmp PIXf5_42_13
PIXf5_43_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffdd
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_43_13
PIXf5_44_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x213
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_44_13
PIXf5_45_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_45_13
PIXf5_46_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_46_13
PIXf5_47_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_554: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_47_13
PIXf5_48_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_48_13
PIXf5_49_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_580: mov dword [reg_b5], 0x13f
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_49_13
PIXf5_50_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_592: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_593: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_50_13
PIXf5_51_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_609: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_51_13
PIXf5_0_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcf
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 jmp PIXf5_0_14
PIXf5_1_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 sub dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcf
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x9
 mov eax, 1
 call PCJMP_f5
BBf5_14: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_1_14
PIXf5_2_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 jmp PIXf5_2_14
PIXf5_3_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_14
PIXf5_4_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_35: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_4_14
PIXf5_5_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_5_14
PIXf5_6_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x40
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_63: mov edi, 0x41
 mov eax, 1
 call PCJMP_f5
BBf5_64: mov edi, 0x4c
 mov eax, 1
 call PCJMP_f5
BBf5_65: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_6_14
PIXf5_7_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_79: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 jmp PIXf5_7_14
PIXf5_8_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x4f
 mov eax, 1
 call PCJMP_f5
BBf5_91: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_8_14
PIXf5_9_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x1
 mov edi, 0x64
 mov eax, 1
 call PCJMP_f5
BBf5_99: mov dword [reg_a5], 0x0
BBf5_100: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 jmp PIXf5_9_14
PIXf5_10_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_14
PIXf5_11_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_11_14
PIXf5_12_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 sub dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_12_14
PIXf5_13_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_148: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 sub dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 jmp PIXf5_13_14
PIXf5_14_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x9
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 jmp PIXf5_14_14
PIXf5_15_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_14
PIXf5_16_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_14
PIXf5_17_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_198: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 jmp PIXf5_17_14
PIXf5_18_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_214: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_18_14
PIXf5_19_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_231: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_19_14
PIXf5_20_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_245: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_246: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov edi, 0xf8
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_247: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_20_14
PIXf5_21_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_21_14
PIXf5_22_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_22_14
PIXf5_23_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov edi, 0x11b
 mov eax, 1
 call PCJMP_f5
BBf5_282: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
BBf5_283: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_23_14
PIXf5_24_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_295: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 jmp PIXf5_24_14
PIXf5_25_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_304: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_25_14
PIXf5_26_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov dword [reg_a5], 0x13b
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, dword [reg_c5]
 mov eax, 1
 call PCJMP_f5
BBf5_315: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_26_14
PIXf5_27_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_27_14
PIXf5_28_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_28_14
PIXf5_29_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x154
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_29_14
PIXf5_30_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_30_14
PIXf5_31_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_31_14
PIXf5_32_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_384: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 jmp PIXf5_32_14
PIXf5_33_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_399: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_33_14
PIXf5_34_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov edi, 0x1a2
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_417: mov edi, 0x1a3
 mov eax, 1
 call PCJMP_f5
BBf5_418: mov edi, 0x1a6
 mov eax, 1
 call PCJMP_f5
BBf5_419: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_34_14
PIXf5_35_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_431: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov edi, 0x1b1
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_432: mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_35_14
PIXf5_36_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1c1
 jmp PIXf5_36_14
PIXf5_37_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_37_14
PIXf5_38_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_38_14
PIXf5_39_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_39_14
PIXf5_40_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_475: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 jmp PIXf5_40_14
PIXf5_41_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_41_14
PIXf5_42_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x203
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_42_14
PIXf5_43_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 jmp PIXf5_43_14
PIXf5_44_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_531: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
BBf5_532: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffda
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_44_14
PIXf5_45_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_45_14
PIXf5_46_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_46_14
PIXf5_47_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_47_14
PIXf5_48_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, 0x4
 mov ecx, reg_a5
 int 0x80
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_569: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_48_14
PIXf5_49_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov dword [reg_b5], 0x13f
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_49_14
PIXf5_50_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 jmp PIXf5_50_14
PIXf5_51_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_610: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_51_14
PIXf5_0_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_0_15
PIXf5_1_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_1_15
PIXf5_2_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_2_15
PIXf5_3_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_15
PIXf5_4_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_36: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_4_15
PIXf5_5_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_5_15
PIXf5_6_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_6_15
PIXf5_7_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x18
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 jmp PIXf5_7_15
PIXf5_8_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_92: mov eax, dword [reg_bp5]
 jmp PIXf5_8_15
PIXf5_9_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 cmp dword [reg_a5], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x66
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_101: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_9_15
PIXf5_10_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_15
PIXf5_11_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_11_15
PIXf5_12_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xa
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_12_15
PIXf5_13_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x10
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_13_15
PIXf5_14_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_165: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 mov edi, 0xa7
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_166: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_14_15
PIXf5_15_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_15
PIXf5_16_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_15
PIXf5_17_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xc7
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_17_15
PIXf5_18_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_215: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_18_15
PIXf5_19_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_19_15
PIXf5_20_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 jmp PIXf5_20_15
PIXf5_21_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_21_15
PIXf5_22_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_22_15
PIXf5_23_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_23_15
PIXf5_24_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_296: mov dword [reg_a5], 0x30
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_24_15
PIXf5_25_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_305: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_306: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 jmp PIXf5_25_15
PIXf5_26_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x13d
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_316: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_26_15
PIXf5_27_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_27_15
PIXf5_28_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_28_15
PIXf5_29_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f5
BBf5_340: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x4
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x5
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_29_15
PIXf5_30_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_349: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 jmp PIXf5_30_15
PIXf5_31_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 jmp PIXf5_31_15
PIXf5_32_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_32_15
PIXf5_33_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_400: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_401: mov eax, dword [reg_bp5]
 jmp PIXf5_33_15
PIXf5_34_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 jmp PIXf5_34_15
PIXf5_35_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_433: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 jmp PIXf5_35_15
PIXf5_36_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_445: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_36_15
PIXf5_37_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_37_15
PIXf5_38_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_38_15
PIXf5_39_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_39_15
PIXf5_40_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_40_15
PIXf5_41_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x1f1
 mov eax, 1
 call PCJMP_f5
BBf5_496: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_41_15
PIXf5_42_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f5
BBf5_515: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f5
BBf5_516: mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffdd
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_42_15
PIXf5_43_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffdd
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_43_15
PIXf5_44_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_533: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_44_15
PIXf5_45_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_45_15
PIXf5_46_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_46_15
PIXf5_47_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x22b
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f5
BBf5_555: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_47_15
PIXf5_48_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x235
 mov eax, 1
 call PCJMP_f5
BBf5_570: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 jmp PIXf5_48_15
PIXf5_49_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_581: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_49_15
PIXf5_50_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x253
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_594: mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_50_15
PIXf5_51_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x64
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x264
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_611: mov edi, 0x265
 mov eax, 1
 call PCJMP_f5
BBf5_612: mov edi, 0x268
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_51_15
PIXf5_0_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffd0
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcf
 jmp PIXf5_0_16
PIXf5_1_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_1_16
PIXf5_2_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 jmp PIXf5_2_16
PIXf5_3_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_16
PIXf5_4_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x26
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_37: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 jmp PIXf5_4_16
PIXf5_5_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x32
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_49: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_5_16
PIXf5_6_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_6_16
PIXf5_7_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov edi, 0x51
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_80: mov edi, 0x52
 mov eax, 1
 call PCJMP_f5
BBf5_81: mov edi, 0x5b
 mov eax, 1
 call PCJMP_f5
BBf5_82: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_7_16
PIXf5_8_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_93: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_8_16
PIXf5_9_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 jmp PIXf5_9_16
PIXf5_10_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_16
PIXf5_11_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_11_16
PIXf5_12_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x8a
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f5
BBf5_138: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 jmp PIXf5_12_16
PIXf5_13_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x95
 mov eax, dword [reg_sp5]
 jmp PIXf5_13_16
PIXf5_14_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xb
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_167: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 jmp PIXf5_14_16
PIXf5_15_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_16
PIXf5_16_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_16
PIXf5_17_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f5
BBf5_199: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_b5], 0x1
 mov edi, 0xca
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_200: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_17_16
PIXf5_18_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_216: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_217: mov eax, dword [reg_sp5]
 jmp PIXf5_18_16
PIXf5_19_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xe8
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f5
BBf5_232: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 jmp PIXf5_19_16
PIXf5_20_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_20_16
PIXf5_21_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f5
BBf5_261: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x106
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_21_16
PIXf5_22_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_22_16
PIXf5_23_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_23_16
PIXf5_24_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_24_16
PIXf5_25_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 jmp PIXf5_25_16
PIXf5_26_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_26_16
PIXf5_27_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffa
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 jmp PIXf5_27_16
PIXf5_28_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_28_16
PIXf5_29_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_29_16
PIXf5_30_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_30_16
PIXf5_31_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x16b
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_362: mov edi, 0x16c
 mov eax, 1
 call PCJMP_f5
BBf5_363: mov edi, 0x16d
 mov eax, 1
 call PCJMP_f5
BBf5_364: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_31_16
PIXf5_32_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_32_16
PIXf5_33_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 mov edi, 0x193
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_402: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_33_16
PIXf5_34_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov edi, 0x1a5
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_420: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_34_16
PIXf5_35_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_35_16
PIXf5_36_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1bf
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_446: mov dword [reg_a5], 0x0
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x1c0
 mov eax, 1
 call PCJMP_f5
BBf5_447: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_36_16
PIXf5_37_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_37_16
PIXf5_38_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_38_16
PIXf5_39_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_39_16
PIXf5_40_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setne al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1dd
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_476: mov edi, 0x1de
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_40_16
PIXf5_41_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_41_16
PIXf5_42_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x20
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 jmp PIXf5_42_16
PIXf5_43_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f5
BBf5_521: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_43_16
PIXf5_44_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x1e9
 jmp PIXf5_44_16
PIXf5_45_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_541: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_45_16
PIXf5_46_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffff00
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_46_16
PIXf5_47_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_556: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_47_16
PIXf5_48_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_571: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_48_16
PIXf5_49_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_582: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_49_16
PIXf5_50_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_595: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_596: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 jmp PIXf5_50_16
PIXf5_51_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_613: mov dword [reg_a5], 0x141
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x266
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x225
 mov eax, 1
 call PCJMP_f5
BBf5_614: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 jmp PIXf5_51_16
PIXf5_0_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 jmp PIXf5_0_17
PIXf5_1_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_1_17
PIXf5_2_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_2_17
PIXf5_3_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_17
PIXf5_4_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_38: mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xfffffe
 jmp PIXf5_4_17
PIXf5_5_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_5_17
PIXf5_6_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 jmp PIXf5_6_17
PIXf5_7_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 jmp PIXf5_7_17
PIXf5_8_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x4
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 jmp PIXf5_8_17
PIXf5_9_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_17
PIXf5_10_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_17
PIXf5_11_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_11_17
PIXf5_12_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x30
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_12_17
PIXf5_13_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f5
BBf5_149: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 jmp PIXf5_13_17
PIXf5_14_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], 0x1
 mov edi, 0xa9
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_168: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x20
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_14_17
PIXf5_15_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_17
PIXf5_16_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_17
PIXf5_17_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xc9
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f5
BBf5_201: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 jmp PIXf5_17_17
PIXf5_18_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_18_17
PIXf5_19_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0xea
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_233: mov edi, 0xe7
 mov eax, 1
 call PCJMP_f5
BBf5_234: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_19_17
PIXf5_20_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x2
 mov eax, dword [reg_a5]
 jmp PIXf5_20_17
PIXf5_21_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f5
BBf5_262: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x10c
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_263: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_21_17
PIXf5_22_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_22_17
PIXf5_23_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_23_17
PIXf5_24_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 jmp PIXf5_24_17
PIXf5_25_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_307: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_308: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_25_17
PIXf5_26_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x13e
 mov eax, 1
 jmp PIXf5_26_17
PIXf5_27_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 jmp PIXf5_27_17
PIXf5_28_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_28_17
PIXf5_29_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_29_17
PIXf5_30_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_30_17
PIXf5_31_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x169
 mov eax, 1
 call PCJMP_f5
BBf5_365: mov eax, dword [reg_bp5]
 jmp PIXf5_31_17
PIXf5_32_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x17c
 mov eax, 1
 call PCJMP_f5
BBf5_385: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_32_17
PIXf5_33_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_403: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x0
 mov edi, 0x195
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_404: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_33_17
PIXf5_34_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_421: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 jmp PIXf5_34_17
PIXf5_35_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_434: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_35_17
PIXf5_36_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_36_17
PIXf5_37_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_37_17
PIXf5_38_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_38_17
PIXf5_39_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_39_17
PIXf5_40_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_477: mov edi, 0x1e1
 mov eax, 1
 call PCJMP_f5
BBf5_478: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_40_17
PIXf5_41_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_41_17
PIXf5_42_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_42_17
PIXf5_43_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x20a
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x8f
 mov eax, 1
 call PCJMP_f5
BBf5_522: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x124
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_43_17
PIXf5_44_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_534: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_44_17
PIXf5_45_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_45_17
PIXf5_46_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_46_17
PIXf5_47_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_557: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_47_17
PIXf5_48_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_572: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 jmp PIXf5_48_17
PIXf5_49_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x247
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f5
BBf5_583: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_49_17
PIXf5_50_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_50_17
PIXf5_51_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_615: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_51_17
PIXf5_0_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_0_18
PIXf5_1_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_15: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_1_18
PIXf5_2_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_2_18
PIXf5_3_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_18
PIXf5_4_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_4_18
PIXf5_5_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_5_18
PIXf5_6_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_6_18
PIXf5_7_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_7_18
PIXf5_8_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_8_18
PIXf5_9_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_18
PIXf5_10_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_18
PIXf5_11_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 jmp PIXf5_11_18
PIXf5_12_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_12_18
PIXf5_13_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xa
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 jmp PIXf5_13_18
PIXf5_14_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_169: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_14_18
PIXf5_15_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_18
PIXf5_16_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_18
PIXf5_17_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_202: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_203: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 jmp PIXf5_17_18
PIXf5_18_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_18_18
PIXf5_19_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], 0x2d
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0xec
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_235: mov dword [reg_a5], 0x1
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_19_18
PIXf5_20_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_20_18
PIXf5_21_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x108
 jmp PIXf5_21_18
PIXf5_22_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x113
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f5
BBf5_275: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_22_18
PIXf5_23_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_23_18
PIXf5_24_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_24_18
PIXf5_25_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x6
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_25_18
PIXf5_26_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_317: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f5
BBf5_318: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f5
BBf5_319: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_26_18
PIXf5_27_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 jmp PIXf5_27_18
PIXf5_28_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x150
 mov eax, 1
 call PCJMP_f5
BBf5_334: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_28_18
PIXf5_29_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_29_18
PIXf5_30_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_30_18
PIXf5_31_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_31_18
PIXf5_32_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_32_18
PIXf5_33_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_33_18
PIXf5_34_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_34_18
PIXf5_35_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_35_18
PIXf5_36_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_36_18
PIXf5_37_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_37_18
PIXf5_38_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_38_18
PIXf5_39_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 jmp PIXf5_39_18
PIXf5_40_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1e0
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_479: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_40_18
PIXf5_41_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_497: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_41_18
PIXf5_42_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 jmp PIXf5_42_18
PIXf5_43_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x20b
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_523: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_43_18
PIXf5_44_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_44_18
PIXf5_45_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_45_18
PIXf5_46_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_46_18
PIXf5_47_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_558: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 jmp PIXf5_47_18
PIXf5_48_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x23d
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_48_18
PIXf5_49_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_584: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_49_18
PIXf5_50_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 jmp PIXf5_50_18
PIXf5_51_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x262
 mov eax, 1
 call PCJMP_f5
BBf5_616: mov eax, ebx
 mov ebx, 0x0
 int 0x80
BBf5_617: nop
 mov eax, dword [reg_d5]
 call PCJMP_f5
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 and dword [reg_d5], 0xffffff
 mov dword [reg_b5], eax
 mov dword [reg_a5], 0x1
 add dword [reg_sp5], 0x1
 call PCJMP_f5
 and dword [reg_sp5], 0xffffff
 call PCJMP_f5
 jmp PIXf5_51_18
PIXf5_0_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0xffffd0
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcf
 and dword [reg_b5], 0xffffff
 jmp PIXf5_0_19
PIXf5_1_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x35
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_1_19
PIXf5_2_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_2_19
PIXf5_3_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_3_19
PIXf5_4_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_4_19
PIXf5_5_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_5_19
PIXf5_6_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_6_19
PIXf5_7_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_7_19
PIXf5_8_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_8_19
PIXf5_9_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
BBf5_102: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 jmp PIXf5_9_19
PIXf5_10_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x6f
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_110: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_10_19
PIXf5_11_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_11_19
PIXf5_12_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xa
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_12_19
PIXf5_13_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov edi, 0x97
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_150: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x30
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_13_19
PIXf5_14_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_170: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_14_19
PIXf5_15_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_15_19
PIXf5_16_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_19
PIXf5_17_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_204: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_17_19
PIXf5_18_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xda
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f5
BBf5_218: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_18_19
PIXf5_19_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_19_19
PIXf5_20_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x10
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_248: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_20_19
PIXf5_21_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xba
 mov eax, 1
 call PCJMP_f5
BBf5_264: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x10a
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_265: mov dword [reg_a5], 0x41
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_21_19
PIXf5_22_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_22_19
PIXf5_23_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_23_19
PIXf5_24_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_24_19
PIXf5_25_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x136
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_309: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_25_19
PIXf5_26_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x5
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov dword [reg_a5], 0x140
 mov eax, dword [reg_sp5]
 jmp PIXf5_26_19
PIXf5_27_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_27_19
PIXf5_28_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x150
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_335: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 jmp PIXf5_28_19
PIXf5_29_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_29_19
PIXf5_30_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_30_19
PIXf5_31_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_31_19
PIXf5_32_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_32_19
PIXf5_33_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_33_19
PIXf5_34_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_34_19
PIXf5_35_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_35_19
PIXf5_36_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_36_19
PIXf5_37_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_37_19
PIXf5_38_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 sub dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_38_19
PIXf5_39_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setne al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1d2
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_465: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 jmp PIXf5_39_19
PIXf5_40_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_40_19
PIXf5_41_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_41_19
PIXf5_42_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x5
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x5
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 jmp PIXf5_42_19
PIXf5_43_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x20c
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_524: mov eax, dword [reg_b5]
 jmp PIXf5_43_19
PIXf5_44_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 jmp PIXf5_44_19
PIXf5_45_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_45_19
PIXf5_46_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_46_19
PIXf5_47_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_559: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov dword [reg_b5], 0x13c
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_47_19
PIXf5_48_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_573: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_574: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_48_19
PIXf5_49_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_585: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov dword [reg_b5], 0x13f
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_49_19
PIXf5_50_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov edi, 0x25d
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_597: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x256
 jmp PIXf5_50_19
PIXf5_51_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 mov eax, 1
 mov eax, dword [reg_a5]
 mov dword [reg_a5], eax
 mov eax, 1
 mov eax, dword [mem + 4*eax]
 and dword [reg_sp5], 0xffffff
 int 0x80
 mov dword [reg_a5], eax
 mov dword [reg_b5], eax
 call PCJMP_f5
 mov eax, dword [reg_sp5]
 add dword [reg_sp5], 0x1
 mov eax, dword [reg_a5]
 and dword [reg_d5], 0xffffff
 add dword [reg_b5], 0x2
 mov dword [reg_a5], eax
 mov eax, 1
 mov eax, dword [reg_a5]
 and dword [reg_b5], 0xffffff
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 mov eax, dword [mem + 4*eax]
 mov dword [reg_bp5], eax
 jmp PIXf5_51_19
PIXf5_0_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_0_20
PIXf5_1_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x11
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_16: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 jmp PIXf5_1_20
PIXf5_2_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_2_20
PIXf5_3_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 jmp PIXf5_3_20
PIXf5_4_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_4_20
PIXf5_5_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x1
 mov edi, 0x33
 mov eax, 1
 call PCJMP_f5
BBf5_50: mov dword [reg_a5], 0x0
BBf5_51: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_5_20
PIXf5_6_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x43
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_66: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_6_20
PIXf5_7_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 jmp PIXf5_7_20
PIXf5_8_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
BBf5_94: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x18
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_8_20
PIXf5_9_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x5e
 mov eax, 1
 call PCJMP_f5
BBf5_103: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_9_20
PIXf5_10_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 jmp PIXf5_10_20
PIXf5_11_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x7b
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_122: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 jmp PIXf5_11_20
PIXf5_12_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x8b
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_12_20
PIXf5_13_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov edi, 0x98
 mov eax, 1
 call PCJMP_f5
BBf5_151: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_13_20
PIXf5_14_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_171: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov dword [reg_a5], 0x30
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_14_20
PIXf5_15_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x0
 jmp PIXf5_15_20
PIXf5_16_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_185: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_186: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_16_20
PIXf5_17_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xcd
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_17_20
PIXf5_18_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xdb
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f5
BBf5_219: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_18_20
PIXf5_19_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0xee
 mov eax, 1
 call PCJMP_f5
BBf5_236: mov dword [reg_a5], 0x0
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 jmp PIXf5_19_20
PIXf5_20_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0xfd
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_249: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_20_20
PIXf5_21_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xa
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov edi, 0x10b
 mov eax, 1
 call PCJMP_f5
BBf5_266: mov dword [reg_a5], 0x61
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_21_20
PIXf5_22_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x116
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_22_20
PIXf5_23_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_284: mov eax, dword [reg_bp5]
 jmp PIXf5_23_20
PIXf5_24_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x0
 mov edi, 0x12a
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_297: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_24_20
PIXf5_25_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_310: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 jmp PIXf5_25_20
PIXf5_26_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, dword [reg_c5]
 mov eax, 1
 call PCJMP_f5
BBf5_320: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 jmp PIXf5_26_20
PIXf5_27_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_27_20
PIXf5_28_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_336: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_28_20
PIXf5_29_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_29_20
PIXf5_30_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x159
 mov eax, 1
 call PCJMP_f5
BBf5_350: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_30_20
PIXf5_31_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_31_20
PIXf5_32_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_32_20
PIXf5_33_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 jmp PIXf5_33_20
PIXf5_34_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x1a0
 mov eax, 1
 call PCJMP_f5
BBf5_422: mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_34_20
PIXf5_35_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_35_20
PIXf5_36_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_36_20
PIXf5_37_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 jmp PIXf5_37_20
PIXf5_38_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 jmp PIXf5_38_20
PIXf5_39_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 jmp PIXf5_39_20
PIXf5_40_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 jmp PIXf5_40_20
PIXf5_41_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, 0x215
 mov eax, 1
 call PCJMP_f5
BBf5_498: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 jmp PIXf5_41_20
PIXf5_42_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x205
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_42_20
PIXf5_43_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x129
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x20d
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x81
 mov eax, 1
 jmp PIXf5_43_20
PIXf5_44_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 jmp PIXf5_44_20
PIXf5_45_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_542: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0x3
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 jmp PIXf5_45_20
PIXf5_46_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x223
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_547: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 jmp PIXf5_46_20
PIXf5_47_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_560: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_47_20
PIXf5_48_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_b5], 0x13f
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_48_20
PIXf5_49_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_49_20
PIXf5_50_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f5
BBf5_598: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_50_20
PIXf5_51_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
 mov eax, dword [mem + 4*eax]
 mov eax, dword [reg_sp5]
 mov eax, dword [reg_sp5]
 mov dword [reg_a5], eax
 mov dword [reg_d5], eax
 add dword [reg_b5], 0x3
 call PCJMP_f5
 mov eax, dword [mem + 4*eax]
 cmp dword [reg_a5], 0x0
 mov eax, 1
 add dword [reg_sp5], 0x1
 mov dword [reg_b5], eax
 mov dword [reg_a5], eax
 mov eax, 1
 mov dword [reg_d5], eax
 add dword [reg_sp5], 0x1
 mov eax, dword [reg_d5]
 and dword [reg_a5], 0xffffff
 call PCJMP_f5
 mov eax, dword [mem + 4*eax]
 call PCJMP_f5
 sub dword [reg_sp5], 0x35
 mov eax, dword [reg_bp5]
 mov eax, dword [reg_a5]
 jmp PIXf5_51_20
PIXf5_0_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 jmp PIXf5_0_21
PIXf5_1_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_1_21
PIXf5_2_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 mov edi, 0x18
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_23: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_2_21
PIXf5_3_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_3_21
PIXf5_4_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x27
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_4_21
PIXf5_5_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_5_21
PIXf5_6_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_6_21
PIXf5_7_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 jmp PIXf5_7_21
PIXf5_8_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x60
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_95: mov edi, 0x61
 mov eax, 1
 call PCJMP_f5
BBf5_96: mov edi, 0x67
 mov eax, 1
 call PCJMP_f5
BBf5_97: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 jmp PIXf5_8_21
PIXf5_9_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_104: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 jmp PIXf5_9_21
PIXf5_10_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x1
 mov edi, 0x70
 mov eax, 1
 call PCJMP_f5
BBf5_111: mov dword [reg_a5], 0x0
BBf5_112: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x72
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_113: mov eax, dword [reg_bp5]
 jmp PIXf5_10_21
PIXf5_11_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 jmp PIXf5_11_21
PIXf5_12_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f5
BBf5_139: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_12_21
PIXf5_13_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xa
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x61
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_13_21
PIXf5_14_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x0
 mov edi, 0xad
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_172: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_14_21
PIXf5_15_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0xb3
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_178: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x66
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_15_21
PIXf5_16_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov dword [reg_a5], 0x41
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 jmp PIXf5_16_21
PIXf5_17_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f5
BBf5_205: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_b5], 0x1
 mov edi, 0xd1
 cmp dword [reg_a5], 0x0
 setne al
 call PCJMP_f5
BBf5_206: mov dword [reg_a5], 0x20
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_17_21
PIXf5_18_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_220: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_18_21
PIXf5_19_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x2b
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_19_21
PIXf5_20_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x30
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0xfb
 cmp dword [reg_a5], 0x0
 sete  al
 jmp PIXf5_20_21
PIXf5_21_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0xa
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
BBf5_267: mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 jmp PIXf5_21_21
PIXf5_22_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_276: mov dword [reg_a5], 0x1
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffa
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 jmp PIXf5_22_21
PIXf5_23_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_23_21
PIXf5_24_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_24_21
PIXf5_25_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_25_21
PIXf5_26_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x8000
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_26_21
PIXf5_27_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 jmp PIXf5_27_21
PIXf5_28_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_28_21
PIXf5_29_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 jmp PIXf5_29_21
PIXf5_30_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_351: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_352: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 jmp PIXf5_30_21
PIXf5_31_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_366: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_367: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 jmp PIXf5_31_21
PIXf5_32_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_386: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 jmp PIXf5_32_21
PIXf5_33_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_405: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov edi, 0x197
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_406: mov edi, 0x198
 mov eax, 1
 call PCJMP_f5
BBf5_407: mov edi, 0x19d
 mov eax, 1
 call PCJMP_f5
BBf5_408: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_33_21
PIXf5_34_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_423: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 jmp PIXf5_34_21
PIXf5_35_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setne al
 jmp PIXf5_35_21
PIXf5_36_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 jmp PIXf5_36_21
PIXf5_37_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1ca
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_455: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 jmp PIXf5_37_21
PIXf5_38_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 jmp PIXf5_38_21
PIXf5_39_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 jmp PIXf5_39_21
PIXf5_40_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_480: mov edi, 0x1db
 mov eax, 1
 call PCJMP_f5
BBf5_481: mov edi, 0x1e3
 mov eax, 1
 call PCJMP_f5
BBf5_482: mov edi, 0x1e4
 mov eax, 1
 call PCJMP_f5
BBf5_483: mov edi, 0x1d9
 mov eax, 1
 call PCJMP_f5
BBf5_484: mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 jmp PIXf5_40_21
PIXf5_41_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 jmp PIXf5_41_21
PIXf5_42_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x92
 mov eax, 1
 call PCJMP_f5
BBf5_517: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f5
BBf5_518: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x5
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_a5], 0x1
 jmp PIXf5_42_21
PIXf5_43_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_525: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_526: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_43_21
PIXf5_44_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_535: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_44_21
PIXf5_45_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 jmp PIXf5_45_21
PIXf5_46_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffeff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_46_21
PIXf5_47_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_561: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 jmp PIXf5_47_21
PIXf5_48_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 jmp PIXf5_48_21
PIXf5_49_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x24b
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_586: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 jmp PIXf5_49_21
PIXf5_50_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x1
 jmp PIXf5_50_21
PIXf5_51_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [mem + 4*ecx], eax
 mov ecx, dword [reg_d5]
 mov dword [reg_d5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [reg_sp5]
 mov eax, 1
 mov eax, dword [reg_a5]
 mov eax, dword [reg_sp5]
 mov eax, dword [reg_sp5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, 1
 and dword [reg_sp5], 0xffffff
 call PCJMP_f5
 mov eax, dword [reg_a5]
 call PCJMP_f5
 mov eax, dword [mem + 4*eax]
 mov eax, 1
 mov eax, dword [reg_sp5]
 mov eax, 1
 mov eax, dword [reg_a5]
 mov eax, dword [reg_a5]
 jmp PIXf5_51_21
PIXf5_0_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffce
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov esi, 1
 jmp PIX_END_f5
PIXf5_1_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_17: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov esi, 2
 jmp PIX_END_f5
PIXf5_2_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 mov esi, 3
 jmp PIX_END_f5
PIXf5_3_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1f
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_30: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffcb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov esi, 4
 jmp PIX_END_f5
PIXf5_4_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f5
BBf5_39: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x3
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov esi, 5
 jmp PIX_END_f5
PIXf5_5_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x35
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_52: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov esi, 6
 jmp PIX_END_f5
PIXf5_6_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x1
 mov edi, 0x44
 mov eax, 1
 call PCJMP_f5
BBf5_67: mov dword [reg_a5], 0x0
BBf5_68: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov esi, 7
 jmp PIX_END_f5
PIXf5_7_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x54
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_83: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 mov esi, 8
 jmp PIX_END_f5
PIXf5_8_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 mov esi, 9
 jmp PIX_END_f5
PIXf5_9_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_105: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x4
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov esi, 10
 jmp PIX_END_f5
PIXf5_10_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov esi, 11
 jmp PIX_END_f5
PIXf5_11_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a5], 0x1
 mov edi, 0x7c
 mov eax, 1
 call PCJMP_f5
BBf5_123: mov dword [reg_a5], 0x0
BBf5_124: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 mov esi, 12
 jmp PIX_END_f5
PIXf5_12_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x8d
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_140: mov edi, 0x89
 mov eax, 1
 call PCJMP_f5
BBf5_141: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov esi, 13
 jmp PIX_END_f5
PIXf5_13_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
BBf5_152: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov esi, 14
 jmp PIX_END_f5
PIXf5_14_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x39
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 mov esi, 15
 jmp PIX_END_f5
PIXf5_15_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_179: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 cmp dword [reg_b5], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b5], eax
BBf5_180: mov eax, dword [reg_b5]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x1
 mov esi, 16
 jmp PIX_END_f5
PIXf5_16_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x0
 mov edi, 0xbc
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_187: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov esi, 17
 jmp PIX_END_f5
PIXf5_17_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setbe al
 movzx eax, al
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x0
 mov edi, 0xd0
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_207: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 mov esi, 18
 jmp PIX_END_f5
PIXf5_18_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_221: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov esi, 19
 jmp PIX_END_f5
PIXf5_19_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0xee
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_237: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov esi, 20
 jmp PIX_END_f5
PIXf5_20_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_250: mov dword [reg_a5], 0x8
 mov edi, 0xfc
 mov eax, 1
 call PCJMP_f5
BBf5_251: mov dword [reg_a5], 0xa
BBf5_252: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_253: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x101
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_254: mov dword [reg_a5], 0x0
 mov esi, 21
 jmp PIX_END_f5
PIXf5_21_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f5
BBf5_268: mov edi, 0x117
 mov eax, 1
 call PCJMP_f5
BBf5_269: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov esi, 22
 jmp PIX_END_f5
PIXf5_22_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 mov esi, 23
 jmp PIX_END_f5
PIXf5_23_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_285: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_286: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov esi, 24
 jmp PIX_END_f5
PIXf5_24_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov esi, 25
 jmp PIX_END_f5
PIXf5_25_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x2
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov esi, 26
 jmp PIX_END_f5
PIXf5_26_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 setb  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x142
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_321: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov esi, 27
 jmp PIX_END_f5
PIXf5_27_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffa
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov esi, 28
 jmp PIX_END_f5
PIXf5_28_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 add dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffd
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffc
 and dword [reg_b5], 0xffffff
 mov esi, 29
 jmp PIX_END_f5
PIXf5_29_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x155
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0xf
 mov esi, 30
 jmp PIX_END_f5
PIXf5_30_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_353: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov esi, 31
 jmp PIX_END_f5
PIXf5_31_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
BBf5_368: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 mov esi, 32
 jmp PIX_END_f5
PIXf5_32_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_387: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
BBf5_388: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 mov esi, 33
 jmp PIX_END_f5
PIXf5_33_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov esi, 34
 jmp PIX_END_f5
PIXf5_34_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_424: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 sub dword [reg_sp5], 0x2
 and dword [reg_sp5], 0xffffff
 mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov esi, 35
 jmp PIX_END_f5
PIXf5_35_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1b4
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_435: mov edi, 0x1b5
 mov eax, 1
 call PCJMP_f5
BBf5_436: mov edi, 0x1b8
 mov eax, 1
 call PCJMP_f5
BBf5_437: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov esi, 36
 jmp PIX_END_f5
PIXf5_36_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_c5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_c5]
 mov dword [reg_a5], eax
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_a5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
BBf5_448: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 mov esi, 37
 jmp PIX_END_f5
PIXf5_37_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 add dword [reg_a5], 0x1
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xfffffe
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov esi, 38
 jmp PIX_END_f5
PIXf5_38_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_461: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
 mov esi, 39
 jmp PIX_END_f5
PIXf5_39_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffff
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_b5]
 mov ecx, dword [reg_d5]
 mov esi, 40
 jmp PIX_END_f5
PIXf5_40_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_485: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov esi, 41
 jmp PIX_END_f5
PIXf5_41_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], 0x6c
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x1f4
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_499: mov edi, 0x201
 mov eax, 1
 call PCJMP_f5
BBf5_500: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdb
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov esi, 42
 jmp PIX_END_f5
PIXf5_42_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x5
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0xffffdc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f5
BBf5_519: mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 mov esi, 43
 jmp PIX_END_f5
PIXf5_43_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0xffffdc
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov dword [reg_a5], 0x20f
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov edi, 0x168
 mov esi, 44
 jmp PIX_END_f5
PIXf5_44_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_536: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x4
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov esi, 45
 jmp PIX_END_f5
PIXf5_45_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b5], 0x3
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_b5], eax
 add dword [reg_b5], 0x2
 and dword [reg_b5], 0xffffff
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov esi, 46
 jmp PIX_END_f5
PIXf5_46_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_548: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_549: mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_bp5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d5]
 mov esi, 47
 jmp PIX_END_f5
PIXf5_47_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 call PCJMP_f5
BBf5_562: mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 mov esi, 48
 jmp PIX_END_f5
PIXf5_48_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x244
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_575: mov dword [reg_b5], 0x140
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov edi, 0x241
 cmp dword [reg_a5], 0x0
 sete  al
 call PCJMP_f5
BBf5_576: mov dword [reg_a5], 0x0
 mov eax, dword [reg_sp5]
 mov dword [reg_d5], eax
 add dword [reg_d5], 0xffffff
 and dword [reg_d5], 0xffffff
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_d5]
 mov dword [mem + 4*ecx], eax
 mov esi, 49
 jmp PIX_END_f5
PIXf5_49_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 mov dword [reg_b5], 0x13f
 mov eax, dword [reg_a5]
 mov ecx, dword [reg_b5]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_bp5]
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_bp5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov edi, dword [reg_a5]
 mov eax, 1
 mov esi, 50
 jmp PIX_END_f5
PIXf5_50_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 sub dword [reg_a5], eax
 and dword [reg_a5], 0xffffff
 mov eax, dword [reg_a5]
 mov dword [reg_b5], eax
 mov eax, dword [reg_sp5]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a5], eax
 add dword [reg_sp5], 0x1
 and dword [reg_sp5], 0xffffff
 mov eax, dword [reg_b5]
 cmp dword [reg_a5], eax
 sete  al
 movzx eax, al
 mov dword [reg_a5], eax
 mov edi, 0x25a
 cmp dword [reg_a5], 0x0
 sete  al
 mov esi, 51
 jmp PIX_END_f5
PIXf5_51_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a5], eax
 mov dword [reg_a5], eax
 mov eax, dword [reg_bp5]
 and dword [reg_b5], 0xffffff
 add dword [reg_sp5], 0x1
 mov dword [reg_sp5], eax
 mov eax, dword [reg_sp5]
 mov eax, 1
 mov eax, dword [mem + 4*eax]
 mov dword [reg_d5], eax
 mov eax, 1
 mov eax, dword [reg_sp5]
 mov dword [reg_sp5], eax
 mov dword [reg_d5], eax
 and dword [reg_b5], 0xffffff
 mov ecx, dword [reg_b5]
 mov eax, 1
 and dword [reg_b5], 0xffffff
 mov eax, 1
 mov eax, dword [reg_bp5]
 mov edi, 0x12e
 mov dword [reg_b5], 0x1
 and dword [reg_d5], 0xffffff
 mov dword [reg_bp5], eax
 mov esi, 52
 jmp PIX_END_f5
PIX_PAD_f5_0: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_1
PIX_PAD_f5_1: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_2
PIX_PAD_f5_2: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_3
PIX_PAD_f5_3: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_4
PIX_PAD_f5_4: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_5
PIX_PAD_f5_5: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_6
PIX_PAD_f5_6: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_7
PIX_PAD_f5_7: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_8
PIX_PAD_f5_8: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_9
PIX_PAD_f5_9: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_10
PIX_PAD_f5_10: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_11
PIX_PAD_f5_11: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_12
PIX_PAD_f5_12: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_13
PIX_PAD_f5_13: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_14
PIX_PAD_f5_14: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_15
PIX_PAD_f5_15: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_16
PIX_PAD_f5_16: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_17
PIX_PAD_f5_17: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_18
PIX_PAD_f5_18: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_19
PIX_PAD_f5_19: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_20
PIX_PAD_f5_20: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_21
PIX_PAD_f5_21: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_END_f5
PIX_END_f5:
jmp PIX_START_f5
PIX_TABLE_f5:
 dd PIXf5_0_0
 dd PIXf5_1_0
 dd PIXf5_2_0
 dd PIXf5_3_0
 dd PIXf5_4_0
 dd PIXf5_5_0
 dd PIXf5_6_0
 dd PIXf5_7_0
 dd PIXf5_8_0
 dd PIXf5_9_0
 dd PIXf5_10_0
 dd PIXf5_11_0
 dd PIXf5_12_0
 dd PIXf5_13_0
 dd PIXf5_14_0
 dd PIXf5_15_0
 dd PIXf5_16_0
 dd PIXf5_17_0
 dd PIXf5_18_0
 dd PIXf5_19_0
 dd PIXf5_20_0
 dd PIXf5_21_0
 dd PIXf5_22_0
 dd PIXf5_23_0
 dd PIXf5_24_0
 dd PIXf5_25_0
 dd PIXf5_26_0
 dd PIXf5_27_0
 dd PIXf5_28_0
 dd PIXf5_29_0
 dd PIXf5_30_0
 dd PIXf5_31_0
 dd PIXf5_32_0
 dd PIXf5_33_0
 dd PIXf5_34_0
 dd PIXf5_35_0
 dd PIXf5_36_0
 dd PIXf5_37_0
 dd PIXf5_38_0
 dd PIXf5_39_0
 dd PIXf5_40_0
 dd PIXf5_41_0
 dd PIXf5_42_0
 dd PIXf5_43_0
 dd PIXf5_44_0
 dd PIXf5_45_0
 dd PIXf5_46_0
 dd PIXf5_47_0
 dd PIXf5_48_0
 dd PIXf5_49_0
 dd PIXf5_50_0
 dd PIXf5_51_0
 dd PIX_PAD_f5_0
JMP_TABLE_f5:
 dd BBf5_0 + 0x10000001
 dd BBf5_1 + 0x10000001
 dd BBf5_2 + 0x10000001
 dd BBf5_3 + 0x10000001
 dd BBf5_4 + 0x10000001
 dd BBf5_5 + 0x10000001
 dd BBf5_6 + 0x10000001
 dd BBf5_7 + 0x10000001
 dd BBf5_8 + 0x10000001
 dd BBf5_9 + 0x10000001
 dd BBf5_10 + 0x10000001
 dd BBf5_11 + 0x10000001
 dd BBf5_12 + 0x10000001
 dd BBf5_13 + 0x10000001
 dd BBf5_14 + 0x10000001
 dd BBf5_15 + 0x10000001
 dd BBf5_16 + 0x10000001
 dd BBf5_17 + 0x10000001
 dd BBf5_18 + 0x10000001
 dd BBf5_19 + 0x10000001
 dd BBf5_20 + 0x10000001
 dd BBf5_21 + 0x10000001
 dd BBf5_22 + 0x10000001
 dd BBf5_23 + 0x10000001
 dd BBf5_24 + 0x10000001
 dd BBf5_25 + 0x10000001
 dd BBf5_26 + 0x10000001
 dd BBf5_27 + 0x10000001
 dd BBf5_28 + 0x10000001
 dd BBf5_29 + 0x10000001
 dd BBf5_30 + 0x10000001
 dd BBf5_31 + 0x10000001
 dd BBf5_32 + 0x10000001
 dd BBf5_33 + 0x10000001
 dd BBf5_34 + 0x10000001
 dd BBf5_35 + 0x10000001
 dd BBf5_36 + 0x10000001
 dd BBf5_37 + 0x10000001
 dd BBf5_38 + 0x10000001
 dd BBf5_39 + 0x10000001
 dd BBf5_40 + 0x10000001
 dd BBf5_41 + 0x10000001
 dd BBf5_42 + 0x10000001
 dd BBf5_43 + 0x10000001
 dd BBf5_44 + 0x10000001
 dd BBf5_45 + 0x10000001
 dd BBf5_46 + 0x10000001
 dd BBf5_47 + 0x10000001
 dd BBf5_48 + 0x10000001
 dd BBf5_49 + 0x10000001
 dd BBf5_50 + 0x10000001
 dd BBf5_51 + 0x10000001
 dd BBf5_52 + 0x10000001
 dd BBf5_53 + 0x10000001
 dd BBf5_54 + 0x10000001
 dd BBf5_55 + 0x10000001
 dd BBf5_56 + 0x10000001
 dd BBf5_57 + 0x10000001
 dd BBf5_58 + 0x10000001
 dd BBf5_59 + 0x10000001
 dd BBf5_60 + 0x10000001
 dd BBf5_61 + 0x10000001
 dd BBf5_62 + 0x10000001
 dd BBf5_63 + 0x10000001
 dd BBf5_64 + 0x10000001
 dd BBf5_65 + 0x10000001
 dd BBf5_66 + 0x10000001
 dd BBf5_67 + 0x10000001
 dd BBf5_68 + 0x10000001
 dd BBf5_69 + 0x10000001
 dd BBf5_70 + 0x10000001
 dd BBf5_71 + 0x10000001
 dd BBf5_72 + 0x10000001
 dd BBf5_73 + 0x10000001
 dd BBf5_74 + 0x10000001
 dd BBf5_75 + 0x10000001
 dd BBf5_76 + 0x10000001
 dd BBf5_77 + 0x10000001
 dd BBf5_78 + 0x10000001
 dd BBf5_79 + 0x10000001
 dd BBf5_80 + 0x10000001
 dd BBf5_81 + 0x10000001
 dd BBf5_82 + 0x10000001
 dd BBf5_83 + 0x10000001
 dd BBf5_84 + 0x10000001
 dd BBf5_85 + 0x10000001
 dd BBf5_86 + 0x10000001
 dd BBf5_87 + 0x10000001
 dd BBf5_88 + 0x10000001
 dd BBf5_89 + 0x10000001
 dd BBf5_90 + 0x10000001
 dd BBf5_91 + 0x10000001
 dd BBf5_92 + 0x10000001
 dd BBf5_93 + 0x10000001
 dd BBf5_94 + 0x10000001
 dd BBf5_95 + 0x10000001
 dd BBf5_96 + 0x10000001
 dd BBf5_97 + 0x10000001
 dd BBf5_98 + 0x10000001
 dd BBf5_99 + 0x10000001
 dd BBf5_100 + 0x10000001
 dd BBf5_101 + 0x10000001
 dd BBf5_102 + 0x10000001
 dd BBf5_103 + 0x10000001
 dd BBf5_104 + 0x10000001
 dd BBf5_105 + 0x10000001
 dd BBf5_106 + 0x10000001
 dd BBf5_107 + 0x10000001
 dd BBf5_108 + 0x10000001
 dd BBf5_109 + 0x10000001
 dd BBf5_110 + 0x10000001
 dd BBf5_111 + 0x10000001
 dd BBf5_112 + 0x10000001
 dd BBf5_113 + 0x10000001
 dd BBf5_114 + 0x10000001
 dd BBf5_115 + 0x10000001
 dd BBf5_116 + 0x10000001
 dd BBf5_117 + 0x10000001
 dd BBf5_118 + 0x10000001
 dd BBf5_119 + 0x10000001
 dd BBf5_120 + 0x10000001
 dd BBf5_121 + 0x10000001
 dd BBf5_122 + 0x10000001
 dd BBf5_123 + 0x10000001
 dd BBf5_124 + 0x10000001
 dd BBf5_125 + 0x10000001
 dd BBf5_126 + 0x10000001
 dd BBf5_127 + 0x10000001
 dd BBf5_128 + 0x10000001
 dd BBf5_129 + 0x10000001
 dd BBf5_130 + 0x10000001
 dd BBf5_131 + 0x10000001
 dd BBf5_132 + 0x10000001
 dd BBf5_133 + 0x10000001
 dd BBf5_134 + 0x10000001
 dd BBf5_135 + 0x10000001
 dd BBf5_136 + 0x10000001
 dd BBf5_137 + 0x10000001
 dd BBf5_138 + 0x10000001
 dd BBf5_139 + 0x10000001
 dd BBf5_140 + 0x10000001
 dd BBf5_141 + 0x10000001
 dd BBf5_142 + 0x10000001
 dd BBf5_143 + 0x10000001
 dd BBf5_144 + 0x10000001
 dd BBf5_145 + 0x10000001
 dd BBf5_146 + 0x10000001
 dd BBf5_147 + 0x10000001
 dd BBf5_148 + 0x10000001
 dd BBf5_149 + 0x10000001
 dd BBf5_150 + 0x10000001
 dd BBf5_151 + 0x10000001
 dd BBf5_152 + 0x10000001
 dd BBf5_153 + 0x10000001
 dd BBf5_154 + 0x10000001
 dd BBf5_155 + 0x10000001
 dd BBf5_156 + 0x10000001
 dd BBf5_157 + 0x10000001
 dd BBf5_158 + 0x10000001
 dd BBf5_159 + 0x10000001
 dd BBf5_160 + 0x10000001
 dd BBf5_161 + 0x10000001
 dd BBf5_162 + 0x10000001
 dd BBf5_163 + 0x10000001
 dd BBf5_164 + 0x10000001
 dd BBf5_165 + 0x10000001
 dd BBf5_166 + 0x10000001
 dd BBf5_167 + 0x10000001
 dd BBf5_168 + 0x10000001
 dd BBf5_169 + 0x10000001
 dd BBf5_170 + 0x10000001
 dd BBf5_171 + 0x10000001
 dd BBf5_172 + 0x10000001
 dd BBf5_173 + 0x10000001
 dd BBf5_174 + 0x10000001
 dd BBf5_175 + 0x10000001
 dd BBf5_176 + 0x10000001
 dd BBf5_177 + 0x10000001
 dd BBf5_178 + 0x10000001
 dd BBf5_179 + 0x10000001
 dd BBf5_180 + 0x10000001
 dd BBf5_181 + 0x10000001
 dd BBf5_182 + 0x10000001
 dd BBf5_183 + 0x10000001
 dd BBf5_184 + 0x10000001
 dd BBf5_185 + 0x10000001
 dd BBf5_186 + 0x10000001
 dd BBf5_187 + 0x10000001
 dd BBf5_188 + 0x10000001
 dd BBf5_189 + 0x10000001
 dd BBf5_190 + 0x10000001
 dd BBf5_191 + 0x10000001
 dd BBf5_192 + 0x10000001
 dd BBf5_193 + 0x10000001
 dd BBf5_194 + 0x10000001
 dd BBf5_195 + 0x10000001
 dd BBf5_196 + 0x10000001
 dd BBf5_197 + 0x10000001
 dd BBf5_198 + 0x10000001
 dd BBf5_199 + 0x10000001
 dd BBf5_200 + 0x10000001
 dd BBf5_201 + 0x10000001
 dd BBf5_202 + 0x10000001
 dd BBf5_203 + 0x10000001
 dd BBf5_204 + 0x10000001
 dd BBf5_205 + 0x10000001
 dd BBf5_206 + 0x10000001
 dd BBf5_207 + 0x10000001
 dd BBf5_208 + 0x10000001
 dd BBf5_209 + 0x10000001
 dd BBf5_210 + 0x10000001
 dd BBf5_211 + 0x10000001
 dd BBf5_212 + 0x10000001
 dd BBf5_213 + 0x10000001
 dd BBf5_214 + 0x10000001
 dd BBf5_215 + 0x10000001
 dd BBf5_216 + 0x10000001
 dd BBf5_217 + 0x10000001
 dd BBf5_218 + 0x10000001
 dd BBf5_219 + 0x10000001
 dd BBf5_220 + 0x10000001
 dd BBf5_221 + 0x10000001
 dd BBf5_222 + 0x10000001
 dd BBf5_223 + 0x10000001
 dd BBf5_224 + 0x10000001
 dd BBf5_225 + 0x10000001
 dd BBf5_226 + 0x10000001
 dd BBf5_227 + 0x10000001
 dd BBf5_228 + 0x10000001
 dd BBf5_229 + 0x10000001
 dd BBf5_230 + 0x10000001
 dd BBf5_231 + 0x10000001
 dd BBf5_232 + 0x10000001
 dd BBf5_233 + 0x10000001
 dd BBf5_234 + 0x10000001
 dd BBf5_235 + 0x10000001
 dd BBf5_236 + 0x10000001
 dd BBf5_237 + 0x10000001
 dd BBf5_238 + 0x10000001
 dd BBf5_239 + 0x10000001
 dd BBf5_240 + 0x10000001
 dd BBf5_241 + 0x10000001
 dd BBf5_242 + 0x10000001
 dd BBf5_243 + 0x10000001
 dd BBf5_244 + 0x10000001
 dd BBf5_245 + 0x10000001
 dd BBf5_246 + 0x10000001
 dd BBf5_247 + 0x10000001
 dd BBf5_248 + 0x10000001
 dd BBf5_249 + 0x10000001
 dd BBf5_250 + 0x10000001
 dd BBf5_251 + 0x10000001
 dd BBf5_252 + 0x10000001
 dd BBf5_253 + 0x10000001
 dd BBf5_254 + 0x10000001
 dd BBf5_255 + 0x10000001
 dd BBf5_256 + 0x10000001
 dd BBf5_257 + 0x10000001
 dd BBf5_258 + 0x10000001
 dd BBf5_259 + 0x10000001
 dd BBf5_260 + 0x10000001
 dd BBf5_261 + 0x10000001
 dd BBf5_262 + 0x10000001
 dd BBf5_263 + 0x10000001
 dd BBf5_264 + 0x10000001
 dd BBf5_265 + 0x10000001
 dd BBf5_266 + 0x10000001
 dd BBf5_267 + 0x10000001
 dd BBf5_268 + 0x10000001
 dd BBf5_269 + 0x10000001
 dd BBf5_270 + 0x10000001
 dd BBf5_271 + 0x10000001
 dd BBf5_272 + 0x10000001
 dd BBf5_273 + 0x10000001
 dd BBf5_274 + 0x10000001
 dd BBf5_275 + 0x10000001
 dd BBf5_276 + 0x10000001
 dd BBf5_277 + 0x10000001
 dd BBf5_278 + 0x10000001
 dd BBf5_279 + 0x10000001
 dd BBf5_280 + 0x10000001
 dd BBf5_281 + 0x10000001
 dd BBf5_282 + 0x10000001
 dd BBf5_283 + 0x10000001
 dd BBf5_284 + 0x10000001
 dd BBf5_285 + 0x10000001
 dd BBf5_286 + 0x10000001
 dd BBf5_287 + 0x10000001
 dd BBf5_288 + 0x10000001
 dd BBf5_289 + 0x10000001
 dd BBf5_290 + 0x10000001
 dd BBf5_291 + 0x10000001
 dd BBf5_292 + 0x10000001
 dd BBf5_293 + 0x10000001
 dd BBf5_294 + 0x10000001
 dd BBf5_295 + 0x10000001
 dd BBf5_296 + 0x10000001
 dd BBf5_297 + 0x10000001
 dd BBf5_298 + 0x10000001
 dd BBf5_299 + 0x10000001
 dd BBf5_300 + 0x10000001
 dd BBf5_301 + 0x10000001
 dd BBf5_302 + 0x10000001
 dd BBf5_303 + 0x10000001
 dd BBf5_304 + 0x10000001
 dd BBf5_305 + 0x10000001
 dd BBf5_306 + 0x10000001
 dd BBf5_307 + 0x10000001
 dd BBf5_308 + 0x10000001
 dd BBf5_309 + 0x10000001
 dd BBf5_310 + 0x10000001
 dd BBf5_311 + 0x10000001
 dd BBf5_312 + 0x10000001
 dd BBf5_313 + 0x10000001
 dd BBf5_314 + 0x10000001
 dd BBf5_315 + 0x10000001
 dd BBf5_316 + 0x10000001
 dd BBf5_317 + 0x10000001
 dd BBf5_318 + 0x10000001
 dd BBf5_319 + 0x10000001
 dd BBf5_320 + 0x10000001
 dd BBf5_321 + 0x10000001
 dd BBf5_322 + 0x10000001
 dd BBf5_323 + 0x10000001
 dd BBf5_324 + 0x10000001
 dd BBf5_325 + 0x10000001
 dd BBf5_326 + 0x10000001
 dd BBf5_327 + 0x10000001
 dd BBf5_328 + 0x10000001
 dd BBf5_329 + 0x10000001
 dd BBf5_330 + 0x10000001
 dd BBf5_331 + 0x10000001
 dd BBf5_332 + 0x10000001
 dd BBf5_333 + 0x10000001
 dd BBf5_334 + 0x10000001
 dd BBf5_335 + 0x10000001
 dd BBf5_336 + 0x10000001
 dd BBf5_337 + 0x10000001
 dd BBf5_338 + 0x10000001
 dd BBf5_339 + 0x10000001
 dd BBf5_340 + 0x10000001
 dd BBf5_341 + 0x10000001
 dd BBf5_342 + 0x10000001
 dd BBf5_343 + 0x10000001
 dd BBf5_344 + 0x10000001
 dd BBf5_345 + 0x10000001
 dd BBf5_346 + 0x10000001
 dd BBf5_347 + 0x10000001
 dd BBf5_348 + 0x10000001
 dd BBf5_349 + 0x10000001
 dd BBf5_350 + 0x10000001
 dd BBf5_351 + 0x10000001
 dd BBf5_352 + 0x10000001
 dd BBf5_353 + 0x10000001
 dd BBf5_354 + 0x10000001
 dd BBf5_355 + 0x10000001
 dd BBf5_356 + 0x10000001
 dd BBf5_357 + 0x10000001
 dd BBf5_358 + 0x10000001
 dd BBf5_359 + 0x10000001
 dd BBf5_360 + 0x10000001
 dd BBf5_361 + 0x10000001
 dd BBf5_362 + 0x10000001
 dd BBf5_363 + 0x10000001
 dd BBf5_364 + 0x10000001
 dd BBf5_365 + 0x10000001
 dd BBf5_366 + 0x10000001
 dd BBf5_367 + 0x10000001
 dd BBf5_368 + 0x10000001
 dd BBf5_369 + 0x10000001
 dd BBf5_370 + 0x10000001
 dd BBf5_371 + 0x10000001
 dd BBf5_372 + 0x10000001
 dd BBf5_373 + 0x10000001
 dd BBf5_374 + 0x10000001
 dd BBf5_375 + 0x10000001
 dd BBf5_376 + 0x10000001
 dd BBf5_377 + 0x10000001
 dd BBf5_378 + 0x10000001
 dd BBf5_379 + 0x10000001
 dd BBf5_380 + 0x10000001
 dd BBf5_381 + 0x10000001
 dd BBf5_382 + 0x10000001
 dd BBf5_383 + 0x10000001
 dd BBf5_384 + 0x10000001
 dd BBf5_385 + 0x10000001
 dd BBf5_386 + 0x10000001
 dd BBf5_387 + 0x10000001
 dd BBf5_388 + 0x10000001
 dd BBf5_389 + 0x10000001
 dd BBf5_390 + 0x10000001
 dd BBf5_391 + 0x10000001
 dd BBf5_392 + 0x10000001
 dd BBf5_393 + 0x10000001
 dd BBf5_394 + 0x10000001
 dd BBf5_395 + 0x10000001
 dd BBf5_396 + 0x10000001
 dd BBf5_397 + 0x10000001
 dd BBf5_398 + 0x10000001
 dd BBf5_399 + 0x10000001
 dd BBf5_400 + 0x10000001
 dd BBf5_401 + 0x10000001
 dd BBf5_402 + 0x10000001
 dd BBf5_403 + 0x10000001
 dd BBf5_404 + 0x10000001
 dd BBf5_405 + 0x10000001
 dd BBf5_406 + 0x10000001
 dd BBf5_407 + 0x10000001
 dd BBf5_408 + 0x10000001
 dd BBf5_409 + 0x10000001
 dd BBf5_410 + 0x10000001
 dd BBf5_411 + 0x10000001
 dd BBf5_412 + 0x10000001
 dd BBf5_413 + 0x10000001
 dd BBf5_414 + 0x10000001
 dd BBf5_415 + 0x10000001
 dd BBf5_416 + 0x10000001
 dd BBf5_417 + 0x10000001
 dd BBf5_418 + 0x10000001
 dd BBf5_419 + 0x10000001
 dd BBf5_420 + 0x10000001
 dd BBf5_421 + 0x10000001
 dd BBf5_422 + 0x10000001
 dd BBf5_423 + 0x10000001
 dd BBf5_424 + 0x10000001
 dd BBf5_425 + 0x10000001
 dd BBf5_426 + 0x10000001
 dd BBf5_427 + 0x10000001
 dd BBf5_428 + 0x10000001
 dd BBf5_429 + 0x10000001
 dd BBf5_430 + 0x10000001
 dd BBf5_431 + 0x10000001
 dd BBf5_432 + 0x10000001
 dd BBf5_433 + 0x10000001
 dd BBf5_434 + 0x10000001
 dd BBf5_435 + 0x10000001
 dd BBf5_436 + 0x10000001
 dd BBf5_437 + 0x10000001
 dd BBf5_438 + 0x10000001
 dd BBf5_439 + 0x10000001
 dd BBf5_440 + 0x10000001
 dd BBf5_441 + 0x10000001
 dd BBf5_442 + 0x10000001
 dd BBf5_443 + 0x10000001
 dd BBf5_444 + 0x10000001
 dd BBf5_445 + 0x10000001
 dd BBf5_446 + 0x10000001
 dd BBf5_447 + 0x10000001
 dd BBf5_448 + 0x10000001
 dd BBf5_449 + 0x10000001
 dd BBf5_450 + 0x10000001
 dd BBf5_451 + 0x10000001
 dd BBf5_452 + 0x10000001
 dd BBf5_453 + 0x10000001
 dd BBf5_454 + 0x10000001
 dd BBf5_455 + 0x10000001
 dd BBf5_456 + 0x10000001
 dd BBf5_457 + 0x10000001
 dd BBf5_458 + 0x10000001
 dd BBf5_459 + 0x10000001
 dd BBf5_460 + 0x10000001
 dd BBf5_461 + 0x10000001
 dd BBf5_462 + 0x10000001
 dd BBf5_463 + 0x10000001
 dd BBf5_464 + 0x10000001
 dd BBf5_465 + 0x10000001
 dd BBf5_466 + 0x10000001
 dd BBf5_467 + 0x10000001
 dd BBf5_468 + 0x10000001
 dd BBf5_469 + 0x10000001
 dd BBf5_470 + 0x10000001
 dd BBf5_471 + 0x10000001
 dd BBf5_472 + 0x10000001
 dd BBf5_473 + 0x10000001
 dd BBf5_474 + 0x10000001
 dd BBf5_475 + 0x10000001
 dd BBf5_476 + 0x10000001
 dd BBf5_477 + 0x10000001
 dd BBf5_478 + 0x10000001
 dd BBf5_479 + 0x10000001
 dd BBf5_480 + 0x10000001
 dd BBf5_481 + 0x10000001
 dd BBf5_482 + 0x10000001
 dd BBf5_483 + 0x10000001
 dd BBf5_484 + 0x10000001
 dd BBf5_485 + 0x10000001
 dd BBf5_486 + 0x10000001
 dd BBf5_487 + 0x10000001
 dd BBf5_488 + 0x10000001
 dd BBf5_489 + 0x10000001
 dd BBf5_490 + 0x10000001
 dd BBf5_491 + 0x10000001
 dd BBf5_492 + 0x10000001
 dd BBf5_493 + 0x10000001
 dd BBf5_494 + 0x10000001
 dd BBf5_495 + 0x10000001
 dd BBf5_496 + 0x10000001
 dd BBf5_497 + 0x10000001
 dd BBf5_498 + 0x10000001
 dd BBf5_499 + 0x10000001
 dd BBf5_500 + 0x10000001
 dd BBf5_501 + 0x10000001
 dd BBf5_502 + 0x10000001
 dd BBf5_503 + 0x10000001
 dd BBf5_504 + 0x10000001
 dd BBf5_505 + 0x10000001
 dd BBf5_506 + 0x10000001
 dd BBf5_507 + 0x10000001
 dd BBf5_508 + 0x10000001
 dd BBf5_509 + 0x10000001
 dd BBf5_510 + 0x10000001
 dd BBf5_511 + 0x10000001
 dd BBf5_512 + 0x10000001
 dd BBf5_513 + 0x10000001
 dd BBf5_514 + 0x10000001
 dd BBf5_515 + 0x10000001
 dd BBf5_516 + 0x10000001
 dd BBf5_517 + 0x10000001
 dd BBf5_518 + 0x10000001
 dd BBf5_519 + 0x10000001
 dd BBf5_520 + 0x10000001
 dd BBf5_521 + 0x10000001
 dd BBf5_522 + 0x10000001
 dd BBf5_523 + 0x10000001
 dd BBf5_524 + 0x10000001
 dd BBf5_525 + 0x10000001
 dd BBf5_526 + 0x10000001
 dd BBf5_527 + 0x10000001
 dd BBf5_528 + 0x10000001
 dd BBf5_529 + 0x10000001
 dd BBf5_530 + 0x10000001
 dd BBf5_531 + 0x10000001
 dd BBf5_532 + 0x10000001
 dd BBf5_533 + 0x10000001
 dd BBf5_534 + 0x10000001
 dd BBf5_535 + 0x10000001
 dd BBf5_536 + 0x10000001
 dd BBf5_537 + 0x10000001
 dd BBf5_538 + 0x10000001
 dd BBf5_539 + 0x10000001
 dd BBf5_540 + 0x10000001
 dd BBf5_541 + 0x10000001
 dd BBf5_542 + 0x10000001
 dd BBf5_543 + 0x10000001
 dd BBf5_544 + 0x10000001
 dd BBf5_545 + 0x10000001
 dd BBf5_546 + 0x10000001
 dd BBf5_547 + 0x10000001
 dd BBf5_548 + 0x10000001
 dd BBf5_549 + 0x10000001
 dd BBf5_550 + 0x10000001
 dd BBf5_551 + 0x10000001
 dd BBf5_552 + 0x10000001
 dd BBf5_553 + 0x10000001
 dd BBf5_554 + 0x10000001
 dd BBf5_555 + 0x10000001
 dd BBf5_556 + 0x10000001
 dd BBf5_557 + 0x10000001
 dd BBf5_558 + 0x10000001
 dd BBf5_559 + 0x10000001
 dd BBf5_560 + 0x10000001
 dd BBf5_561 + 0x10000001
 dd BBf5_562 + 0x10000001
 dd BBf5_563 + 0x10000001
 dd BBf5_564 + 0x10000001
 dd BBf5_565 + 0x10000001
 dd BBf5_566 + 0x10000001
 dd BBf5_567 + 0x10000001
 dd BBf5_568 + 0x10000001
 dd BBf5_569 + 0x10000001
 dd BBf5_570 + 0x10000001
 dd BBf5_571 + 0x10000001
 dd BBf5_572 + 0x10000001
 dd BBf5_573 + 0x10000001
 dd BBf5_574 + 0x10000001
 dd BBf5_575 + 0x10000001
 dd BBf5_576 + 0x10000001
 dd BBf5_577 + 0x10000001
 dd BBf5_578 + 0x10000001
 dd BBf5_579 + 0x10000001
 dd BBf5_580 + 0x10000001
 dd BBf5_581 + 0x10000001
 dd BBf5_582 + 0x10000001
 dd BBf5_583 + 0x10000001
 dd BBf5_584 + 0x10000001
 dd BBf5_585 + 0x10000001
 dd BBf5_586 + 0x10000001
 dd BBf5_587 + 0x10000001
 dd BBf5_588 + 0x10000001
 dd BBf5_589 + 0x10000001
 dd BBf5_590 + 0x10000001
 dd BBf5_591 + 0x10000001
 dd BBf5_592 + 0x10000001
 dd BBf5_593 + 0x10000001
 dd BBf5_594 + 0x10000001
 dd BBf5_595 + 0x10000001
 dd BBf5_596 + 0x10000001
 dd BBf5_597 + 0x10000001
 dd BBf5_598 + 0x10000001
 dd BBf5_599 + 0x10000001
 dd BBf5_600 + 0x10000001
 dd BBf5_601 + 0x10000001
 dd BBf5_602 + 0x10000001
 dd BBf5_603 + 0x10000001
 dd BBf5_604 + 0x10000001
 dd BBf5_605 + 0x10000001
 dd BBf5_606 + 0x10000001
 dd BBf5_607 + 0x10000001
 dd BBf5_608 + 0x10000001
 dd BBf5_609 + 0x10000001
 dd BBf5_610 + 0x10000001
 dd BBf5_611 + 0x10000001
 dd BBf5_612 + 0x10000001
 dd BBf5_613 + 0x10000001
 dd BBf5_614 + 0x10000001
 dd BBf5_615 + 0x10000001
 dd BBf5_616 + 0x10000001
; ----- End of func 0 -----