section .data

reg_a: dd 0
reg_b: dd 0
reg_c: dd 0
reg_d: dd 0
reg_bp: dd 0
reg_sp: dd 0
reg_pc: dd 0

reg_a1: dd 0
reg_b1: dd 0
reg_c1: dd 0
reg_d1: dd 0
reg_bp1: dd 0
reg_sp1: dd 0
reg_pc1: dd 0

reg_a2: dd 0
reg_b2: dd 0
reg_c2: dd 0
reg_d2: dd 0
reg_bp2: dd 0
reg_sp2: dd 0
reg_pc2: dd 0

reg_a3: dd 0
reg_b3: dd 0
reg_c3: dd 0
reg_d3: dd 0
reg_bp3: dd 0
reg_sp3: dd 0
reg_pc3: dd 0

reg_a4: dd 0
reg_b4: dd 0
reg_c4: dd 0
reg_d4: dd 0
reg_bp4: dd 0
reg_sp4: dd 0
reg_pc4: dd 0

putc: dd 0
mem:
 dd 0x1

mem1:
 dd 0x800000
 dd 0x400000
 dd 0x200000
 dd 0x100000
 dd 0x80000
 dd 0x40000
 dd 0x20000
 dd 0x10000
 dd 0x8000
 dd 0x4000
 dd 0x2000
 dd 0x1000
 dd 0x800
 dd 0x400
 dd 0x200
 dd 0x100
 dd 0x80
 dd 0x40
 dd 0x20
 dd 0x10
 dd 0x8
 dd 0x4
 dd 0x2
 dd 0x1
 dd 0x6e
 dd 0x6f
 dd 0x20
 dd 0x6d
 dd 0x65
 dd 0x6d
 dd 0x6f
 dd 0x72
 dd 0x79
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x0
 dd 0x1
 dd 0x2
 dd 0x3
 dd 0x4
 dd 0x5
 dd 0x6
 dd 0x7
 dd 0x8
 dd 0x9
 dd 0xa
 dd 0xb
 dd 0xc
 dd 0xd
 dd 0xe
 dd 0xf
 dd 0x10
 dd 0x11
 dd 0x12
 dd 0x13
 dd 0x14
 dd 0x15
 dd 0x16
 dd 0x17
 dd 0x18
 dd 0x19
 dd 0x1a
 dd 0x1b
 dd 0x1c
 dd 0x1d
 dd 0x1e
 dd 0x1f
 dd 0x20
 dd 0x21
 dd 0x22
 dd 0x23
 dd 0x24
 dd 0x25
 dd 0x26
 dd 0x27
 dd 0x28
 dd 0x29
 dd 0x2a
 dd 0x2b
 dd 0x2c
 dd 0x2d
 dd 0x2e
 dd 0x2f
 dd 0x30
 dd 0x31
 dd 0x32
 dd 0x33
 dd 0x34
 dd 0x35
 dd 0x36
 dd 0x37
 dd 0x38
 dd 0x39
 dd 0x3a
 dd 0x3b
 dd 0x3c
 dd 0x3d
 dd 0x3e
 dd 0x3f
 dd 0x40
 dd 0x61
 dd 0x62
 dd 0x63
 dd 0x64
 dd 0x65
 dd 0x66
 dd 0x67
 dd 0x68
 dd 0x69
 dd 0x6a
 dd 0x6b
 dd 0x6c
 dd 0x6d
 dd 0x6e
 dd 0x6f
 dd 0x70
 dd 0x71
 dd 0x72
 dd 0x73
 dd 0x74
 dd 0x75
 dd 0x76
 dd 0x77
 dd 0x78
 dd 0x79
 dd 0x7a
 dd 0x5b
 dd 0x5c
 dd 0x5d
 dd 0x5e
 dd 0x5f
 dd 0x60
 dd 0x61
 dd 0x62
 dd 0x63
 dd 0x64
 dd 0x65
 dd 0x66
 dd 0x67
 dd 0x68
 dd 0x69
 dd 0x6a
 dd 0x6b
 dd 0x6c
 dd 0x6d
 dd 0x6e
 dd 0x6f
 dd 0x70
 dd 0x71
 dd 0x72
 dd 0x73
 dd 0x74
 dd 0x75
 dd 0x76
 dd 0x77
 dd 0x78
 dd 0x79
 dd 0x7a
 dd 0x7b
 dd 0x7c
 dd 0x7d
 dd 0x7e
 dd 0x7f
 dd 0xffff80
 dd 0xffff81
 dd 0xffff82
 dd 0xffff83
 dd 0xffff84
 dd 0xffff85
 dd 0xffff86
 dd 0xffff87
 dd 0xffff88
 dd 0xffff89
 dd 0xffff8a
 dd 0xffff8b
 dd 0xffff8c
 dd 0xffff8d
 dd 0xffff8e
 dd 0xffff8f
 dd 0xffff90
 dd 0xffff91
 dd 0xffff92
 dd 0xffff93
 dd 0xffff94
 dd 0xffff95
 dd 0xffff96
 dd 0xffff97
 dd 0xffff98
 dd 0xffff99
 dd 0xffff9a
 dd 0xffff9b
 dd 0xffff9c
 dd 0xffff9d
 dd 0xffff9e
 dd 0xffff9f
 dd 0xffffa0
 dd 0xffffa1
 dd 0xffffa2
 dd 0xffffa3
 dd 0xffffa4
 dd 0xffffa5
 dd 0xffffa6
 dd 0xffffa7
 dd 0xffffa8
 dd 0xffffa9
 dd 0xffffaa
 dd 0xffffab
 dd 0xffffac
 dd 0xffffad
 dd 0xffffae
 dd 0xffffaf
 dd 0xffffb0
 dd 0xffffb1
 dd 0xffffb2
 dd 0xffffb3
 dd 0xffffb4
 dd 0xffffb5
 dd 0xffffb6
 dd 0xffffb7
 dd 0xffffb8
 dd 0xffffb9
 dd 0xffffba
 dd 0xffffbb
 dd 0xffffbc
 dd 0xffffbd
 dd 0xffffbe
 dd 0xffffbf
 dd 0xffffc0
 dd 0xffffc1
 dd 0xffffc2
 dd 0xffffc3
 dd 0xffffc4
 dd 0xffffc5
 dd 0xffffc6
 dd 0xffffc7
 dd 0xffffc8
 dd 0xffffc9
 dd 0xffffca
 dd 0xffffcb
 dd 0xffffcc
 dd 0xffffcd
 dd 0xffffce
 dd 0xffffcf
 dd 0xffffd0
 dd 0xffffd1
 dd 0xffffd2
 dd 0xffffd3
 dd 0xffffd4
 dd 0xffffd5
 dd 0xffffd6
 dd 0xffffd7
 dd 0xffffd8
 dd 0xffffd9
 dd 0xffffda
 dd 0xffffdb
 dd 0xffffdc
 dd 0xffffdd
 dd 0xffffde
 dd 0xffffdf
 dd 0xffffe0
 dd 0xffffe1
 dd 0xffffe2
 dd 0xffffe3
 dd 0xffffe4
 dd 0xffffe5
 dd 0xffffe6
 dd 0xffffe7
 dd 0xffffe8
 dd 0xffffe9
 dd 0xffffea
 dd 0xffffeb
 dd 0xffffec
 dd 0xffffed
 dd 0xffffee
 dd 0xffffef
 dd 0xfffff0
 dd 0xfffff1
 dd 0xfffff2
 dd 0xfffff3
 dd 0xfffff4
 dd 0xfffff5
 dd 0xfffff6
 dd 0xfffff7
 dd 0xfffff8
 dd 0xfffff9
 dd 0xfffffa
 dd 0xfffffb
 dd 0xfffffc
 dd 0xfffffd
 dd 0xfffffe
 dd 0xffffff
 dd 0x20
 dd 0x69
 dd 0x6e
 dd 0x20
 dd 0x0
 dd 0x3a
 dd 0x20
 dd 0x75
 dd 0x6e
 dd 0x6b
 dd 0x6e
 dd 0x6f
 dd 0x77
 dd 0x6e
 dd 0x20
 dd 0x66
 dd 0x6f
 dd 0x72
 dd 0x6d
 dd 0x61
 dd 0x74
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x1
 dd 0x1
 dd 0x1
 dd 0xffffff
 dd 0x0
 dd 0x48
 dd 0x65
 dd 0x6c
 dd 0x6c
 dd 0x6f
 dd 0xa
 dd 0x0
 dd 0x149

mem2:
 dd 0x800000
 dd 0x400000
 dd 0x200000
 dd 0x100000
 dd 0x80000
 dd 0x40000
 dd 0x20000
 dd 0x10000
 dd 0x8000
 dd 0x4000
 dd 0x2000
 dd 0x1000
 dd 0x800
 dd 0x400
 dd 0x200
 dd 0x100
 dd 0x80
 dd 0x40
 dd 0x20
 dd 0x10
 dd 0x8
 dd 0x4
 dd 0x2
 dd 0x1
 dd 0x6e
 dd 0x6f
 dd 0x20
 dd 0x6d
 dd 0x65
 dd 0x6d
 dd 0x6f
 dd 0x72
 dd 0x79
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x0
 dd 0x1
 dd 0x2
 dd 0x3
 dd 0x4
 dd 0x5
 dd 0x6
 dd 0x7
 dd 0x8
 dd 0x9
 dd 0xa
 dd 0xb
 dd 0xc
 dd 0xd
 dd 0xe
 dd 0xf
 dd 0x10
 dd 0x11
 dd 0x12
 dd 0x13
 dd 0x14
 dd 0x15
 dd 0x16
 dd 0x17
 dd 0x18
 dd 0x19
 dd 0x1a
 dd 0x1b
 dd 0x1c
 dd 0x1d
 dd 0x1e
 dd 0x1f
 dd 0x20
 dd 0x21
 dd 0x22
 dd 0x23
 dd 0x24
 dd 0x25
 dd 0x26
 dd 0x27
 dd 0x28
 dd 0x29
 dd 0x2a
 dd 0x2b
 dd 0x2c
 dd 0x2d
 dd 0x2e
 dd 0x2f
 dd 0x30
 dd 0x31
 dd 0x32
 dd 0x33
 dd 0x34
 dd 0x35
 dd 0x36
 dd 0x37
 dd 0x38
 dd 0x39
 dd 0x3a
 dd 0x3b
 dd 0x3c
 dd 0x3d
 dd 0x3e
 dd 0x3f
 dd 0x40
 dd 0x61
 dd 0x62
 dd 0x63
 dd 0x64
 dd 0x65
 dd 0x66
 dd 0x67
 dd 0x68
 dd 0x69
 dd 0x6a
 dd 0x6b
 dd 0x6c
 dd 0x6d
 dd 0x6e
 dd 0x6f
 dd 0x70
 dd 0x71
 dd 0x72
 dd 0x73
 dd 0x74
 dd 0x75
 dd 0x76
 dd 0x77
 dd 0x78
 dd 0x79
 dd 0x7a
 dd 0x5b
 dd 0x5c
 dd 0x5d
 dd 0x5e
 dd 0x5f
 dd 0x60
 dd 0x61
 dd 0x62
 dd 0x63
 dd 0x64
 dd 0x65
 dd 0x66
 dd 0x67
 dd 0x68
 dd 0x69
 dd 0x6a
 dd 0x6b
 dd 0x6c
 dd 0x6d
 dd 0x6e
 dd 0x6f
 dd 0x70
 dd 0x71
 dd 0x72
 dd 0x73
 dd 0x74
 dd 0x75
 dd 0x76
 dd 0x77
 dd 0x78
 dd 0x79
 dd 0x7a
 dd 0x7b
 dd 0x7c
 dd 0x7d
 dd 0x7e
 dd 0x7f
 dd 0xffff80
 dd 0xffff81
 dd 0xffff82
 dd 0xffff83
 dd 0xffff84
 dd 0xffff85
 dd 0xffff86
 dd 0xffff87
 dd 0xffff88
 dd 0xffff89
 dd 0xffff8a
 dd 0xffff8b
 dd 0xffff8c
 dd 0xffff8d
 dd 0xffff8e
 dd 0xffff8f
 dd 0xffff90
 dd 0xffff91
 dd 0xffff92
 dd 0xffff93
 dd 0xffff94
 dd 0xffff95
 dd 0xffff96
 dd 0xffff97
 dd 0xffff98
 dd 0xffff99
 dd 0xffff9a
 dd 0xffff9b
 dd 0xffff9c
 dd 0xffff9d
 dd 0xffff9e
 dd 0xffff9f
 dd 0xffffa0
 dd 0xffffa1
 dd 0xffffa2
 dd 0xffffa3
 dd 0xffffa4
 dd 0xffffa5
 dd 0xffffa6
 dd 0xffffa7
 dd 0xffffa8
 dd 0xffffa9
 dd 0xffffaa
 dd 0xffffab
 dd 0xffffac
 dd 0xffffad
 dd 0xffffae
 dd 0xffffaf
 dd 0xffffb0
 dd 0xffffb1
 dd 0xffffb2
 dd 0xffffb3
 dd 0xffffb4
 dd 0xffffb5
 dd 0xffffb6
 dd 0xffffb7
 dd 0xffffb8
 dd 0xffffb9
 dd 0xffffba
 dd 0xffffbb
 dd 0xffffbc
 dd 0xffffbd
 dd 0xffffbe
 dd 0xffffbf
 dd 0xffffc0
 dd 0xffffc1
 dd 0xffffc2
 dd 0xffffc3
 dd 0xffffc4
 dd 0xffffc5
 dd 0xffffc6
 dd 0xffffc7
 dd 0xffffc8
 dd 0xffffc9
 dd 0xffffca
 dd 0xffffcb
 dd 0xffffcc
 dd 0xffffcd
 dd 0xffffce
 dd 0xffffcf
 dd 0xffffd0
 dd 0xffffd1
 dd 0xffffd2
 dd 0xffffd3
 dd 0xffffd4
 dd 0xffffd5
 dd 0xffffd6
 dd 0xffffd7
 dd 0xffffd8
 dd 0xffffd9
 dd 0xffffda
 dd 0xffffdb
 dd 0xffffdc
 dd 0xffffdd
 dd 0xffffde
 dd 0xffffdf
 dd 0xffffe0
 dd 0xffffe1
 dd 0xffffe2
 dd 0xffffe3
 dd 0xffffe4
 dd 0xffffe5
 dd 0xffffe6
 dd 0xffffe7
 dd 0xffffe8
 dd 0xffffe9
 dd 0xffffea
 dd 0xffffeb
 dd 0xffffec
 dd 0xffffed
 dd 0xffffee
 dd 0xffffef
 dd 0xfffff0
 dd 0xfffff1
 dd 0xfffff2
 dd 0xfffff3
 dd 0xfffff4
 dd 0xfffff5
 dd 0xfffff6
 dd 0xfffff7
 dd 0xfffff8
 dd 0xfffff9
 dd 0xfffffa
 dd 0xfffffb
 dd 0xfffffc
 dd 0xfffffd
 dd 0xfffffe
 dd 0xffffff
 dd 0x20
 dd 0x69
 dd 0x6e
 dd 0x20
 dd 0x0
 dd 0x3a
 dd 0x20
 dd 0x75
 dd 0x6e
 dd 0x6b
 dd 0x6e
 dd 0x6f
 dd 0x77
 dd 0x6e
 dd 0x20
 dd 0x66
 dd 0x6f
 dd 0x72
 dd 0x6d
 dd 0x61
 dd 0x74
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x1
 dd 0x1
 dd 0x1
 dd 0xffffff
 dd 0x0
 dd 0x57
 dd 0x6f
 dd 0x72
 dd 0x6c
 dd 0x64
 dd 0xa
 dd 0x0
 dd 0x149

mem3:
 dd 0x800000
 dd 0x400000
 dd 0x200000
 dd 0x100000
 dd 0x80000
 dd 0x40000
 dd 0x20000
 dd 0x10000
 dd 0x8000
 dd 0x4000
 dd 0x2000
 dd 0x1000
 dd 0x800
 dd 0x400
 dd 0x200
 dd 0x100
 dd 0x80
 dd 0x40
 dd 0x20
 dd 0x10
 dd 0x8
 dd 0x4
 dd 0x2
 dd 0x1
 dd 0x6e
 dd 0x6f
 dd 0x20
 dd 0x6d
 dd 0x65
 dd 0x6d
 dd 0x6f
 dd 0x72
 dd 0x79
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x0
 dd 0x1
 dd 0x2
 dd 0x3
 dd 0x4
 dd 0x5
 dd 0x6
 dd 0x7
 dd 0x8
 dd 0x9
 dd 0xa
 dd 0xb
 dd 0xc
 dd 0xd
 dd 0xe
 dd 0xf
 dd 0x10
 dd 0x11
 dd 0x12
 dd 0x13
 dd 0x14
 dd 0x15
 dd 0x16
 dd 0x17
 dd 0x18
 dd 0x19
 dd 0x1a
 dd 0x1b
 dd 0x1c
 dd 0x1d
 dd 0x1e
 dd 0x1f
 dd 0x20
 dd 0x21
 dd 0x22
 dd 0x23
 dd 0x24
 dd 0x25
 dd 0x26
 dd 0x27
 dd 0x28
 dd 0x29
 dd 0x2a
 dd 0x2b
 dd 0x2c
 dd 0x2d
 dd 0x2e
 dd 0x2f
 dd 0x30
 dd 0x31
 dd 0x32
 dd 0x33
 dd 0x34
 dd 0x35
 dd 0x36
 dd 0x37
 dd 0x38
 dd 0x39
 dd 0x3a
 dd 0x3b
 dd 0x3c
 dd 0x3d
 dd 0x3e
 dd 0x3f
 dd 0x40
 dd 0x61
 dd 0x62
 dd 0x63
 dd 0x64
 dd 0x65
 dd 0x66
 dd 0x67
 dd 0x68
 dd 0x69
 dd 0x6a
 dd 0x6b
 dd 0x6c
 dd 0x6d
 dd 0x6e
 dd 0x6f
 dd 0x70
 dd 0x71
 dd 0x72
 dd 0x73
 dd 0x74
 dd 0x75
 dd 0x76
 dd 0x77
 dd 0x78
 dd 0x79
 dd 0x7a
 dd 0x5b
 dd 0x5c
 dd 0x5d
 dd 0x5e
 dd 0x5f
 dd 0x60
 dd 0x61
 dd 0x62
 dd 0x63
 dd 0x64
 dd 0x65
 dd 0x66
 dd 0x67
 dd 0x68
 dd 0x69
 dd 0x6a
 dd 0x6b
 dd 0x6c
 dd 0x6d
 dd 0x6e
 dd 0x6f
 dd 0x70
 dd 0x71
 dd 0x72
 dd 0x73
 dd 0x74
 dd 0x75
 dd 0x76
 dd 0x77
 dd 0x78
 dd 0x79
 dd 0x7a
 dd 0x7b
 dd 0x7c
 dd 0x7d
 dd 0x7e
 dd 0x7f
 dd 0xffff80
 dd 0xffff81
 dd 0xffff82
 dd 0xffff83
 dd 0xffff84
 dd 0xffff85
 dd 0xffff86
 dd 0xffff87
 dd 0xffff88
 dd 0xffff89
 dd 0xffff8a
 dd 0xffff8b
 dd 0xffff8c
 dd 0xffff8d
 dd 0xffff8e
 dd 0xffff8f
 dd 0xffff90
 dd 0xffff91
 dd 0xffff92
 dd 0xffff93
 dd 0xffff94
 dd 0xffff95
 dd 0xffff96
 dd 0xffff97
 dd 0xffff98
 dd 0xffff99
 dd 0xffff9a
 dd 0xffff9b
 dd 0xffff9c
 dd 0xffff9d
 dd 0xffff9e
 dd 0xffff9f
 dd 0xffffa0
 dd 0xffffa1
 dd 0xffffa2
 dd 0xffffa3
 dd 0xffffa4
 dd 0xffffa5
 dd 0xffffa6
 dd 0xffffa7
 dd 0xffffa8
 dd 0xffffa9
 dd 0xffffaa
 dd 0xffffab
 dd 0xffffac
 dd 0xffffad
 dd 0xffffae
 dd 0xffffaf
 dd 0xffffb0
 dd 0xffffb1
 dd 0xffffb2
 dd 0xffffb3
 dd 0xffffb4
 dd 0xffffb5
 dd 0xffffb6
 dd 0xffffb7
 dd 0xffffb8
 dd 0xffffb9
 dd 0xffffba
 dd 0xffffbb
 dd 0xffffbc
 dd 0xffffbd
 dd 0xffffbe
 dd 0xffffbf
 dd 0xffffc0
 dd 0xffffc1
 dd 0xffffc2
 dd 0xffffc3
 dd 0xffffc4
 dd 0xffffc5
 dd 0xffffc6
 dd 0xffffc7
 dd 0xffffc8
 dd 0xffffc9
 dd 0xffffca
 dd 0xffffcb
 dd 0xffffcc
 dd 0xffffcd
 dd 0xffffce
 dd 0xffffcf
 dd 0xffffd0
 dd 0xffffd1
 dd 0xffffd2
 dd 0xffffd3
 dd 0xffffd4
 dd 0xffffd5
 dd 0xffffd6
 dd 0xffffd7
 dd 0xffffd8
 dd 0xffffd9
 dd 0xffffda
 dd 0xffffdb
 dd 0xffffdc
 dd 0xffffdd
 dd 0xffffde
 dd 0xffffdf
 dd 0xffffe0
 dd 0xffffe1
 dd 0xffffe2
 dd 0xffffe3
 dd 0xffffe4
 dd 0xffffe5
 dd 0xffffe6
 dd 0xffffe7
 dd 0xffffe8
 dd 0xffffe9
 dd 0xffffea
 dd 0xffffeb
 dd 0xffffec
 dd 0xffffed
 dd 0xffffee
 dd 0xffffef
 dd 0xfffff0
 dd 0xfffff1
 dd 0xfffff2
 dd 0xfffff3
 dd 0xfffff4
 dd 0xfffff5
 dd 0xfffff6
 dd 0xfffff7
 dd 0xfffff8
 dd 0xfffff9
 dd 0xfffffa
 dd 0xfffffb
 dd 0xfffffc
 dd 0xfffffd
 dd 0xfffffe
 dd 0xffffff
 dd 0x20
 dd 0x69
 dd 0x6e
 dd 0x20
 dd 0x0
 dd 0x3a
 dd 0x20
 dd 0x75
 dd 0x6e
 dd 0x6b
 dd 0x6e
 dd 0x6f
 dd 0x77
 dd 0x6e
 dd 0x20
 dd 0x66
 dd 0x6f
 dd 0x72
 dd 0x6d
 dd 0x61
 dd 0x74
 dd 0x21
 dd 0xa
 dd 0x0
 dd 0x1
 dd 0x1
 dd 0x1
 dd 0xffffff
 dd 0x0
 dd 0x57
 dd 0x6f
 dd 0x72
 dd 0x6c
 dd 0x64
 dd 0xa
 dd 0x0
 dd 0x149
 times 0xfffeb8 dd 0





section .text
global _start
_start:
 mov ebx, 0x1 ; fd
 mov edx, 1 ; len
 mov edi, 0
 mov eax, 1

; ----- Start of 0 -----
func_0:
 PCJMP_f0:
  cmp eax, 1
  je _PCJMP_f0
  ret
 _PCJMP_f0:
  pop eax
  mov eax, [JMP_TABLE_f0 + 4*edi]
  sub eax, 0xabad1dea
  jz BBf0_0
  jmp eax
BBf0_0:
 ; op: JMP
 mov edi, 0x5
 mov eax, 1
 call PCJMP_f0

BBf0_1:
 mov ebx, 0x1 ; fd
 mov edx, 1 ; len
 mov edi, 0
 mov eax, 1
; ----- Start of 0 -----
func_1:
 PCJMP_f1:
  cmp eax, 1
  je _PCJMP_f1
  ret
 _PCJMP_f1:
  pop eax
  mov eax, [JMP_TABLE_f1 + 4*edi]
  sub eax, 0xabad1dea
  jz PIX_START_f1
  jmp eax
PIX_START_f1:
 mov esi, [PIX_TABLE_f1 + 4*esi]
 jmp esi
PIXf0_0_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_0: mov edi, 0x261
 mov eax, 1
 call PCJMP_f1
BBf1_1: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x34
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_0_1
PIXf0_1_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 jmp PIXf0_1_1
PIXf0_2_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_2_1
PIXf0_3_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_31: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_3_1
PIXf0_4_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x33
 mov eax, 1
 call PCJMP_f1
BBf1_50: mov dword [reg_a1], 0x0
BBf1_51: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_4_1
PIXf0_5_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_5_1
PIXf0_6_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_77: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_6_1
PIXf0_7_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x18
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 jmp PIXf0_7_1
PIXf0_8_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_8_1
PIXf0_9_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x63
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_98: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf0_9_1
PIXf0_10_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_10_1
PIXf0_11_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_128: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_129: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_11_1
PIXf0_12_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x90
 jmp PIXf0_12_1
PIXf0_13_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x9d
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_156: mov dword [reg_a1], 0x2d
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_13_1
PIXf0_14_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_174: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_175: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_14_1
PIXf0_15_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_193: mov dword [reg_a1], 0x41
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_15_1
PIXf0_16_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 jmp PIXf0_16_1
PIXf0_17_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov edi, 0xe5
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_228: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 jmp PIXf0_17_1
PIXf0_18_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_242: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xf6
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_243: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_18_1
PIXf0_19_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff9
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_19_1
PIXf0_20_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_20_1
PIXf0_21_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x116
 jmp PIXf0_21_1
PIXf0_22_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x11f
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f1
BBf1_287: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_22_1
PIXf0_23_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_23_1
PIXf0_24_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_24_1
PIXf0_25_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_25_1
PIXf0_26_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_26_1
PIXf0_27_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_27_1
PIXf0_28_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_28_1
PIXf0_29_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_29_1
PIXf0_30_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_30_1
PIXf0_31_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_31_1
PIXf0_32_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_412: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 jmp PIXf0_32_1
PIXf0_33_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_428: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_33_1
PIXf0_34_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_34_1
PIXf0_35_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_35_1
PIXf0_36_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 jmp PIXf0_36_1
PIXf0_37_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1dd
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_476: mov edi, 0x1de
 mov eax, 1
 call PCJMP_f1
BBf1_477: mov edi, 0x1e1
 mov eax, 1
 call PCJMP_f1
BBf1_478: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_37_1
PIXf0_38_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_38_1
PIXf0_39_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x20
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_39_1
PIXf0_40_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_40_1
PIXf0_41_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_41_1
PIXf0_42_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f1
BBf1_531: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
BBf1_532: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_42_1
PIXf0_43_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x100
 jmp PIXf0_43_1
PIXf0_44_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x21f
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_44_1
PIXf0_45_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_554: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_45_1
PIXf0_46_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_574: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_b1], 0x13f
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_46_1
PIXf0_47_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_592: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 jmp PIXf0_47_1
PIXf0_48_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 mov eax, dword [reg_b1]
 and dword [reg_sp1], 0xffffff
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [reg_bp1]
 mov eax, dword [reg_a1]
 mov eax, dword [reg_b1]
 mov eax, 1
 mov dword [reg_b1], eax
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], eax
 mov ecx, dword [reg_d1]
 add dword [reg_sp1], 0x2
 mov eax, dword [reg_sp1]
 mov dword [reg_a1], eax
 call PCJMP_f1
 add dword [reg_b1], 0xfffffe
 mov eax, dword [mem1 + 4*eax]
 and dword [reg_b1], 0xffffff
 mov dword [reg_sp1], eax
 mov eax, dword [mem1 + 4*eax]
 mov eax, dword [reg_bp1]
 call PCJMP_f1
 jmp PIXf0_48_1
PIXf0_0_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffd0
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 jmp PIXf0_0_2
PIXf0_1_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_1_2
PIXf0_2_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_2_2
PIXf0_3_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x21
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_32: mov edi, 0x22
 mov eax, 1
 jmp PIXf0_3_2
PIXf0_4_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 jmp PIXf0_4_2
PIXf0_5_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_2
PIXf0_6_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_2
PIXf0_7_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_2
PIXf0_8_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_8_2
PIXf0_9_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_9_2
PIXf0_10_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_10_2
PIXf0_11_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_11_2
PIXf0_12_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_12_2
PIXf0_13_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_13_2
PIXf0_14_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_14_2
PIXf0_15_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_15_2
PIXf0_16_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x148
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_b1], 0x148
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_16_2
PIXf0_17_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_229: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 jmp PIXf0_17_2
PIXf0_18_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x78
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_18_2
PIXf0_19_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 jmp PIXf0_19_2
PIXf0_20_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x108
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xba
 mov eax, 1
 call PCJMP_f1
BBf1_264: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x10a
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_265: mov dword [reg_a1], 0x41
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_20_2
PIXf0_21_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_276: mov dword [reg_a1], 0x1
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_21_2
PIXf0_22_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_288: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_22_2
PIXf0_23_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_23_2
PIXf0_24_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_314: mov dword [reg_a1], 0x8000
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_24_2
PIXf0_25_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_25_2
PIXf0_26_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_26_2
PIXf0_27_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_27_2
PIXf0_28_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_28_2
PIXf0_29_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_357: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 jmp PIXf0_29_2
PIXf0_30_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 jmp PIXf0_30_2
PIXf0_31_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_31_2
PIXf0_32_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_32_2
PIXf0_33_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_33_2
PIXf0_34_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_34_2
PIXf0_35_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_35_2
PIXf0_36_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_36_2
PIXf0_37_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_37_2
PIXf0_38_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_38_2
PIXf0_39_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_39_2
PIXf0_40_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffdd
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f1
BBf1_520: mov dword [reg_a1], 0x25
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_40_2
PIXf0_41_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffda
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_41_2
PIXf0_42_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffda
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_42_2
PIXf0_43_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_43_2
PIXf0_44_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov edi, 0x218
 mov eax, 1
 call PCJMP_f1
BBf1_543: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_44_2
PIXf0_45_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_45_2
PIXf0_46_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 jmp PIXf0_46_2
PIXf0_47_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_593: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_47_2
PIXf0_48_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0xe6
 mov eax, dword [mem1 + 4*eax]
 call PCJMP_f1
 and dword [reg_sp1], 0xffffff
 call PCJMP_f1
 mov dword [reg_bp1], eax
 mov dword [reg_a1], eax
 mov dword [reg_a1], eax
 call PCJMP_f1
 mov dword [reg_b1], eax
 sete  al
 mov dword [reg_b1], eax
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov eax, dword [reg_bp1]
 mov eax, 1
 mov eax, 1
 and dword [reg_d1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_sp1]
 add dword [reg_d1], 0xffffff
 mov eax, 1
 mov eax, 1
 mov eax, dword [reg_sp1]
 jmp PIXf0_48_2
PIXf0_0_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_0_3
PIXf0_1_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xb
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_10: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_1_3
PIXf0_2_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_2_3
PIXf0_3_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_33: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 sub dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 jmp PIXf0_3_3
PIXf0_4_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x35
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_52: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_4_3
PIXf0_5_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_3
PIXf0_6_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_3
PIXf0_7_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_3
PIXf0_8_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_8_3
PIXf0_9_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_9_3
PIXf0_10_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_10_3
PIXf0_11_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_11_3
PIXf0_12_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_12_3
PIXf0_13_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_13_3
PIXf0_14_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_14_3
PIXf0_15_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_15_3
PIXf0_16_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_16_3
PIXf0_17_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_17_3
PIXf0_18_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xf5
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_244: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_18_3
PIXf0_19_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_256: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff9
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_19_3
PIXf0_20_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov edi, 0x10b
 mov eax, 1
 call PCJMP_f1
BBf1_266: mov dword [reg_a1], 0x61
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_20_3
PIXf0_21_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_21_3
PIXf0_22_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_289: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_22_3
PIXf0_23_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_23_3
PIXf0_24_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_24_3
PIXf0_25_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_25_3
PIXf0_26_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_26_3
PIXf0_27_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x156
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_27_3
PIXf0_28_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_349: mov eax, dword [reg_bp1]
 jmp PIXf0_28_3
PIXf0_29_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_29_3
PIXf0_30_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_30_3
PIXf0_31_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_31_3
PIXf0_32_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_32_3
PIXf0_33_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_33_3
PIXf0_34_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_34_3
PIXf0_35_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_35_3
PIXf0_36_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_36_3
PIXf0_37_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_37_3
PIXf0_38_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_38_3
PIXf0_39_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_39_3
PIXf0_40_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_40_3
PIXf0_41_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x212
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_529: mov dword [reg_a1], 0x1
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_41_3
PIXf0_42_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_533: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_42_3
PIXf0_43_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x219
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f1
BBf1_537: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x4
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_43_3
PIXf0_44_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_544: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 jmp PIXf0_44_3
PIXf0_45_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x22b
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f1
BBf1_555: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 jmp PIXf0_45_3
PIXf0_46_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x244
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_575: mov dword [reg_b1], 0x140
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x241
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
 jmp PIXf0_46_3
PIXf0_47_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x253
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_594: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 jmp PIXf0_47_3
PIXf0_48_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_b1], eax
 add dword [reg_sp1], 0x1
 mov eax, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_b1], eax
 movzx eax, al
 mov dword [mem1 + 4*ecx], eax
 mov eax, 1
 sete  al
 mov eax, 1
 mov eax, 1
 mov eax, dword [reg_bp1]
 int 0x80
 mov eax, dword [reg_a1]
 mov eax, dword [reg_bp1]
 mov eax, 1
 setne al
 mov eax, dword [reg_b1]
 mov eax, dword [reg_sp1]
 mov eax, dword [reg_d1]
 add dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_48_3
PIXf0_0_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_2: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_0_4
PIXf0_1_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffcd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffd0
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_1_4
PIXf0_2_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffcd
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_2_4
PIXf0_3_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x1d
 mov eax, 1
 call PCJMP_f1
BBf1_34: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_3_4
PIXf0_4_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_4_4
PIXf0_5_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_4
PIXf0_6_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_4
PIXf0_7_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_4
PIXf0_8_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_8_4
PIXf0_9_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_9_4
PIXf0_10_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_114: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_10_4
PIXf0_11_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
BBf1_130: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x84
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_131: mov edi, 0x85
 jmp PIXf0_11_4
PIXf0_12_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f1
BBf1_144: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_12_4
PIXf0_13_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_13_4
PIXf0_14_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_14_4
PIXf0_15_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_15_4
PIXf0_16_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_16_4
PIXf0_17_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_17_4
PIXf0_18_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_18_4
PIXf0_19_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff9
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_257: mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_19_4
PIXf0_20_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
BBf1_267: mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_20_4
PIXf0_21_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x115
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f1
BBf1_277: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_21_4
PIXf0_22_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_22_4
PIXf0_23_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_23_4
PIXf0_24_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov dword [reg_a1], 0x13b
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, dword [reg_c1]
 mov eax, 1
 call PCJMP_f1
BBf1_315: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_24_4
PIXf0_25_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_25_4
PIXf0_26_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_26_4
PIXf0_27_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f1
BBf1_342: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 jmp PIXf0_27_4
PIXf0_28_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_28_4
PIXf0_29_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_29_4
PIXf0_30_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_30_4
PIXf0_31_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_31_4
PIXf0_32_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_32_4
PIXf0_33_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_429: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x4
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_33_4
PIXf0_34_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 jmp PIXf0_34_4
PIXf0_35_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1ca
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_455: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_35_4
PIXf0_36_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 jmp PIXf0_36_4
PIXf0_37_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_37_4
PIXf0_38_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_38_4
PIXf0_39_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_39_4
PIXf0_40_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_40_4
PIXf0_41_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_4
PIXf0_42_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x1e9
 mov eax, 1
 call PCJMP_f1
BBf1_534: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_42_4
PIXf0_43_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_538: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_43_4
PIXf0_44_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_545: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x101
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_44_4
PIXf0_45_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_556: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_45_4
PIXf0_46_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_576: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 jmp PIXf0_46_4
PIXf0_47_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_595: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 jmp PIXf0_47_4
PIXf0_48_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 add dword [reg_b1], 0x3
 call PCJMP_f1
 mov eax, dword [mem1 + 4*eax]
 mov eax, 1
 mov eax, dword [reg_bp1]
 mov eax, dword [reg_d1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov ecx, reg_a1
 mov dword [reg_a1], eax
 call PCJMP_f1
 mov dword [reg_d1], eax
 mov eax, 1
 mov eax, 1
 mov eax, dword [reg_b1]
 call PCJMP_f1
 call PCJMP_f1
 call PCJMP_f1
 mov eax, dword [reg_a1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 call PCJMP_f1
 mov eax, dword [reg_sp1]
 jmp PIXf0_48_4
PIXf0_0_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffe8
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_0_5
PIXf0_1_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_1_5
PIXf0_2_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_2_5
PIXf0_3_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_35: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 jmp PIXf0_3_5
PIXf0_4_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x36
 mov eax, 1
 call PCJMP_f1
BBf1_53: mov dword [reg_a1], 0x0
BBf1_54: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 jmp PIXf0_4_5
PIXf0_5_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_5
PIXf0_6_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_5
PIXf0_7_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_5
PIXf0_8_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x54
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_83: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_8_5
PIXf0_9_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x64
 mov eax, 1
 call PCJMP_f1
BBf1_99: mov dword [reg_a1], 0x0
BBf1_100: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_9_5
PIXf0_10_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x6a
 mov eax, 1
 call PCJMP_f1
BBf1_115: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_10_5
PIXf0_11_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_132: mov edi, 0x87
 mov eax, 1
 call PCJMP_f1
BBf1_133: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_11_5
PIXf0_12_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x91
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f1
BBf1_145: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_12_5
PIXf0_13_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 sub dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_13_5
PIXf0_14_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_14_5
PIXf0_15_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xc3
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_194: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_15_5
PIXf0_16_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_16_5
PIXf0_17_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_17_5
PIXf0_18_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_18_5
PIXf0_19_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_5
PIXf0_20_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f1
BBf1_268: mov edi, 0x117
 mov eax, 1
 call PCJMP_f1
BBf1_269: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_20_5
PIXf0_21_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_21_5
PIXf0_22_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x122
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_22_5
PIXf0_23_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_23_5
PIXf0_24_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x13d
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_316: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_24_5
PIXf0_25_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_331: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 jmp PIXf0_25_5
PIXf0_26_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x153
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f1
BBf1_339: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_26_5
PIXf0_27_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_5
PIXf0_28_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_28_5
PIXf0_29_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_29_5
PIXf0_30_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_30_5
PIXf0_31_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_395: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_31_5
PIXf0_32_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 jmp PIXf0_32_5
PIXf0_33_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0x1af
 cmp dword [reg_a1], 0x0
 sete  al
 jmp PIXf0_33_5
PIXf0_34_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1c1
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_445: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_34_5
PIXf0_35_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_35_5
PIXf0_36_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1d2
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_465: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_36_5
PIXf0_37_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_37_5
PIXf0_38_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x1f1
 mov eax, 1
 call PCJMP_f1
BBf1_496: mov eax, dword [reg_bp1]
 jmp PIXf0_38_5
PIXf0_39_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_39_5
PIXf0_40_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_40_5
PIXf0_41_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_5
PIXf0_42_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_5
PIXf0_43_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_539: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0x4
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_43_5
PIXf0_44_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_44_5
PIXf0_45_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_557: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 jmp PIXf0_45_5
PIXf0_46_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_577: mov eax, 0x3
 mov ecx, reg_a1
 int 0x80
 mov edi, 0x243
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_578: mov dword [reg_a1], 0xffffff
BBf1_579: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_46_5
PIXf0_47_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_596: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_47_5
PIXf0_48_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 mov eax, 1
 mov eax, 1
 mov dword [reg_b1], eax
 mov ecx, dword [reg_d1]
 mov eax, dword [reg_sp1]
 mov dword [reg_a1], eax
 mov eax, dword [mem1 + 4*eax]
 mov eax, dword [mem1 + 4*eax]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_a1]
 mov eax, dword [reg_a1]
 mov eax, dword [reg_a1]
 call PCJMP_f1
 mov dword [reg_a1], eax
 mov ecx, dword [reg_b1]
 call PCJMP_f1
 mov eax, dword [reg_b1]
 mov eax, dword [reg_b1]
 add dword [reg_sp1], 0x1
 add dword [reg_b1], 0xfffffe
 mov dword [reg_a1], eax
 call PCJMP_f1
 and dword [reg_d1], 0xffffff
 jmp PIXf0_48_5
PIXf0_0_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 jmp PIXf0_0_6
PIXf0_1_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_1_6
PIXf0_2_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 jmp PIXf0_2_6
PIXf0_3_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_36: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_3_6
PIXf0_4_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0x38
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_55: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_56: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0x3a
 cmp dword [reg_a1], 0x0
 sete  al
 jmp PIXf0_4_6
PIXf0_5_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_6
PIXf0_6_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_6
PIXf0_7_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_6
PIXf0_8_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 jmp PIXf0_8_6
PIXf0_9_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 cmp dword [reg_a1], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x66
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_101: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_9_6
PIXf0_10_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_116: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_10_6
PIXf0_11_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, 0x4
 mov ecx, reg_a1
 int 0x80
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_134: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 jmp PIXf0_11_6
PIXf0_12_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_146: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 jmp PIXf0_12_6
PIXf0_13_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
BBf1_157: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 jmp PIXf0_13_6
PIXf0_14_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0xb0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f1
BBf1_176: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_b1], 0x1
 mov edi, 0xb4
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_177: mov dword [reg_a1], 0x61
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_14_6
PIXf0_15_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x5a
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_195: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 jmp PIXf0_15_6
PIXf0_16_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xd7
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_213: mov dword [reg_a1], 0x18
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_16_6
PIXf0_17_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_17_6
PIXf0_18_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_18_6
PIXf0_19_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_6
PIXf0_20_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_20_6
PIXf0_21_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_278: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 jmp PIXf0_21_6
PIXf0_22_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f1
BBf1_290: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 jmp PIXf0_22_6
PIXf0_23_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x12f
 mov eax, 1
 call PCJMP_f1
BBf1_302: mov edi, 0x130
 mov eax, 1
 jmp PIXf0_23_6
PIXf0_24_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_24_6
PIXf0_25_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_25_6
PIXf0_26_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x154
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_26_6
PIXf0_27_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_6
PIXf0_28_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_28_6
PIXf0_29_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_29_6
PIXf0_30_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x174
 mov eax, 1
 call PCJMP_f1
BBf1_377: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_30_6
PIXf0_31_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_31_6
PIXf0_32_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_32_6
PIXf0_33_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_430: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_33_6
PIXf0_34_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1bf
 jmp PIXf0_34_6
PIXf0_35_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1c9
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_456: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 jmp PIXf0_35_6
PIXf0_36_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_36_6
PIXf0_37_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1e0
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_479: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_37_6
PIXf0_38_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_38_6
PIXf0_39_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_39_6
PIXf0_40_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_40_6
PIXf0_41_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_6
PIXf0_42_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_6
PIXf0_43_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_43_6
PIXf0_44_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x100
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffff00
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_44_6
PIXf0_45_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_558: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_45_6
PIXf0_46_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_46_6
PIXf0_47_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_47_6
PIXf0_48_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_d1], eax
 mov dword [reg_a1], eax
 mov dword [reg_b1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_a1], eax
 and dword [reg_sp1], 0xffffff
 and dword [reg_sp1], 0xffffff
 cmp dword [reg_a1], 0x0
 mov dword [reg_a1], eax
 call PCJMP_f1
 mov eax, dword [reg_b1]
 mov eax, dword [reg_sp1]
 sub dword [reg_a1], 0x1
 mov eax, dword [reg_sp1]
 mov eax, dword [reg_d1]
 cmp dword [reg_a1], eax
 mov dword [reg_b1], eax
 and dword [reg_sp1], 0xffffff
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [reg_bp1]
 jmp PIXf0_48_6
PIXf0_0_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_0_7
PIXf0_1_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_1_7
PIXf0_2_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_2_7
PIXf0_3_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x26
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_37: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_3_7
PIXf0_4_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_57: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_4_7
PIXf0_5_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_7
PIXf0_6_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_7
PIXf0_7_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_7
PIXf0_8_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x55
 mov eax, 1
 call PCJMP_f1
BBf1_84: mov dword [reg_a1], 0x0
BBf1_85: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 jmp PIXf0_8_7
PIXf0_9_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 jmp PIXf0_9_7
PIXf0_10_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_117: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x4
 jmp PIXf0_10_7
PIXf0_11_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x82
 mov eax, 1
 call PCJMP_f1
BBf1_135: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_11_7
PIXf0_12_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_12_7
PIXf0_13_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_158: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_159: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_13_7
PIXf0_14_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 jmp PIXf0_14_7
PIXf0_15_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_196: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_197: mov eax, dword [reg_bp1]
 jmp PIXf0_15_7
PIXf0_16_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xd6
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f1
BBf1_214: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_16_7
PIXf0_17_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_230: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 jmp PIXf0_17_7
PIXf0_18_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_18_7
PIXf0_19_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_7
PIXf0_20_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_20_7
PIXf0_21_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_21_7
PIXf0_22_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_291: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_292: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_22_7
PIXf0_23_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_303: mov edi, 0x128
 mov eax, 1
 call PCJMP_f1
BBf1_304: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_23_7
PIXf0_24_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_24_7
PIXf0_25_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, 0x147
 mov eax, 1
 call PCJMP_f1
BBf1_332: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_25_7
PIXf0_26_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_26_7
PIXf0_27_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_7
PIXf0_28_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_28_7
PIXf0_29_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x161
 mov eax, 1
 call PCJMP_f1
BBf1_358: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_29_7
PIXf0_30_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_378: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 jmp PIXf0_30_7
PIXf0_31_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x18d
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_396: mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_31_7
PIXf0_32_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x191
 mov eax, 1
 call PCJMP_f1
BBf1_413: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_32_7
PIXf0_33_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_431: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 jmp PIXf0_33_7
PIXf0_34_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_446: mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x1c0
 mov eax, 1
 call PCJMP_f1
BBf1_447: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_34_7
PIXf0_35_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_457: mov edi, 0x1cb
 mov eax, 1
 call PCJMP_f1
BBf1_458: mov edi, 0x1cc
 mov eax, 1
 call PCJMP_f1
BBf1_459: mov edi, 0x1c6
 jmp PIXf0_35_7
PIXf0_36_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_36_7
PIXf0_37_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_37_7
PIXf0_38_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_38_7
PIXf0_39_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_39_7
PIXf0_40_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffdd
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 jmp PIXf0_40_7
PIXf0_41_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_7
PIXf0_42_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_7
PIXf0_43_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_43_7
PIXf0_44_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x222
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f1
BBf1_546: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x4
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffeff
 and dword [reg_b1], 0xffffff
 jmp PIXf0_44_7
PIXf0_45_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_559: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_b1], 0x13c
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_45_7
PIXf0_46_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_46_7
PIXf0_47_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x25d
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_597: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_47_7
PIXf0_48_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_sp1], eax
 call PCJMP_f1
 add dword [reg_sp1], 0x1
 mov dword [reg_d1], eax
 mov eax, dword [reg_a1]
 mov eax, dword [mem1 + 4*eax]
 mov eax, dword [mem1 + 4*eax]
 mov ecx, dword [reg_d1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_b1], 0x0
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 call PCJMP_f1
 mov eax, dword [mem1 + 4*eax]
 mov eax, dword [reg_bp1]
 mov dword [reg_d1], eax
 mov dword [reg_a1], eax
 mov dword [reg_bp1], eax
 and dword [reg_sp1], 0xffffff
 mov eax, dword [mem1 + 4*eax]
 mov eax, dword [mem1 + 4*eax]
 call PCJMP_f1
 mov dword [reg_a1], eax
 mov dword [reg_b1], eax
 jmp PIXf0_48_7
PIXf0_0_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 jmp PIXf0_0_8
PIXf0_1_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 jmp PIXf0_1_8
PIXf0_2_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_2_8
PIXf0_3_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_38: mov eax, dword [reg_bp1]
 jmp PIXf0_3_8
PIXf0_4_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_58: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_4_8
PIXf0_5_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_8
PIXf0_6_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_8
PIXf0_7_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_8
PIXf0_8_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_8_8
PIXf0_9_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_102: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 jmp PIXf0_9_8
PIXf0_10_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 jmp PIXf0_10_8
PIXf0_11_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_136: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_11_8
PIXf0_12_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_12_8
PIXf0_13_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xc
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_13_8
PIXf0_14_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xb3
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_178: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x66
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_14_8
PIXf0_15_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_198: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_15_8
PIXf0_16_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_215: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_16_8
PIXf0_17_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_231: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 jmp PIXf0_17_8
PIXf0_18_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_18_8
PIXf0_19_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_8
PIXf0_20_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_20_8
PIXf0_21_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x102
 mov eax, 1
 call PCJMP_f1
BBf1_279: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_21_8
PIXf0_22_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_22_8
PIXf0_23_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_305: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_306: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_23_8
PIXf0_24_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x13e
 mov eax, 1
 call PCJMP_f1
BBf1_317: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f1
BBf1_318: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f1
BBf1_319: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_24_8
PIXf0_25_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x14e
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_333: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_25_8
PIXf0_26_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_26_8
PIXf0_27_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_8
PIXf0_28_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_28_8
PIXf0_29_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_359: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_29_8
PIXf0_30_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_379: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_30_8
PIXf0_31_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_397: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_31_8
PIXf0_32_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_414: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_32_8
PIXf0_33_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x1b1
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_432: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_433: mov eax, dword [reg_bp1]
 jmp PIXf0_33_8
PIXf0_34_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 jmp PIXf0_34_8
PIXf0_35_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_460: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_35_8
PIXf0_36_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_36_8
PIXf0_37_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
 jmp PIXf0_37_8
PIXf0_38_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 jmp PIXf0_38_8
PIXf0_39_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_39_8
PIXf0_40_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_40_8
PIXf0_41_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_8
PIXf0_42_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_8
PIXf0_43_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_43_8
PIXf0_44_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffff00
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_44_8
PIXf0_45_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_560: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_45_8
PIXf0_46_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x140
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_46_8
PIXf0_47_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x256
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f1
BBf1_598: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 jmp PIXf0_47_8
PIXf0_48_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 and dword [reg_d1], 0xffffff
 and dword [reg_a1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov dword [reg_b1], eax
 mov dword [reg_b1], eax
 call PCJMP_f1
 call PCJMP_f1
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], eax
 sub dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_bp1], eax
 mov eax, 1
 mov dword [reg_sp1], eax
 mov dword [reg_b1], 0x0
 mov dword [reg_b1], eax
 mov dword [mem1 + 4*ecx], eax
 and dword [reg_d1], 0xffffff
 mov dword [reg_b1], 0x1
 mov eax, dword [reg_a1]
 mov eax, dword [reg_a1]
 jmp PIXf0_48_8
PIXf0_0_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffce
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf0_0_9
PIXf0_1_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
BBf1_11: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_1_9
PIXf0_2_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 jmp PIXf0_2_9
PIXf0_3_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xfffffe
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_3_9
PIXf0_4_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x2d
 mov eax, 1
 call PCJMP_f1
 jmp PIXf0_4_9
PIXf0_5_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_9
PIXf0_6_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_9
PIXf0_7_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_9
PIXf0_8_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x57
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_86: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_8_9
PIXf0_9_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x5e
 mov eax, 1
 call PCJMP_f1
BBf1_103: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_9_9
PIXf0_10_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_118: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x18
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_10_9
PIXf0_11_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_11_9
PIXf0_12_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x94
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
 jmp PIXf0_12_9
PIXf0_13_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xa1
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_160: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_13_9
PIXf0_14_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_179: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_180: mov eax, dword [reg_b1]
 jmp PIXf0_14_9
PIXf0_15_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xc7
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_15_9
PIXf0_16_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_216: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 jmp PIXf0_16_9
PIXf0_17_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 jmp PIXf0_17_9
PIXf0_18_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x58
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 jmp PIXf0_18_9
PIXf0_19_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_9
PIXf0_20_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_20_9
PIXf0_21_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_21_9
PIXf0_22_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_22_9
PIXf0_23_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_23_9
PIXf0_24_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 jmp PIXf0_24_9
PIXf0_25_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x150
 mov eax, 1
 call PCJMP_f1
BBf1_334: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_25_9
PIXf0_26_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_26_9
PIXf0_27_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_9
PIXf0_28_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_28_9
PIXf0_29_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_360: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_29_9
PIXf0_30_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_380: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x17e
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_381: mov edi, 0x17f
 mov eax, 1
 jmp PIXf0_30_9
PIXf0_31_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_31_9
PIXf0_32_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_415: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
BBf1_416: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 jmp PIXf0_32_9
PIXf0_33_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_33_9
PIXf0_34_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_34_9
PIXf0_35_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_35_9
PIXf0_36_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 sub dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_36_9
PIXf0_37_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_480: mov edi, 0x1db
 mov eax, 1
 call PCJMP_f1
BBf1_481: mov edi, 0x1e3
 mov eax, 1
 call PCJMP_f1
BBf1_482: mov edi, 0x1e4
 mov eax, 1
 call PCJMP_f1
BBf1_483: mov edi, 0x1d9
 mov eax, 1
 call PCJMP_f1
BBf1_484: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_37_9
PIXf0_38_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_497: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_38_9
PIXf0_39_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x203
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f1
BBf1_515: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 jmp PIXf0_39_9
PIXf0_40_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffdd
 jmp PIXf0_40_9
PIXf0_41_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_9
PIXf0_42_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_9
PIXf0_43_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_43_9
PIXf0_44_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffeff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_44_9
PIXf0_45_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_561: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_45_9
PIXf0_46_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_580: mov dword [reg_b1], 0x13f
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_46_9
PIXf0_47_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_47_9
PIXf0_48_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
 cmp dword [reg_a1], 0x0
 call PCJMP_f1
 call PCJMP_f1
 add dword [reg_b1], 0xfffffe
 mov dword [reg_a1], eax
 add dword [reg_b1], 0xfffffb
 mov dword [reg_bp1], eax
 mov eax, dword [mem1 + 4*eax]
 add dword [reg_sp1], 0x1
 mov eax, dword [reg_a1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov eax, 1
 call PCJMP_f1
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x259
 call PCJMP_f1
 mov eax, 1
 call PCJMP_f1
 call PCJMP_f1
 mov eax, dword [reg_sp1]
 mov eax, dword [reg_bp1]
 add dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_48_9
PIXf0_0_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffce
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_0_10
PIXf0_1_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xd
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_12: mov edi, 0xe
 mov eax, 1
 call PCJMP_f1
BBf1_13: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_1_10
PIXf0_2_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_2_10
PIXf0_3_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x27
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_3_10
PIXf0_4_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_59: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 jmp PIXf0_4_10
PIXf0_5_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_10
PIXf0_6_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_10
PIXf0_7_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_10
PIXf0_8_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 jmp PIXf0_8_10
PIXf0_9_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_104: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_9_10
PIXf0_10_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x78
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_119: mov edi, 0x79
 mov eax, 1
 call PCJMP_f1
BBf1_120: mov edi, 0x7f
 mov eax, 1
 call PCJMP_f1
BBf1_121: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_10_10
PIXf0_11_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
BBf1_137: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 sub dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_11_10
PIXf0_12_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_147: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_12_10
PIXf0_13_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_161: mov eax, dword [reg_b1]
 jmp PIXf0_13_10
PIXf0_14_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xb8
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_181: mov dword [reg_a1], 0x41
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_14_10
PIXf0_15_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f1
BBf1_199: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_b1], 0x1
 mov edi, 0xca
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_200: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_15_10
PIXf0_16_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_217: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_16_10
PIXf0_17_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xe8
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f1
 jmp PIXf0_17_10
PIXf0_18_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_245: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_246: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0xf8
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_247: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_18_10
PIXf0_19_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_10
PIXf0_20_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_20_10
PIXf0_21_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_21_10
PIXf0_22_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x125
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f1
BBf1_293: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_22_10
PIXf0_23_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_307: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_308: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 jmp PIXf0_23_10
PIXf0_24_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x140
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, dword [reg_c1]
 mov eax, 1
 call PCJMP_f1
BBf1_320: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_24_10
PIXf0_25_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_25_10
PIXf0_26_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_26_10
PIXf0_27_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_10
PIXf0_28_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_28_10
PIXf0_29_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_361: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_29_10
PIXf0_30_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_382: mov edi, 0x181
 mov eax, 1
 call PCJMP_f1
BBf1_383: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_30_10
PIXf0_31_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x184
 mov eax, 1
 call PCJMP_f1
BBf1_398: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_31_10
PIXf0_32_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x1a2
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_417: mov edi, 0x1a3
 mov eax, 1
 call PCJMP_f1
BBf1_418: mov edi, 0x1a6
 mov eax, 1
 call PCJMP_f1
BBf1_419: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_32_10
PIXf0_33_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_33_10
PIXf0_34_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 jmp PIXf0_34_10
PIXf0_35_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_35_10
PIXf0_36_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_36_10
PIXf0_37_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_485: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_486: mov eax, dword [reg_sp1]
 jmp PIXf0_37_10
PIXf0_38_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x215
 mov eax, 1
 call PCJMP_f1
BBf1_498: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_38_10
PIXf0_39_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f1
BBf1_516: mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffdd
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_39_10
PIXf0_40_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_40_10
PIXf0_41_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_10
PIXf0_42_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_10
PIXf0_43_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_43_10
PIXf0_44_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_44_10
PIXf0_45_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_562: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_45_10
PIXf0_46_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov dword [reg_b1], 0x13f
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_46_10
PIXf0_47_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_47_10
PIXf0_48_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_sp1], eax
 add dword [reg_a1], eax
 mov dword [reg_a1], eax
 and dword [reg_b1], 0xffffff
 mov dword [reg_b1], eax
 mov eax, dword [reg_a1]
 call PCJMP_f1
 mov eax, dword [reg_d1]
 cmp dword [reg_b1], 0x0
 mov edi, 0xb4
 and dword [reg_sp1], 0xffffff
 mov dword [reg_b1], eax
 mov eax, dword [mem1 + 4*eax]
 mov eax, dword [reg_bp1]
 mov edi, 0x49
 call PCJMP_f1
 mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], eax
 and dword [reg_d1], 0xffffff
 mov eax, 1
 mov eax, 1
 mov eax, dword [mem1 + 4*eax]
 mov ecx, dword [reg_b1]
 jmp PIXf0_48_10
PIXf0_0_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0x4
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_3: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffce
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_0_11
PIXf0_1_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 sub dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x9
 mov eax, 1
 call PCJMP_f1
BBf1_14: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_1_11
PIXf0_2_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0x18
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_23: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_2_11
PIXf0_3_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f1
BBf1_39: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_3_11
PIXf0_4_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_60: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_61: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_4_11
PIXf0_5_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_11
PIXf0_6_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_11
PIXf0_7_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_11
PIXf0_8_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x58
 mov eax, 1
 call PCJMP_f1
BBf1_87: mov dword [reg_a1], 0x0
BBf1_88: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_8_11
PIXf0_9_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_105: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x4
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 jmp PIXf0_9_11
PIXf0_10_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_10_11
PIXf0_11_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_11_11
PIXf0_12_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_148: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 sub dword [reg_a1], 0x1
 jmp PIXf0_12_11
PIXf0_13_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xa3
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_162: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xd
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_13_11
PIXf0_14_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xb7
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_182: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_14_11
PIXf0_15_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xc9
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f1
BBf1_201: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_15_11
PIXf0_16_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_16_11
PIXf0_17_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_232: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0xea
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_233: mov edi, 0xe7
 mov eax, 1
 call PCJMP_f1
BBf1_234: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_17_11
PIXf0_18_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_18_11
PIXf0_19_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_11
PIXf0_20_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_20_11
PIXf0_21_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_21_11
PIXf0_22_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_294: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_22_11
PIXf0_23_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x6
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 jmp PIXf0_23_11
PIXf0_24_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x8000
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_24_11
PIXf0_25_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_25_11
PIXf0_26_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_26_11
PIXf0_27_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_11
PIXf0_28_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x159
 mov eax, 1
 call PCJMP_f1
BBf1_350: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 jmp PIXf0_28_11
PIXf0_29_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_29_11
PIXf0_30_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_384: mov eax, dword [reg_bp1]
 jmp PIXf0_30_11
PIXf0_31_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_399: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_31_11
PIXf0_32_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 jmp PIXf0_32_11
PIXf0_33_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_434: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_33_11
PIXf0_34_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_448: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_34_11
PIXf0_35_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_35_11
PIXf0_36_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_36_11
PIXf0_37_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_37_11
PIXf0_38_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 jmp PIXf0_38_11
PIXf0_39_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x20
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_39_11
PIXf0_40_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 jmp PIXf0_40_11
PIXf0_41_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_41_11
PIXf0_42_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_11
PIXf0_43_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_43_11
PIXf0_44_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_44_11
PIXf0_45_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_563: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 jmp PIXf0_45_11
PIXf0_46_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_581: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_46_11
PIXf0_47_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x25a
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_599: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x259
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_600: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f1
BBf1_601: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 jmp PIXf0_47_11
PIXf0_48_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 mov eax, 1
 mov eax, dword [reg_sp1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov dword [reg_b1], eax
 call PCJMP_f1
 mov ecx, dword [reg_b1]
 sete  al
 mov eax, 1
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_sp1]
 call PCJMP_f1
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 and dword [reg_sp1], 0xffffff
 call PCJMP_f1
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 add dword [reg_a1], 0x1
 mov eax, dword [reg_sp1]
 call PCJMP_f1
 mov dword [reg_a1], eax
 mov eax, 1
 jmp PIXf0_48_11
PIXf0_0_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 jmp PIXf0_0_12
PIXf0_1_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_1_12
PIXf0_2_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_2_12
PIXf0_3_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_40: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_3_12
PIXf0_4_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x5
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 jmp PIXf0_4_12
PIXf0_5_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_12
PIXf0_6_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_12
PIXf0_7_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_12
PIXf0_8_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x5a
 cmp dword [reg_a1], 0x0
 sete  al
 jmp PIXf0_8_12
PIXf0_9_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_106: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_9_12
PIXf0_10_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_10_12
PIXf0_11_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x8a
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f1
BBf1_138: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 jmp PIXf0_11_12
PIXf0_12_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x10
 jmp PIXf0_12_12
PIXf0_13_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_163: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xa5
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_164: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_13_12
PIXf0_14_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x46
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
 jmp PIXf0_14_12
PIXf0_15_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_202: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
 jmp PIXf0_15_12
PIXf0_16_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xda
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f1
BBf1_218: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 jmp PIXf0_16_12
PIXf0_17_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x2d
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xec
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_235: mov dword [reg_a1], 0x1
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_17_12
PIXf0_18_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_18_12
PIXf0_19_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_12
PIXf0_20_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_20_12
PIXf0_21_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_21_12
PIXf0_22_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_295: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 jmp PIXf0_22_12
PIXf0_23_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x136
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_309: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 jmp PIXf0_23_12
PIXf0_24_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x142
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_321: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_24_12
PIXf0_25_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_25_12
PIXf0_26_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_26_12
PIXf0_27_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_12
PIXf0_28_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_351: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
 jmp PIXf0_28_12
PIXf0_29_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x16b
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_362: mov edi, 0x16c
 mov eax, 1
 call PCJMP_f1
BBf1_363: mov edi, 0x16d
 mov eax, 1
 call PCJMP_f1
BBf1_364: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_29_12
PIXf0_30_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_30_12
PIXf0_31_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_400: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 jmp PIXf0_31_12
PIXf0_32_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1a5
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_420: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_32_12
PIXf0_33_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_33_12
PIXf0_34_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_34_12
PIXf0_35_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 sub dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_35_12
PIXf0_36_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_466: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_36_12
PIXf0_37_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1e7
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f1
BBf1_487: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_37_12
PIXf0_38_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x6c
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_38_12
PIXf0_39_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_39_12
PIXf0_40_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffdd
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f1
BBf1_521: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 jmp PIXf0_40_12
PIXf0_41_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf0_41_12
PIXf0_42_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_12
PIXf0_43_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_43_12
PIXf0_44_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_44_12
PIXf0_45_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_45_12
PIXf0_46_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_582: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_46_12
PIXf0_47_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_602: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_47_12
PIXf0_48_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x186
 call PCJMP_f1
 add dword [reg_d1], 0xffffff
 call PCJMP_f1
 mov eax, dword [reg_a1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 add dword [reg_sp1], 0x1
 mov eax, dword [reg_a1]
 call PCJMP_f1
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x9
 mov dword [reg_a1], eax
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov dword [reg_b1], eax
 mov dword [reg_b1], eax
 add dword [reg_sp1], 0x1
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 and dword [reg_b1], 0xffffff
 jmp PIXf0_48_12
PIXf0_0_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_4: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0x6
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_5: mov edi, 0x8
 mov eax, 1
 call PCJMP_f1
BBf1_6: mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffd0
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_0_13
PIXf0_1_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_1_13
PIXf0_2_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_24: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0x1a
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_25: mov edi, 0x1c
 mov eax, 1
 call PCJMP_f1
BBf1_26: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_2_13
PIXf0_3_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_41: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xfffffe
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_3_13
PIXf0_4_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_62: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x18
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_4_13
PIXf0_5_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_13
PIXf0_6_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_13
PIXf0_7_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_13
PIXf0_8_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_89: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_8_13
PIXf0_9_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x18
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x6c
 jmp PIXf0_9_13
PIXf0_10_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_10_13
PIXf0_11_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_11_13
PIXf0_12_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_12_13
PIXf0_13_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x9
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 jmp PIXf0_13_13
PIXf0_14_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_183: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_184: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_14_13
PIXf0_15_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_203: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_204: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_15_13
PIXf0_16_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xdb
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f1
BBf1_219: mov eax, dword [reg_b1]
 jmp PIXf0_16_13
PIXf0_17_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_17_13
PIXf0_18_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_18_13
PIXf0_19_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_13
PIXf0_20_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_20_13
PIXf0_21_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_21_13
PIXf0_22_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_296: mov dword [reg_a1], 0x30
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_22_13
PIXf0_23_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_310: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_23_13
PIXf0_24_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_24_13
PIXf0_25_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_25_13
PIXf0_26_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_26_13
PIXf0_27_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_13
PIXf0_28_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_352: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_353: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 jmp PIXf0_28_13
PIXf0_29_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x169
 mov eax, 1
 jmp PIXf0_29_13
PIXf0_30_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 jmp PIXf0_30_13
PIXf0_31_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
BBf1_401: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0x193
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_402: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_31_13
PIXf0_32_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_421: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 jmp PIXf0_32_13
PIXf0_33_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1b4
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_435: mov edi, 0x1b5
 mov eax, 1
 jmp PIXf0_33_13
PIXf0_34_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_449: mov eax, dword [reg_bp1]
 jmp PIXf0_34_13
PIXf0_35_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_35_13
PIXf0_36_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 jmp PIXf0_36_13
PIXf0_37_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, 0x4
 mov ecx, reg_a1
 int 0x80
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
 jmp PIXf0_37_13
PIXf0_38_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1f4
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_499: mov edi, 0x201
 mov eax, 1
 call PCJMP_f1
BBf1_500: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_38_13
PIXf0_39_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_39_13
PIXf0_40_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x20a
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_40_13
PIXf0_41_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_41_13
PIXf0_42_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_13
PIXf0_43_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_43_13
PIXf0_44_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_44_13
PIXf0_45_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_45_13
PIXf0_46_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x247
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_46_13
PIXf0_47_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_47_13
PIXf0_48_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_a1], 0xffffff
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_b1], eax
 call PCJMP_f1
 sete  al
 add dword [reg_sp1], 0x1
 mov eax, dword [reg_bp1]
 add dword [reg_b1], 0x4
 mov eax, dword [reg_a1]
 call PCJMP_f1
 mov eax, dword [mem1 + 4*eax]
 and dword [reg_b1], 0xffffff
 call PCJMP_f1
 cmp dword [reg_a1], 0x0
 call PCJMP_f1
 and dword [reg_sp1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov edi, 0x170
 mov eax, dword [reg_sp1]
 mov dword [mem1 + 4*ecx], eax
 call PCJMP_f1
 mov dword [reg_a1], eax
 mov dword [reg_a1], eax
 jmp PIXf0_48_13
PIXf0_0_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 jmp PIXf0_0_14
PIXf0_1_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_1_14
PIXf0_2_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_27: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 jmp PIXf0_2_14
PIXf0_3_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf0_3_14
PIXf0_4_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x40
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_63: mov edi, 0x41
 mov eax, 1
 call PCJMP_f1
BBf1_64: mov edi, 0x4c
 mov eax, 1
 call PCJMP_f1
BBf1_65: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_4_14
PIXf0_5_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_14
PIXf0_6_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_14
PIXf0_7_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_14
PIXf0_8_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_90: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_8_14
PIXf0_9_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_107: mov edi, 0x6d
 mov eax, 1
 call PCJMP_f1
BBf1_108: mov edi, 0x73
 mov eax, 1
 call PCJMP_f1
BBf1_109: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_9_14
PIXf0_10_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_10_14
PIXf0_11_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_11_14
PIXf0_12_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x95
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f1
BBf1_149: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_12_14
PIXf0_13_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_165: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xa7
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_166: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_13_14
PIXf0_14_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_185: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_186: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_14_14
PIXf0_15_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xcd
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_15_14
PIXf0_16_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_220: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_16_14
PIXf0_17_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0xee
 mov eax, 1
 call PCJMP_f1
BBf1_236: mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_17_14
PIXf0_18_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x2
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 jmp PIXf0_18_14
PIXf0_19_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_14
PIXf0_20_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_20_14
PIXf0_21_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_21_14
PIXf0_22_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_22_14
PIXf0_23_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_23_14
PIXf0_24_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x143
 mov eax, 1
 jmp PIXf0_24_14
PIXf0_25_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_25_14
PIXf0_26_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_26_14
PIXf0_27_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_14
PIXf0_28_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_28_14
PIXf0_29_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_365: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 jmp PIXf0_29_14
PIXf0_30_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x17c
 mov eax, 1
 call PCJMP_f1
BBf1_385: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 jmp PIXf0_30_14
PIXf0_31_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_403: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0x195
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_404: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_31_14
PIXf0_32_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x1a0
 mov eax, 1
 call PCJMP_f1
BBf1_422: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_32_14
PIXf0_33_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_436: mov edi, 0x1b8
 mov eax, 1
 call PCJMP_f1
BBf1_437: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_33_14
PIXf0_34_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 jmp PIXf0_34_14
PIXf0_35_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
 jmp PIXf0_35_14
PIXf0_36_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1d4
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_467: mov edi, 0x1d6
 mov eax, 1
 call PCJMP_f1
BBf1_468: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_36_14
PIXf0_37_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_488: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x26
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 jmp PIXf0_37_14
PIXf0_38_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x64
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1f6
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_501: mov edi, 0x202
 mov eax, 1
 call PCJMP_f1
BBf1_502: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_38_14
PIXf0_39_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_39_14
PIXf0_40_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x8f
 mov eax, 1
 call PCJMP_f1
BBf1_522: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x124
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x20b
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_40_14
PIXf0_41_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_14
PIXf0_42_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_14
PIXf0_43_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_43_14
PIXf0_44_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_44_14
PIXf0_45_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x234
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_45_14
PIXf0_46_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f1
BBf1_583: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 jmp PIXf0_46_14
PIXf0_47_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_47_14
PIXf0_48_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 mov dword [reg_a1], eax
 mov dword [reg_b1], eax
 mov eax, dword [reg_a1]
 mov eax, 1
 mov eax, dword [reg_d1]
 mov dword [reg_a1], eax
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], eax
 call PCJMP_f1
 mov eax, 1
 mov eax, dword [mem1 + 4*eax]
 add dword [reg_b1], 0x5
 mov eax, dword [mem1 + 4*eax]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_d1], eax
 mov eax, dword [mem1 + 4*eax]
 mov ebx, 0x0
 mov dword [reg_b1], eax
 mov dword [reg_sp1], eax
 mov ecx, dword [reg_b1]
 mov eax, dword [reg_a1]
 jmp PIXf0_48_14
PIXf0_0_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_0_15
PIXf0_1_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_15: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_1_15
PIXf0_2_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x16
 mov eax, 1
 call PCJMP_f1
BBf1_28: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcb
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 jmp PIXf0_2_15
PIXf0_3_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x2a
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f1
 jmp PIXf0_3_15
PIXf0_4_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_4_15
PIXf0_5_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_15
PIXf0_6_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_15
PIXf0_7_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_15
PIXf0_8_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x4f
 mov eax, 1
 call PCJMP_f1
 jmp PIXf0_8_15
PIXf0_9_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 jmp PIXf0_9_15
PIXf0_10_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x7b
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_122: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_10_15
PIXf0_11_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_11_15
PIXf0_12_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 jmp PIXf0_12_15
PIXf0_13_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xb
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
 jmp PIXf0_13_15
PIXf0_14_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x41
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf0_14_15
PIXf0_15_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f1
BBf1_205: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_b1], 0x1
 mov edi, 0xd1
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_206: mov dword [reg_a1], 0x20
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_15_15
PIXf0_16_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_221: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 jmp PIXf0_16_15
PIXf0_17_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x2b
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_17_15
PIXf0_18_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x10
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_248: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_18_15
PIXf0_19_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_15
PIXf0_20_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_20_15
PIXf0_21_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_21_15
PIXf0_22_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_22_15
PIXf0_23_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x2
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_23_15
PIXf0_24_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_322: mov edi, 0x144
 mov eax, 1
 call PCJMP_f1
BBf1_323: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f1
BBf1_324: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_24_15
PIXf0_25_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_25_15
PIXf0_26_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_26_15
PIXf0_27_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_15
PIXf0_28_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x163
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_354: mov edi, 0x164
 mov eax, 1
 call PCJMP_f1
BBf1_355: mov edi, 0x166
 mov eax, 1
 call PCJMP_f1
BBf1_356: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_28_15
PIXf0_29_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_366: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_367: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_29_15
PIXf0_30_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 jmp PIXf0_30_15
PIXf0_31_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 jmp PIXf0_31_15
PIXf0_32_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_423: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 jmp PIXf0_32_15
PIXf0_33_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1b7
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_438: mov edi, 0x1b1
 mov eax, 1
 call PCJMP_f1
BBf1_439: mov edi, 0x1b2
 mov eax, 1
 call PCJMP_f1
BBf1_440: mov eax, dword [reg_bp1]
 jmp PIXf0_33_15
PIXf0_34_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1c3
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_450: mov edi, 0x1bc
 mov eax, 1
 call PCJMP_f1
BBf1_451: mov edi, 0x1bb
 mov eax, 1
 call PCJMP_f1
BBf1_452: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_34_15
PIXf0_35_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_461: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_462: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_35_15
PIXf0_36_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 sub dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_36_15
PIXf0_37_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_489: mov eax, dword [reg_bp1]
 jmp PIXf0_37_15
PIXf0_38_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffdb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x75
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 jmp PIXf0_38_15
PIXf0_39_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x205
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x92
 mov eax, 1
 call PCJMP_f1
BBf1_517: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 jmp PIXf0_39_15
PIXf0_40_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f1
BBf1_523: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_40_15
PIXf0_41_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_15
PIXf0_42_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_15
PIXf0_43_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_43_15
PIXf0_44_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffff00
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x223
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_44_15
PIXf0_45_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f1
BBf1_564: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_45_15
PIXf0_46_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_584: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_585: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_46_15
PIXf0_47_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_47_15
PIXf0_48_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x1a2
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 add dword [reg_sp1], 0x1
 mov dword [reg_b1], eax
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_b1], eax
 call PCJMP_f1
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [mem1 + 4*eax]
 call PCJMP_f1
 mov eax, 1
 call PCJMP_f1
 and dword [reg_sp1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_bp1], eax
 mov dword [reg_sp1], eax
 and dword [reg_sp1], 0xffffff
 call PCJMP_f1
 jmp PIXf0_48_15
PIXf0_0_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffd0
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 jmp PIXf0_0_16
PIXf0_1_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x35
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_1_16
PIXf0_2_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_29: mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffcd
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_2_16
PIXf0_3_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_42: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_3_16
PIXf0_4_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 jmp PIXf0_4_16
PIXf0_5_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_16
PIXf0_6_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_16
PIXf0_7_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_16
PIXf0_8_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_91: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 jmp PIXf0_8_16
PIXf0_9_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_9_16
PIXf0_10_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_10_16
PIXf0_11_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x8b
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_11_16
PIXf0_12_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x97
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_150: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_a1]
 jmp PIXf0_12_16
PIXf0_13_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_167: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xa9
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_168: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x20
 mov eax, dword [reg_a1]
 jmp PIXf0_13_16
PIXf0_14_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xbc
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_187: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_14_16
PIXf0_15_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xd0
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
 jmp PIXf0_15_16
PIXf0_16_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_222: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_16_16
PIXf0_17_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xee
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_237: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_17_16
PIXf0_18_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xfd
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_249: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_18_16
PIXf0_19_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_16
PIXf0_20_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_20_16
PIXf0_21_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_21_16
PIXf0_22_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0x12a
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
 jmp PIXf0_22_16
PIXf0_23_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x137
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_23_16
PIXf0_24_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x146
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_325: mov edi, 0x152
 mov eax, 1
 call PCJMP_f1
BBf1_326: mov dword [reg_a1], 0x0
 jmp PIXf0_24_16
PIXf0_25_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_25_16
PIXf0_26_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_26_16
PIXf0_27_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_16
PIXf0_28_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_28_16
PIXf0_29_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_368: mov eax, dword [reg_bp1]
 jmp PIXf0_29_16
PIXf0_30_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_386: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_30_16
PIXf0_31_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_405: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0x197
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_406: mov edi, 0x198
 mov eax, 1
 call PCJMP_f1
BBf1_407: mov edi, 0x19d
 mov eax, 1
 call PCJMP_f1
BBf1_408: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf0_31_16
PIXf0_32_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_424: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_32_16
PIXf0_33_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 jmp PIXf0_33_16
PIXf0_34_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_453: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x24
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 jmp PIXf0_34_16
PIXf0_35_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_35_16
PIXf0_36_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1d6
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_469: mov edi, 0x1d0
 mov eax, 1
 call PCJMP_f1
BBf1_470: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_36_16
PIXf0_37_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x1eb
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_490: mov edi, 0x1ec
 mov eax, 1
 call PCJMP_f1
BBf1_491: mov edi, 0x216
 mov eax, 1
 call PCJMP_f1
BBf1_492: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 jmp PIXf0_37_16
PIXf0_38_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1f8
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_503: mov edi, 0x202
 mov eax, 1
 call PCJMP_f1
BBf1_504: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_38_16
PIXf0_39_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f1
BBf1_518: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_39_16
PIXf0_40_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x20c
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f1
BBf1_524: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x129
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_40_16
PIXf0_41_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_16
PIXf0_42_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_16
PIXf0_43_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_43_16
PIXf0_44_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f1
BBf1_547: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffeff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 jmp PIXf0_44_16
PIXf0_45_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_565: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_45_16
PIXf0_46_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_b1], 0x13f
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_46_16
PIXf0_47_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_47_16
PIXf0_48_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 add dword [reg_b1], 0x3
 mov eax, 1
 mov edi, 0x221
 mov dword [reg_bp1], eax
 add dword [reg_b1], 0xfffffd
 mov eax, 1
 add dword [reg_sp1], 0x1
 mov ecx, dword [reg_d1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 mov dword [reg_b1], eax
 call PCJMP_f1
 mov eax, dword [reg_a1]
 mov eax, dword [reg_b1]
 add dword [reg_sp1], 0x1
 mov eax, dword [reg_sp1]
 call PCJMP_f1
 mov eax, dword [reg_a1]
 mov eax, dword [reg_b1]
 mov dword [reg_a1], 0x8000
 mov eax, dword [reg_sp1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov eax, dword [reg_d1]
 jmp PIXf0_48_16
PIXf0_0_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 jmp PIXf0_0_17
PIXf0_1_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x11
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_16: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf0_1_17
PIXf0_2_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_2_17
PIXf0_3_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_43: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_44: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_3_17
PIXf0_4_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_4_17
PIXf0_5_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_17
PIXf0_6_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_17
PIXf0_7_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_17
PIXf0_8_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_92: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_93: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_8_17
PIXf0_9_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_9_17
PIXf0_10_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x7c
 mov eax, 1
 call PCJMP_f1
BBf1_123: mov dword [reg_a1], 0x0
BBf1_124: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_10_17
PIXf0_11_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f1
BBf1_139: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_11_17
PIXf0_12_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov edi, 0x98
 mov eax, 1
 call PCJMP_f1
BBf1_151: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_12_17
PIXf0_13_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_169: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_13_17
PIXf0_14_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x5a
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 jmp PIXf0_14_17
PIXf0_15_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_207: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x7f
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_15_17
PIXf0_16_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x7
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_16_17
PIXf0_17_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_17_17
PIXf0_18_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_18_17
PIXf0_19_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_17
PIXf0_20_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_20_17
PIXf0_21_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x11c
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
 jmp PIXf0_21_17
PIXf0_22_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_297: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_22_17
PIXf0_23_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f1
BBf1_311: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 jmp PIXf0_23_17
PIXf0_24_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_327: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_24_17
PIXf0_25_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x150
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_335: mov eax, dword [reg_bp1]
 jmp PIXf0_25_17
PIXf0_26_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_26_17
PIXf0_27_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_17
PIXf0_28_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_28_17
PIXf0_29_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x172
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_369: mov edi, 0x173
 mov eax, 1
 call PCJMP_f1
BBf1_370: mov edi, 0x174
 mov eax, 1
 call PCJMP_f1
BBf1_371: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf0_29_17
PIXf0_30_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_387: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 jmp PIXf0_30_17
PIXf0_31_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf0_31_17
PIXf0_32_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1a9
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x168
 mov eax, 1
 call PCJMP_f1
BBf1_425: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_32_17
PIXf0_33_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1ba
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_441: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf0_33_17
PIXf0_34_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_34_17
PIXf0_35_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1d6
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_463: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x24
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 jmp PIXf0_35_17
PIXf0_36_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_471: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 jmp PIXf0_36_17
PIXf0_37_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x25
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_37_17
PIXf0_38_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x78
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1fa
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_505: mov edi, 0x204
 mov eax, 1
 call PCJMP_f1
BBf1_506: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_38_17
PIXf0_39_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f1
BBf1_519: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 jmp PIXf0_39_17
PIXf0_40_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x20d
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f1
BBf1_525: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_40_17
PIXf0_41_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_17
PIXf0_42_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_17
PIXf0_43_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_43_17
PIXf0_44_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_548: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
 jmp PIXf0_44_17
PIXf0_45_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x237
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_566: mov edi, 0x238
 mov eax, 1
 call PCJMP_f1
BBf1_567: mov edi, 0x23a
 mov eax, 1
 call PCJMP_f1
BBf1_568: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_45_17
PIXf0_46_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 jmp PIXf0_46_17
PIXf0_47_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_47_17
PIXf0_48_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
 mov eax, dword [reg_a1]
 mov eax, dword [reg_sp1]
 mov ecx, dword [reg_d1]
 mov dword [reg_sp1], eax
 call PCJMP_f1
 mov dword [reg_b1], eax
 mov ecx, dword [reg_b1]
 and dword [reg_sp1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [mem1 + 4*eax]
 mov eax, 1
 and dword [reg_d1], 0xffffff
 sete  al
 mov eax, 1
 add dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov edi, 0x193
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 and dword [reg_b1], 0xffffff
 add dword [reg_sp1], 0x1
 mov dword [reg_c1], eax
 jmp PIXf0_48_17
PIXf0_0_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_0_18
PIXf0_1_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_1_18
PIXf0_2_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_2_18
PIXf0_3_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x5
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_3_18
PIXf0_4_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x43
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_66: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf0_4_18
PIXf0_5_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_18
PIXf0_6_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_18
PIXf0_7_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_18
PIXf0_8_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x4
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 jmp PIXf0_8_18
PIXf0_9_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x6f
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_110: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_9_18
PIXf0_10_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x7e
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_125: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_10_18
PIXf0_11_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x8d
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_140: mov edi, 0x89
 mov eax, 1
 call PCJMP_f1
BBf1_141: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_11_18
PIXf0_12_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0xa
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x61
 mov eax, dword [reg_a1]
 jmp PIXf0_12_18
PIXf0_13_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_170: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_13_18
PIXf0_14_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
BBf1_188: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_189: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_14_18
PIXf0_15_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_208: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_209: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_15_18
PIXf0_16_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xe0
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_223: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_16_18
PIXf0_17_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_238: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_17_18
PIXf0_18_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_18_18
PIXf0_19_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_18
PIXf0_20_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_20_18
PIXf0_21_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_280: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x11a
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_281: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_21_18
PIXf0_22_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_22_18
PIXf0_23_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_23_18
PIXf0_24_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x149
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_328: mov edi, 0x14a
 jmp PIXf0_24_18
PIXf0_25_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_336: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_25_18
PIXf0_26_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_26_18
PIXf0_27_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_18
PIXf0_28_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_28_18
PIXf0_29_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_29_18
PIXf0_30_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_388: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0x186
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_389: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf0_30_18
PIXf0_31_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x19a
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_409: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_31_18
PIXf0_32_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_32_18
PIXf0_33_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_33_18
PIXf0_34_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_454: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_34_18
PIXf0_35_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_35_18
PIXf0_36_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_472: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x3
 and dword [reg_sp1], 0xffffff
BBf1_473: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_36_18
PIXf0_37_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1f2
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_493: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 cmp dword [reg_a1], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1f1
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_494: mov eax, dword [reg_bp1]
 jmp PIXf0_37_18
PIXf0_38_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x73
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1fc
 jmp PIXf0_38_18
PIXf0_39_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffdd
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 jmp PIXf0_39_18
PIXf0_40_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_40_18
PIXf0_41_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_18
PIXf0_42_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_18
PIXf0_43_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_43_18
PIXf0_44_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_549: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0x2
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 jmp PIXf0_44_18
PIXf0_45_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_45_18
PIXf0_46_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x24b
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_586: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x13f
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_46_18
PIXf0_47_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x25c
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_603: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f1
BBf1_604: mov edi, 0x25e
 mov eax, 1
 call PCJMP_f1
BBf1_605: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f1
BBf1_606: mov edi, 0x254
 mov eax, 1
 call PCJMP_f1
BBf1_607: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_47_18
PIXf0_48_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 call PCJMP_f1
 call PCJMP_f1
 movzx eax, al
 mov edi, 0xb
 mov dword [reg_b1], eax
 call PCJMP_f1
 add dword [reg_d1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 add dword [reg_d1], 0xffffff
 mov dword [reg_d1], eax
 call PCJMP_f1
 mov edi, dword [reg_a1]
 mov eax, 1
 mov dword [reg_b1], eax
 call PCJMP_f1
 mov eax, dword [reg_sp1]
 mov eax, 1
 mov eax, dword [mem1 + 4*eax]
 mov eax, dword [mem1 + 4*eax]
 mov eax, 1
 mov eax, dword [reg_sp1]
 call PCJMP_f1
 call PCJMP_f1
 jmp PIXf0_48_18
PIXf0_0_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffd0
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 jmp PIXf0_0_19
PIXf0_1_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_17: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_1_19
PIXf0_2_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1f
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_30: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_2_19
PIXf0_3_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_45: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x18
 mov eax, dword [reg_a1]
 jmp PIXf0_3_19
PIXf0_4_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_4_19
PIXf0_5_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_19
PIXf0_6_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_19
PIXf0_7_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_19
PIXf0_8_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_94: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x18
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_8_19
PIXf0_9_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf0_9_19
PIXf0_10_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 jmp PIXf0_10_19
PIXf0_11_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_142: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 jmp PIXf0_11_19
PIXf0_12_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
BBf1_152: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_12_19
PIXf0_13_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_171: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_13_19
PIXf0_14_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_190: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 jmp PIXf0_14_19
PIXf0_15_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_210: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_15_19
PIXf0_16_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_224: mov eax, dword [reg_b1]
 jmp PIXf0_16_19
PIXf0_17_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_17_19
PIXf0_18_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_18_19
PIXf0_19_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_19
PIXf0_20_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 jmp PIXf0_20_19
PIXf0_21_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_21_19
PIXf0_22_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x39
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_22_19
PIXf0_23_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x138
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f1
BBf1_312: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_23_19
PIXf0_24_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_329: mov edi, 0x14c
 mov eax, 1
 call PCJMP_f1
BBf1_330: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_24_19
PIXf0_25_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_25_19
PIXf0_26_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_26_19
PIXf0_27_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_19
PIXf0_28_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_28_19
PIXf0_29_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_29_19
PIXf0_30_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_390: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0x188
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_391: mov edi, 0x189
 mov eax, 1
 call PCJMP_f1
BBf1_392: mov edi, 0x18e
 mov eax, 1
 call PCJMP_f1
BBf1_393: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 jmp PIXf0_30_19
PIXf0_31_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_31_19
PIXf0_32_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1aa
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_32_19
PIXf0_33_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_442: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_33_19
PIXf0_34_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_34_19
PIXf0_35_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_464: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_35_19
PIXf0_36_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 jmp PIXf0_36_19
PIXf0_37_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_37_19
PIXf0_38_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_507: mov edi, 0x206
 mov eax, 1
 call PCJMP_f1
BBf1_508: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x63
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_38_19
PIXf0_39_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_39_19
PIXf0_40_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_40_19
PIXf0_41_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_19
PIXf0_42_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_19
PIXf0_43_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_43_19
PIXf0_44_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_44_19
PIXf0_45_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_45_19
PIXf0_46_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_587: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_46_19
PIXf0_47_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_47_19
PIXf0_48_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
 mov eax, dword [mem1 + 4*eax]
 add dword [reg_b1], 0x2
 call PCJMP_f1
 add dword [reg_d1], 0xffffff
 add dword [reg_sp1], 0x1
 mov edi, 0xe2
 mov eax, 1
 and dword [reg_b1], 0xffffff
 mov ecx, dword [reg_d1]
 mov eax, dword [mem1 + 4*eax]
 call PCJMP_f1
 call PCJMP_f1
 mov dword [reg_a1], eax
 call PCJMP_f1
 mov eax, 1
 call PCJMP_f1
 cmp dword [reg_a1], 0x0
 mov dword [reg_b1], eax
 add dword [reg_a1], 0x1
 and dword [reg_b1], 0xffffff
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_d1], eax
 call PCJMP_f1
 jmp PIXf0_48_19
PIXf0_0_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_0_20
PIXf0_1_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x13
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_18: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf0_1_20
PIXf0_2_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffe5
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_2_20
PIXf0_3_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x2f
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_46: mov edi, 0x30
 mov eax, 1
 call PCJMP_f1
BBf1_47: mov edi, 0x3b
 mov eax, 1
 call PCJMP_f1
BBf1_48: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 jmp PIXf0_3_20
PIXf0_4_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x44
 mov eax, 1
 call PCJMP_f1
BBf1_67: mov dword [reg_a1], 0x0
BBf1_68: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 jmp PIXf0_4_20
PIXf0_5_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_20
PIXf0_6_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_20
PIXf0_7_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_20
PIXf0_8_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x60
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_95: mov edi, 0x61
 mov eax, 1
 call PCJMP_f1
BBf1_96: mov edi, 0x67
 mov eax, 1
 call PCJMP_f1
BBf1_97: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_8_20
PIXf0_9_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x70
 mov eax, 1
 call PCJMP_f1
BBf1_111: mov dword [reg_a1], 0x0
BBf1_112: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x72
 cmp dword [reg_a1], 0x0
 sete  al
 jmp PIXf0_9_20
PIXf0_10_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf0_10_20
PIXf0_11_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_143: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x20
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffe0
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_11_20
PIXf0_12_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_12_20
PIXf0_13_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xad
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
 jmp PIXf0_13_20
PIXf0_14_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x61
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_14_20
PIXf0_15_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_211: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_15_20
PIXf0_16_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_16_20
PIXf0_17_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_17_20
PIXf0_18_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_18_20
PIXf0_19_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_19_20
PIXf0_20_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x10f
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_270: mov edi, 0x117
 mov eax, 1
 call PCJMP_f1
BBf1_271: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 jmp PIXf0_20_20
PIXf0_21_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov edi, 0x11b
 mov eax, 1
 call PCJMP_f1
BBf1_282: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
BBf1_283: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_21_20
PIXf0_22_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_298: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0x12e
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_299: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_22_20
PIXf0_23_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 jmp PIXf0_23_20
PIXf0_24_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 jmp PIXf0_24_20
PIXf0_25_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_25_20
PIXf0_26_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f1
BBf1_340: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x4
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_26_20
PIXf0_27_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_27_20
PIXf0_28_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_28_20
PIXf0_29_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_29_20
PIXf0_30_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_30_20
PIXf0_31_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_410: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_31_20
PIXf0_32_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f1
BBf1_426: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 jmp PIXf0_32_20
PIXf0_33_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_33_20
PIXf0_34_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_34_20
PIXf0_35_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_35_20
PIXf0_36_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 jmp PIXf0_36_20
PIXf0_37_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_37_20
PIXf0_38_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1fe
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_509: mov edi, 0x207
 mov eax, 1
 call PCJMP_f1
BBf1_510: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_38_20
PIXf0_39_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_39_20
PIXf0_40_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_40_20
PIXf0_41_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_20
PIXf0_42_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_42_20
PIXf0_43_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x21c
 jmp PIXf0_43_20
PIXf0_44_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x226
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f1
BBf1_550: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 jmp PIXf0_44_20
PIXf0_45_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, 0x4
 mov ecx, reg_a1
 int 0x80
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_569: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_45_20
PIXf0_46_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_588: mov eax, dword [reg_bp1]
 jmp PIXf0_46_20
PIXf0_47_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_47_20
PIXf0_48_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov edi, 0x17e
 add dword [reg_sp1], 0x2
 mov dword [reg_d1], eax
 mov dword [reg_b1], eax
 movzx eax, al
 mov eax, dword [reg_sp1]
 mov eax, dword [reg_bp1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, dword [reg_a1]
 add dword [reg_b1], 0x3
 and dword [reg_sp1], 0xffffff
 mov eax, 1
 mov eax, 1
 and dword [reg_d1], 0xffffff
 mov eax, 1
 add dword [reg_sp1], 0x1
 add dword [reg_sp1], 0x1
 setbe al
 mov dword [reg_a1], eax
 cmp dword [reg_a1], 0x0
 mov eax, 1
 mov eax, dword [reg_a1]
 and dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 jmp PIXf0_48_20
PIXf0_0_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf0_0_21
PIXf0_1_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_19: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 jmp PIXf0_1_21
PIXf0_2_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_2_21
PIXf0_3_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_3_21
PIXf0_4_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 jmp PIXf0_4_21
PIXf0_5_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_21
PIXf0_6_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_21
PIXf0_7_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_21
PIXf0_8_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_8_21
PIXf0_9_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_113: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_9_21
PIXf0_10_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_126: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 jmp PIXf0_10_21
PIXf0_11_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x20
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 jmp PIXf0_11_21
PIXf0_12_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x10
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_12_21
PIXf0_13_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_13_21
PIXf0_14_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_14_21
PIXf0_15_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_15_21
PIXf0_16_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_16_21
PIXf0_17_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_17_21
PIXf0_18_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_18_21
PIXf0_19_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_258: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x103
 jmp PIXf0_19_21
PIXf0_20_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x111
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_272: mov edi, 0x116
 mov eax, 1
 call PCJMP_f1
BBf1_273: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_20_21
PIXf0_21_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_21_21
PIXf0_22_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x3
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_22_21
PIXf0_23_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_23_21
PIXf0_24_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_24_21
PIXf0_25_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_25_21
PIXf0_26_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_26_21
PIXf0_27_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x157
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x134
 mov eax, 1
 jmp PIXf0_27_21
PIXf0_28_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_28_21
PIXf0_29_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_29_21
PIXf0_30_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_30_21
PIXf0_31_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_31_21
PIXf0_32_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_32_21
PIXf0_33_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_443: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_33_21
PIXf0_34_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_34_21
PIXf0_35_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_35_21
PIXf0_36_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1e2
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_474: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_475: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 jmp PIXf0_36_21
PIXf0_37_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_37_21
PIXf0_38_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_38_21
PIXf0_39_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_39_21
PIXf0_40_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_40_21
PIXf0_41_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_41_21
PIXf0_42_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_42_21
PIXf0_43_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f1
BBf1_540: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x4
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_43_21
PIXf0_44_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_44_21
PIXf0_45_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x235
 mov eax, 1
 call PCJMP_f1
 jmp PIXf0_45_21
PIXf0_46_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_589: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_46_21
PIXf0_47_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_47_21
PIXf0_48_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
 mov eax, 1
 mov eax, dword [reg_sp1]
 mov edi, 0xbc
 mov dword [reg_sp1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 add dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov dword [reg_b1], eax
 mov eax, dword [mem1 + 4*eax]
 call PCJMP_f1
 mov eax, dword [mem1 + 4*eax]
 mov eax, dword [reg_d1]
 movzx eax, al
 mov ecx, dword [reg_d1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 sete  al
 jmp PIXf0_48_21
PIXf0_0_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffce
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_0_22
PIXf0_1_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 jmp PIXf0_1_22
PIXf0_2_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_2_22
PIXf0_3_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_3_22
PIXf0_4_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x46
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_69: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_4_22
PIXf0_5_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_22
PIXf0_6_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_22
PIXf0_7_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_7_22
PIXf0_8_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_8_22
PIXf0_9_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_9_22
PIXf0_10_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_10_22
PIXf0_11_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_11_22
PIXf0_12_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_12_22
PIXf0_13_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_13_22
PIXf0_14_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_14_22
PIXf0_15_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_15_22
PIXf0_16_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_16_22
PIXf0_17_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_17_22
PIXf0_18_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0xfb
 jmp PIXf0_18_22
PIXf0_19_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f1
BBf1_259: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x105
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_260: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_19_22
PIXf0_20_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x114
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_274: mov dword [reg_a1], 0x1
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffa
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_20_22
PIXf0_21_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
BBf1_284: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 jmp PIXf0_21_22
PIXf0_22_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x12c
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f1
BBf1_300: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 jmp PIXf0_22_22
PIXf0_23_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_23_22
PIXf0_24_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_24_22
PIXf0_25_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 jmp PIXf0_25_22
PIXf0_26_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_26_22
PIXf0_27_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_343: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x4
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_344: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_27_22
PIXf0_28_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_28_22
PIXf0_29_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_29_22
PIXf0_30_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_30_22
PIXf0_31_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_31_22
PIXf0_32_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_32_22
PIXf0_33_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_33_22
PIXf0_34_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_34_22
PIXf0_35_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_35_22
PIXf0_36_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_36_22
PIXf0_37_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_37_22
PIXf0_38_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_38_22
PIXf0_39_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_39_22
PIXf0_40_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_40_22
PIXf0_41_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x214
 mov eax, 1
 call PCJMP_f1
BBf1_530: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_41_22
PIXf0_42_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_42_22
PIXf0_43_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_541: mov eax, dword [reg_bp1]
 jmp PIXf0_43_22
PIXf0_44_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_551: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 jmp PIXf0_44_22
PIXf0_45_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_570: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 jmp PIXf0_45_22
PIXf0_46_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, 0x4
 mov ecx, reg_a1
 int 0x80
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_46_22
PIXf0_47_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_47_22
PIXf0_48_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 and dword [reg_sp1], 0xffffff
 mov dword [reg_b1], eax
 sete  al
 mov ecx, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], eax
 mov eax, 1
 call PCJMP_f1
 mov dword [reg_a1], eax
 mov eax, 1
 call PCJMP_f1
 mov eax, dword [reg_a1]
 mov eax, dword [reg_sp1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 sete  al
 mov eax, dword [reg_a1]
 add dword [reg_sp1], 0x1
 mov dword [mem1 + 4*ecx], eax
 mov eax, 1
 mov eax, dword [reg_sp1]
 jmp PIXf0_48_22
PIXf0_0_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_7: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_0_23
PIXf0_1_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov edi, 0x15
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_20: mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
 jmp PIXf0_1_23
PIXf0_2_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffcd
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_2_23
PIXf0_3_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_3_23
PIXf0_4_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_4_23
PIXf0_5_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_5_23
PIXf0_6_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_6_23
PIXf0_7_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 setb  al
 jmp PIXf0_7_23
PIXf0_8_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_8_23
PIXf0_9_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_9_23
PIXf0_10_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_10_23
PIXf0_11_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_11_23
PIXf0_12_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_12_23
PIXf0_13_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_13_23
PIXf0_14_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_14_23
PIXf0_15_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_212: mov eax, dword [reg_sp1]
 jmp PIXf0_15_23
PIXf0_16_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xe2
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_225: mov dword [reg_a1], 0x24
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 jmp PIXf0_16_23
PIXf0_17_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xf0
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_239: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_17_23
PIXf0_18_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_250: mov dword [reg_a1], 0x8
 mov edi, 0xfc
 mov eax, 1
 call PCJMP_f1
BBf1_251: mov dword [reg_a1], 0xa
BBf1_252: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_253: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x101
 cmp dword [reg_a1], 0x0
 sete  al
 jmp PIXf0_18_23
PIXf0_19_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 jmp PIXf0_19_23
PIXf0_20_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_20_23
PIXf0_21_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, 1
 call PCJMP_f1
BBf1_285: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_286: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 jmp PIXf0_21_23
PIXf0_22_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_22_23
PIXf0_23_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_23_23
PIXf0_24_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 jmp PIXf0_24_23
PIXf0_25_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_337: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f1
BBf1_338: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_25_23
PIXf0_26_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_26_23
PIXf0_27_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_345: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_27_23
PIXf0_28_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_28_23
PIXf0_29_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, 0x170
 mov eax, 1
 call PCJMP_f1
BBf1_372: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x176
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_373: mov edi, 0x177
 mov eax, 1
 call PCJMP_f1
BBf1_374: mov edi, 0x179
 mov eax, 1
 jmp PIXf0_29_23
PIXf0_30_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_30_23
PIXf0_31_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_31_23
PIXf0_32_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_32_23
PIXf0_33_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_33_23
PIXf0_34_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_34_23
PIXf0_35_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_35_23
PIXf0_36_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_36_23
PIXf0_37_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_37_23
PIXf0_38_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 jmp PIXf0_38_23
PIXf0_39_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 jmp PIXf0_39_23
PIXf0_40_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_526: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffdc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_40_23
PIXf0_41_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_41_23
PIXf0_42_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_42_23
PIXf0_43_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_542: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_43_23
PIXf0_44_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_552: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0x3
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_44_23
PIXf0_45_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_571: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_572: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_45_23
PIXf0_46_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_590: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_46_23
PIXf0_47_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_608: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_609: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 jmp PIXf0_47_23
PIXf0_48_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 add dword [reg_sp1], 0x1
 mov eax, dword [reg_b1]
 mov eax, dword [reg_bp1]
 call PCJMP_f1
 mov eax, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_sp1], 0xffffff
 mov eax, dword [mem1 + 4*eax]
 mov eax, dword [reg_bp1]
 add dword [reg_sp1], 0x1
 movzx eax, al
 call PCJMP_f1
 mov dword [reg_a1], eax
 mov dword [reg_a1], eax
 mov eax, 1
 mov eax, 1
 mov dword [reg_a1], eax
 mov dword [reg_b1], eax
 add dword [reg_a1], 0x1
 mov eax, 1
 mov edi, 0x161
 call PCJMP_f1
 mov eax, dword [reg_d1]
 jmp PIXf0_48_23
PIXf0_0_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x2
 mov eax, 1
 call PCJMP_f1
BBf1_8: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcd
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_9: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffe8
 jmp PIXf0_0_24
PIXf0_1_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_21: mov dword [reg_a1], 0x0
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_1_24
PIXf0_2_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_2_24
PIXf0_3_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x32
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
 jmp PIXf0_3_24
PIXf0_4_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x1
 mov edi, 0x47
 mov eax, 1
 call PCJMP_f1
BBf1_70: mov dword [reg_a1], 0x0
BBf1_71: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 jmp PIXf0_4_24
PIXf0_5_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_75: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_5_24
PIXf0_6_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_78: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 jmp PIXf0_6_24
PIXf0_7_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x51
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_80: mov edi, 0x52
 mov eax, 1
 call PCJMP_f1
BBf1_81: mov edi, 0x5b
 mov eax, 1
 call PCJMP_f1
BBf1_82: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_7_24
PIXf0_8_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 jmp PIXf0_8_24
PIXf0_9_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_9_24
PIXf0_10_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_10_24
PIXf0_11_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_11_24
PIXf0_12_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x99
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f1
BBf1_153: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 jmp PIXf0_12_24
PIXf0_13_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_172: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x39
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_13_24
PIXf0_14_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xc0
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_191: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 jmp PIXf0_14_24
PIXf0_15_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov dword [reg_b1], 0x148
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 jmp PIXf0_15_24
PIXf0_16_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_226: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0xe6
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_227: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 jmp PIXf0_16_24
PIXf0_17_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x10
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_240: mov eax, dword [reg_b1]
 jmp PIXf0_17_24
PIXf0_18_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_254: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff9
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_18_24
PIXf0_19_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f1
BBf1_261: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x106
 mov eax, dword [reg_sp1]
 jmp PIXf0_19_24
PIXf0_20_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x113
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f1
BBf1_275: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 jmp PIXf0_20_24
PIXf0_21_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 jmp PIXf0_21_24
PIXf0_22_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_22_24
PIXf0_23_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 jmp PIXf0_23_24
PIXf0_24_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 jmp PIXf0_24_24
PIXf0_25_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_25_24
PIXf0_26_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x155
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_26_24
PIXf0_27_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 jmp PIXf0_27_24
PIXf0_28_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 jmp PIXf0_28_24
PIXf0_29_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 call PCJMP_f1
BBf1_375: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 jmp PIXf0_29_24
PIXf0_30_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_30_24
PIXf0_31_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 jmp PIXf0_31_24
PIXf0_32_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1ab
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 jmp PIXf0_32_24
PIXf0_33_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_33_24
PIXf0_34_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_34_24
PIXf0_35_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_35_24
PIXf0_36_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 jmp PIXf0_36_24
PIXf0_37_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x1f0
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_495: mov dword [reg_a1], 0x1
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_37_24
PIXf0_38_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x25
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x200
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
 jmp PIXf0_38_24
PIXf0_39_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffdd
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_39_24
PIXf0_40_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x20f
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x168
 mov eax, 1
 call PCJMP_f1
BBf1_527: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 jmp PIXf0_40_24
PIXf0_41_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 jmp PIXf0_41_24
PIXf0_42_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_535: mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 jmp PIXf0_42_24
PIXf0_43_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 sub dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0x3
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 jmp PIXf0_43_24
PIXf0_44_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 jmp PIXf0_44_24
PIXf0_45_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x23d
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 jmp PIXf0_45_24
PIXf0_46_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_591: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 jmp PIXf0_46_24
PIXf0_47_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], 0x141
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x262
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 jmp PIXf0_47_24
PIXf0_48_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 call PCJMP_f1
 mov dword [reg_d1], eax
 mov eax, 1
 mov eax, dword [mem1 + 4*eax]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov eax, dword [reg_b1]
 add dword [reg_b1], 0x2
 movzx eax, al
 cmp dword [reg_a1], 0x0
 mov dword [reg_sp1], eax
 mov eax, dword [mem1 + 4*eax]
 mov eax, ebx
 mov ecx, dword [reg_b1]
 mov eax, 1
 mov eax, 1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, 1
 call PCJMP_f1
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov dword [reg_a1], eax
 jmp PIXf0_48_24
PIXf0_0_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffcf
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov esi, 1
 jmp PIX_END_f1
PIXf0_1_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_22: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffe5
 and dword [reg_a1], 0xffffff
 mov esi, 2
 jmp PIX_END_f1
PIXf0_2_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov esi, 3
 jmp PIX_END_f1
PIXf0_3_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_49: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov esi, 4
 jmp PIX_END_f1
PIXf0_4_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov edi, 0x49
 cmp dword [reg_a1], 0x0
 setne al
 call PCJMP_f1
BBf1_72: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_73: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov edi, 0x4b
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_74: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 mov esi, 5
 jmp PIX_END_f1
PIXf0_5_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x3e
 mov eax, 1
 call PCJMP_f1
BBf1_76: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov esi, 6
 jmp PIX_END_f1
PIXf0_6_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 sub dword [reg_sp1], 0x5
 and dword [reg_sp1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_79: mov eax, dword [reg_bp1]
 mov esi, 7
 jmp PIX_END_f1
PIXf0_7_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 mov esi, 8
 jmp PIX_END_f1
PIXf0_8_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 mov esi, 9
 jmp PIX_END_f1
PIXf0_9_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 mov esi, 10
 jmp PIX_END_f1
PIXf0_10_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov edi, 0x76
 mov eax, 1
 call PCJMP_f1
BBf1_127: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov esi, 11
 jmp PIX_END_f1
PIXf0_11_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 sub dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov esi, 12
 jmp PIX_END_f1
PIXf0_12_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov edi, 0x9b
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_154: mov edi, 0x94
 mov eax, 1
 call PCJMP_f1
BBf1_155: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 mov esi, 13
 jmp PIX_END_f1
PIXf0_13_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_173: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov esi, 14
 jmp PIX_END_f1
PIXf0_14_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], 0x7a
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setbe al
 movzx eax, al
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 cmp dword [reg_b1], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b1], eax
BBf1_192: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x1
 mov edi, 0xc4
 cmp dword [reg_a1], 0x0
 setne al
 mov esi, 15
 jmp PIX_END_f1
PIXf0_15_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 mov dword [reg_b1], 0x148
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 mov esi, 16
 jmp PIX_END_f1
PIXf0_16_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setne al
 movzx eax, al
 mov esi, 17
 jmp PIX_END_f1
PIXf0_17_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 mov dword [reg_b1], 0x0
 mov edi, 0xf2
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_241: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x30
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov esi, 18
 jmp PIX_END_f1
PIXf0_18_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x100
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_255: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffff9
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov esi, 19
 jmp PIX_END_f1
PIXf0_19_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f1
BBf1_262: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, 0x10c
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_263: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov esi, 20
 jmp PIX_END_f1
PIXf0_20_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov esi, 21
 jmp PIX_END_f1
PIXf0_21_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov esi, 22
 jmp PIX_END_f1
PIXf0_22_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x12d
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f1
BBf1_301: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 mov esi, 23
 jmp PIX_END_f1
PIXf0_23_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x139
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f1
BBf1_313: mov eax, dword [reg_b1]
 mov esi, 24
 jmp PIX_END_f1
PIXf0_24_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffb
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov esi, 25
 jmp PIX_END_f1
PIXf0_25_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffc
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x5
 and dword [reg_b1], 0xffffff
 mov esi, 26
 jmp PIX_END_f1
PIXf0_26_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f1
BBf1_341: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov esi, 27
 jmp PIX_END_f1
PIXf0_27_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x15b
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_346: mov edi, 0x15c
 mov eax, 1
 call PCJMP_f1
BBf1_347: mov edi, 0x15e
 mov eax, 1
 call PCJMP_f1
BBf1_348: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov esi, 28
 jmp PIX_END_f1
PIXf0_28_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov esi, 29
 jmp PIX_END_f1
PIXf0_29_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_c1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_a1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
BBf1_376: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov esi, 30
 jmp PIX_END_f1
PIXf0_30_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x18b
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_394: mov dword [reg_a1], 0x0
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 mov esi, 31
 jmp PIX_END_f1
PIXf0_31_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_b1]
 cmp dword [reg_a1], eax
 setb  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x19c
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_411: mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 mov esi, 32
 jmp PIX_END_f1
PIXf0_32_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f1
BBf1_427: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov esi, 33
 jmp PIX_END_f1
PIXf0_33_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffe
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
BBf1_444: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xffffff
 and dword [reg_b1], 0xffffff
 mov esi, 34
 jmp PIX_END_f1
PIXf0_34_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov esi, 35
 jmp PIX_END_f1
PIXf0_35_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 add dword [reg_a1], 0x1
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 mov esi, 36
 jmp PIX_END_f1
PIXf0_36_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov esi, 37
 jmp PIX_END_f1
PIXf0_37_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x2
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov esi, 38
 jmp PIX_END_f1
PIXf0_38_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
BBf1_511: mov edi, 0x208
 mov eax, 1
 call PCJMP_f1
BBf1_512: mov edi, 0x209
 mov eax, 1
 call PCJMP_f1
BBf1_513: mov edi, 0x1f2
 mov eax, 1
 call PCJMP_f1
BBf1_514: mov eax, dword [reg_bp1]
 mov dword [reg_a1], eax
 add dword [reg_a1], 0xffffdd
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_b1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 mov esi, 39
 jmp PIX_END_f1
PIXf0_39_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x1
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_b1]
 add dword [reg_a1], eax
 and dword [reg_a1], 0xffffff
 mov eax, dword [reg_a1]
 mov esi, 40
 jmp PIX_END_f1
PIXf0_40_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_b1], 0xffffda
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_b1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0xfffffd
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 cmp dword [reg_a1], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a1], eax
 mov edi, 0x214
 cmp dword [reg_a1], 0x0
 sete  al
 call PCJMP_f1
BBf1_528: mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov esi, 41
 jmp PIX_END_f1
PIXf0_41_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_c1]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x213
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov esi, 42
 jmp PIX_END_f1
PIXf0_42_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov edi, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
BBf1_536: mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_bp1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x4
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov esi, 43
 jmp PIX_END_f1
PIXf0_43_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_b1], eax
 add dword [reg_b1], 0x3
 and dword [reg_b1], 0xffffff
 mov eax, dword [reg_b1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov esi, 44
 jmp PIX_END_f1
PIXf0_44_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov dword [reg_a1], 0x229
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f1
BBf1_553: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x2
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov esi, 45
 jmp PIX_END_f1
PIXf0_45_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f1
BBf1_573: mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 mov esi, 46
 jmp PIX_END_f1
PIXf0_46_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 mov eax, dword [reg_sp1]
 mov dword [reg_d1], eax
 add dword [reg_d1], 0xffffff
 and dword [reg_d1], 0xffffff
 mov eax, dword [reg_a1]
 mov ecx, dword [reg_d1]
 mov dword [mem1 + 4*ecx], eax
 mov eax, dword [reg_d1]
 mov dword [reg_sp1], eax
 mov eax, 0x4
 mov ecx, reg_a1
 int 0x80
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_a1]
 mov dword [reg_b1], eax
 mov eax, dword [reg_bp1]
 mov dword [reg_sp1], eax
 mov eax, dword [reg_sp1]
 mov eax, dword [mem1 + 4*eax]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov esi, 47
 jmp PIX_END_f1
PIXf0_47_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [reg_sp1], eax
 mov edi, 0x225
 mov eax, 1
 call PCJMP_f1
BBf1_610: 
    
 jmp CONTROL_01
 mov eax, dword [reg_b1]
 mov dword [reg_a1], eax
 add dword [reg_sp1], 0x1
 and dword [reg_sp1], 0xffffff
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
BBf1_611: nop
 and dword [reg_b1], 0xffffff
 mov eax, 1
 sete  al
 mov eax, dword [reg_b1]
 call PCJMP_f1
 add dword [reg_sp1], 0x1
 mov dword [reg_sp1], eax
 mov dword [reg_a1], eax
 mov eax, dword [mem1 + 4*eax]
 mov eax, 1
 mov eax, dword [reg_a1]
 and dword [reg_sp1], 0xffffff
 mov eax, dword [reg_sp1]
 mov esi, 48
 jmp PIX_END_f1
PIXf0_48_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem1]
 mov dword [mem1 + 4*ecx], eax
 call PCJMP_f1
 mov dword [reg_a1], eax
 mov eax, dword [reg_bp1]
 mov eax, dword [reg_sp1]
 call PCJMP_f1
 add dword [reg_sp1], 0x1
 add dword [reg_sp1], 0x1
 mov eax, dword [reg_d1]
 mov eax, dword [reg_a1]
 mov eax, 1
 call PCJMP_f1
 mov eax, dword [reg_a1]
 mov eax, dword [mem1 + 4*eax]
 cmp dword [reg_a1], 0x0
 mov eax, dword [reg_a1]
 mov dword [reg_bp1], eax
 and dword [reg_b1], 0xffffff
 mov ecx, dword [reg_d1]
 cmp dword [reg_b1], 0x0
 mov dword [reg_a1], eax
 add dword [reg_a1], 0x1
 mov dword [reg_d1], eax
 call PCJMP_f1
 mov esi, 49
 jmp PIX_END_f1
PIX_PAD_f1_0: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_1
PIX_PAD_f1_1: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_2
PIX_PAD_f1_2: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_3
PIX_PAD_f1_3: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_4
PIX_PAD_f1_4: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_5
PIX_PAD_f1_5: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_6
PIX_PAD_f1_6: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_7
PIX_PAD_f1_7: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_8
PIX_PAD_f1_8: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_9
PIX_PAD_f1_9: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_10
PIX_PAD_f1_10: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_11
PIX_PAD_f1_11: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_12
PIX_PAD_f1_12: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_13
PIX_PAD_f1_13: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_14
PIX_PAD_f1_14: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_15
PIX_PAD_f1_15: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_16
PIX_PAD_f1_16: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_17
PIX_PAD_f1_17: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_18
PIX_PAD_f1_18: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_19
PIX_PAD_f1_19: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_20
PIX_PAD_f1_20: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_21
PIX_PAD_f1_21: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_22
PIX_PAD_f1_22: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_23
PIX_PAD_f1_23: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f1_24
PIX_PAD_f1_24: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_END_f1
PIX_END_f1:
jmp PIX_START_f1

CONTROL_01: 
    ; int 0x3
    mov eax, 1
    call BBf0_3

BBf0_2:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0


; SECOND FUNCTION
BBf0_3:
  mov ebx, 0x1 ; fd
  mov edx, 1 ; len
  mov edi, 0
  mov eax, 1
func_2:
 PCJMP_f2:
  ; int 0x3
  cmp eax, 1
  je _PCJMP_f2
  ret
 _PCJMP_f2:
  pop eax
  mov eax, [JMP_TABLE_f2 + 4*edi]
  sub eax, 0xabad1dea
  jz PIX_START_f2
  jmp eax
PIX_START_f2:
 mov esi, [PIX_TABLE_f2 + 4*esi]
 jmp esi
PIXf2_0_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_0: mov edi, 0x261
 mov eax, 1
 call PCJMP_f2
BBf2_1: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x34
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_0_1
PIXf2_1_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_1_1
PIXf2_2_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 jmp PIXf2_2_1
PIXf2_3_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_3_1
PIXf2_4_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f2
BBf2_39: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_4_1
PIXf2_5_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x36
 mov eax, 1
 call PCJMP_f2
BBf2_53: mov dword [reg_a2], 0x0
BBf2_54: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 jmp PIXf2_5_1
PIXf2_6_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x47
 mov eax, 1
 call PCJMP_f2
BBf2_70: mov dword [reg_a2], 0x0
BBf2_71: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 jmp PIXf2_6_1
PIXf2_7_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_7_1
PIXf2_8_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_8_1
PIXf2_9_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 jmp PIXf2_9_1
PIXf2_10_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x7c
 mov eax, 1
 call PCJMP_f2
BBf2_123: mov dword [reg_a2], 0x0
BBf2_124: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 jmp PIXf2_10_1
PIXf2_11_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 jmp PIXf2_11_1
PIXf2_12_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x97
 jmp PIXf2_12_1
PIXf2_13_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_170: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 jmp PIXf2_13_1
PIXf2_14_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 jmp PIXf2_14_1
PIXf2_15_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_210: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 jmp PIXf2_15_1
PIXf2_16_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_16_1
PIXf2_17_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_231: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_17_1
PIXf2_18_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 jmp PIXf2_18_1
PIXf2_19_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov edi, 0x10b
 mov eax, 1
 call PCJMP_f2
BBf2_266: mov dword [reg_a2], 0x61
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_19_1
PIXf2_20_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_20_1
PIXf2_21_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 jmp PIXf2_21_1
PIXf2_22_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_307: mov eax, dword [reg_bp2]
 jmp PIXf2_22_1
PIXf2_23_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov dword [reg_a2], 0x13b
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, dword [reg_c2]
 mov eax, 1
 call PCJMP_f2
BBf2_315: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_23_1
PIXf2_24_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_24_1
PIXf2_25_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_25_1
PIXf2_26_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x157
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f2
BBf2_343: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_26_1
PIXf2_27_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x163
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_27_1
PIXf2_28_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x169
 mov eax, 1
 call PCJMP_f2
BBf2_365: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_28_1
PIXf2_29_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_390: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0x188
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_391: mov edi, 0x189
 mov eax, 1
 call PCJMP_f2
BBf2_392: mov edi, 0x18e
 mov eax, 1
 jmp PIXf2_29_1
PIXf2_30_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_30_1
PIXf2_31_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 jmp PIXf2_31_1
PIXf2_32_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_32_1
PIXf2_33_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 jmp PIXf2_33_1
PIXf2_34_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 sub dword [reg_a2], 0x1
 jmp PIXf2_34_1
PIXf2_35_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_35_1
PIXf2_36_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f2
BBf2_487: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, 0x4
 mov ecx, reg_a2
 int 0x80
 add dword [reg_sp2], 0x1
 jmp PIXf2_36_1
PIXf2_37_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x75
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1f8
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_503: mov edi, 0x202
 jmp PIXf2_37_1
PIXf2_38_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_38_1
PIXf2_39_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_529: mov dword [reg_a2], 0x1
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_39_1
PIXf2_40_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_40_1
PIXf2_41_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x226
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f2
BBf2_550: mov eax, dword [reg_b2]
 jmp PIXf2_41_1
PIXf2_42_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_565: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_42_1
PIXf2_43_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f2
BBf2_573: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_43_1
PIXf2_44_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov dword [reg_b2], 0x13f
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 jmp PIXf2_44_1
PIXf2_45_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 jmp PIXf2_45_1
PIXf2_46_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [mem2 + 4*eax]
 call PCJMP_f2
 call PCJMP_f2
 and dword [reg_a2], 0xffffff
 mov dword [reg_bp2], eax
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], eax
 mov eax, 1
 sete  al
 mov eax, dword [reg_a2]
 and dword [reg_b2], 0xffffff
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [mem2 + 4*ecx], eax
 add dword [reg_sp2], 0x1
 and dword [reg_d2], 0xffffff
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_sp2], eax
 mov dword [reg_b2], eax
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_bp2]
 mov eax, 1
 sete  al
 jmp PIXf2_46_1
PIXf2_0_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffd0
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 jmp PIXf2_0_2
PIXf2_1_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 jmp PIXf2_1_2
PIXf2_2_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov edi, 0x15
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_20: mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_2_2
PIXf2_3_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_3_2
PIXf2_4_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_40: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_4_2
PIXf2_5_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0x38
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_55: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_56: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0x3a
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_5_2
PIXf2_6_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x49
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_72: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_73: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0x4b
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_74: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_6_2
PIXf2_7_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0x1
 mov edi, 0x55
 mov eax, 1
 call PCJMP_f2
BBf2_84: mov dword [reg_a2], 0x0
BBf2_85: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_7_2
PIXf2_8_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_8_2
PIXf2_9_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x70
 mov eax, 1
 call PCJMP_f2
BBf2_111: mov dword [reg_a2], 0x0
BBf2_112: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x72
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_113: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 jmp PIXf2_9_2
PIXf2_10_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x7e
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_125: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 jmp PIXf2_10_2
PIXf2_11_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x8b
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_11_2
PIXf2_12_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_150: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_12_2
PIXf2_13_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_171: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 jmp PIXf2_13_2
PIXf2_14_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xc3
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_194: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x5a
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_14_2
PIXf2_15_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_211: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, ebx
 mov ebx, 0x0
 jmp PIXf2_15_2
PIXf2_16_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_16_2
PIXf2_17_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_17_2
PIXf2_18_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x2
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_18_2
PIXf2_19_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
BBf2_267: mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_19_2
PIXf2_20_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov edi, 0x11b
 mov eax, 1
 call PCJMP_f2
BBf2_282: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
BBf2_283: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_20_2
PIXf2_21_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_21_2
PIXf2_22_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_308: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_22_2
PIXf2_23_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x13d
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_316: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_23_2
PIXf2_24_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_24_2
PIXf2_25_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_25_2
PIXf2_26_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_344: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 jmp PIXf2_26_2
PIXf2_27_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_354: mov edi, 0x164
 mov eax, 1
 call PCJMP_f2
BBf2_355: mov edi, 0x166
 mov eax, 1
 call PCJMP_f2
BBf2_356: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_27_2
PIXf2_28_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_366: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_28_2
PIXf2_29_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_393: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 jmp PIXf2_29_2
PIXf2_30_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x191
 mov eax, 1
 jmp PIXf2_30_2
PIXf2_31_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_434: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_31_2
PIXf2_32_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_449: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_32_2
PIXf2_33_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 jmp PIXf2_33_2
PIXf2_34_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 jmp PIXf2_34_2
PIXf2_35_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_466: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_35_2
PIXf2_36_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_488: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_36_2
PIXf2_37_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_504: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x78
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_37_2
PIXf2_38_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 jmp PIXf2_38_2
PIXf2_39_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 jmp PIXf2_39_2
PIXf2_40_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x21c
 mov eax, dword [reg_sp2]
 jmp PIXf2_40_2
PIXf2_41_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_41_2
PIXf2_42_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x237
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_566: mov edi, 0x238
 mov eax, 1
 call PCJMP_f2
BBf2_567: mov edi, 0x23a
 mov eax, 1
 call PCJMP_f2
BBf2_568: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 jmp PIXf2_42_2
PIXf2_43_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_574: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_b2], 0x13f
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_43_2
PIXf2_44_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_581: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 jmp PIXf2_44_2
PIXf2_45_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_45_2
PIXf2_46_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_bp2], eax
 mov eax, 1
 call PCJMP_f2
 mov eax, 1
 call PCJMP_f2
 mov dword [reg_b2], eax
 mov eax, dword [reg_a2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 mov eax, dword [mem2 + 4*eax]
 and dword [reg_sp2], 0xffffff
 and dword [reg_sp2], 0xffffff
 and dword [reg_sp2], 0xffffff
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_a2]
 movzx eax, al
 add dword [reg_sp2], 0x1
 call PCJMP_f2
 mov eax, dword [reg_a2]
 mov edi, dword [reg_a2]
 mov eax, dword [reg_d2]
 and dword [reg_d2], 0xffffff
 add dword [reg_d2], 0xffffff
 call PCJMP_f2
 jmp PIXf2_46_2
PIXf2_0_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_0_3
PIXf2_1_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_1_3
PIXf2_2_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_21: mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_2_3
PIXf2_3_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1f
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_30: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_3_3
PIXf2_4_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_41: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xfffffe
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_4_3
PIXf2_5_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_57: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_5_3
PIXf2_6_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_6_3
PIXf2_7_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 jmp PIXf2_7_3
PIXf2_8_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_8_3
PIXf2_9_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_9_3
PIXf2_10_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_10_3
PIXf2_11_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f2
BBf2_139: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x8d
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_11_3
PIXf2_12_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov edi, 0x98
 mov eax, 1
 call PCJMP_f2
BBf2_151: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 jmp PIXf2_12_3
PIXf2_13_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xad
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_172: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_13_3
PIXf2_14_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_195: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_196: mov eax, dword [reg_b2]
 jmp PIXf2_14_3
PIXf2_15_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 int 0x80
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_212: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 jmp PIXf2_15_3
PIXf2_16_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xda
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f2
BBf2_218: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_16_3
PIXf2_17_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xe8
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f2
BBf2_232: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_17_3
PIXf2_18_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_18_3
PIXf2_19_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f2
BBf2_268: mov edi, 0x117
 mov eax, 1
 call PCJMP_f2
BBf2_269: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_19_3
PIXf2_20_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_284: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 jmp PIXf2_20_3
PIXf2_21_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0x12a
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_297: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_21_3
PIXf2_22_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x6
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_22_3
PIXf2_23_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_23_3
PIXf2_24_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 jmp PIXf2_24_3
PIXf2_25_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_25_3
PIXf2_26_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 sub dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_345: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_26_3
PIXf2_27_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 jmp PIXf2_27_3
PIXf2_28_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_367: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 jmp PIXf2_28_3
PIXf2_29_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x18b
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
 jmp PIXf2_29_3
PIXf2_30_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_413: mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_414: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_30_3
PIXf2_31_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_31_3
PIXf2_32_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1c3
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
 jmp PIXf2_32_3
PIXf2_33_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov edi, 0x1ca
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_455: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_33_3
PIXf2_34_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_34_3
PIXf2_35_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_35_3
PIXf2_36_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x26
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 jmp PIXf2_36_3
PIXf2_37_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1fa
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_505: mov edi, 0x204
 mov eax, 1
 call PCJMP_f2
BBf2_506: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_37_3
PIXf2_38_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffdd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_38_3
PIXf2_39_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_39_3
PIXf2_40_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f2
BBf2_540: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 jmp PIXf2_40_3
PIXf2_41_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_551: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_41_3
PIXf2_42_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 jmp PIXf2_42_3
PIXf2_43_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_43_3
PIXf2_44_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_582: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_44_3
PIXf2_45_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x25a
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_599: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x259
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_600: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_45_3
PIXf2_46_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
 mov eax, 1
 add dword [reg_d2], 0xffffff
 mov eax, dword [reg_d2]
 mov ecx, dword [reg_d2]
 mov dword [reg_a2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 cmp dword [reg_b2], 0x0
 call PCJMP_f2
 mov eax, 1
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], 0x1
 call PCJMP_f2
 mov dword [reg_a2], eax
 mov dword [mem2 + 4*ecx], eax
 and dword [reg_sp2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_bp2]
 mov eax, dword [reg_a2]
 and dword [reg_d2], 0xffffff
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_46_3
PIXf2_0_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_2: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_0_4
PIXf2_1_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xb
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_10: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_1_4
PIXf2_2_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_22: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffe5
 and dword [reg_a2], 0xffffff
 jmp PIXf2_2_4
PIXf2_3_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffe5
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_3_4
PIXf2_4_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_4_4
PIXf2_5_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_58: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_5_4
PIXf2_6_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_75: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_6_4
PIXf2_7_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x57
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_86: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_7_4
PIXf2_8_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x63
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_98: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_8_4
PIXf2_9_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_9_4
PIXf2_10_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_10_4
PIXf2_11_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_140: mov edi, 0x89
 mov eax, 1
 call PCJMP_f2
BBf2_141: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_11_4
PIXf2_12_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x61
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_12_4
PIXf2_13_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x39
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 jmp PIXf2_13_4
PIXf2_14_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_197: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_14_4
PIXf2_15_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_b2], 0x148
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_b2], 0x148
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_15_4
PIXf2_16_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xdb
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f2
BBf2_219: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_16_4
PIXf2_17_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0xea
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_233: mov edi, 0xe7
 mov eax, 1
 call PCJMP_f2
BBf2_234: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x2d
 mov eax, dword [reg_a2]
 jmp PIXf2_17_4
PIXf2_18_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0x10
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_248: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 jmp PIXf2_18_4
PIXf2_19_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x10f
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
 jmp PIXf2_19_4
PIXf2_20_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_285: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 jmp PIXf2_20_4
PIXf2_21_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 jmp PIXf2_21_4
PIXf2_22_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x136
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_309: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_22_4
PIXf2_23_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x13e
 mov eax, 1
 call PCJMP_f2
BBf2_317: mov edi, 0x13f
 jmp PIXf2_23_4
PIXf2_24_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 jmp PIXf2_24_4
PIXf2_25_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_25_4
PIXf2_26_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x15b
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_346: mov edi, 0x15c
 jmp PIXf2_26_4
PIXf2_27_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_27_4
PIXf2_28_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_368: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_28_4
PIXf2_29_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_394: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 jmp PIXf2_29_4
PIXf2_30_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_415: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
BBf2_416: mov eax, dword [reg_bp2]
 jmp PIXf2_30_4
PIXf2_31_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 jmp PIXf2_31_4
PIXf2_32_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_450: mov edi, 0x1bc
 mov eax, 1
 call PCJMP_f2
BBf2_451: mov edi, 0x1bb
 mov eax, 1
 call PCJMP_f2
BBf2_452: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_453: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_32_4
PIXf2_33_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 jmp PIXf2_33_4
PIXf2_34_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_461: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_34_4
PIXf2_35_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_35_4
PIXf2_36_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_489: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_36_4
PIXf2_37_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x73
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1fc
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_507: mov edi, 0x206
 mov eax, 1
 call PCJMP_f2
BBf2_508: mov eax, dword [reg_bp2]
 jmp PIXf2_37_4
PIXf2_38_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_38_4
PIXf2_39_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x214
 mov eax, 1
 call PCJMP_f2
BBf2_530: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_39_4
PIXf2_40_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_541: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 jmp PIXf2_40_4
PIXf2_41_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_552: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0x3
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_41_4
PIXf2_42_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 jmp PIXf2_42_4
PIXf2_43_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x244
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_575: mov dword [reg_b2], 0x140
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x241
 cmp dword [reg_a2], 0x0
 jmp PIXf2_43_4
PIXf2_44_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x247
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_44_4
PIXf2_45_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_601: mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_602: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_45_4
PIXf2_46_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 cmp dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_sp2]
 mov dword [reg_a2], eax
 mov ecx, dword [reg_b2]
 mov eax, dword [reg_b2]
 call PCJMP_f2
 add dword [reg_d2], 0xffffff
 mov eax, 1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_d2]
 mov dword [reg_a2], eax
 call PCJMP_f2
 add dword [reg_sp2], 0x1
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 add dword [reg_sp2], 0x1
 mov dword [reg_b2], eax
 and dword [reg_a2], 0xffffff
 call PCJMP_f2
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_sp2], eax
 jmp PIXf2_46_4
PIXf2_0_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffe8
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_0_5
PIXf2_1_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_1_5
PIXf2_2_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_2_5
PIXf2_3_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_3_5
PIXf2_4_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x2a
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_4_5
PIXf2_5_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x2d
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_5_5
PIXf2_6_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x3e
 mov eax, 1
 call PCJMP_f2
BBf2_76: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 jmp PIXf2_6_5
PIXf2_7_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x58
 mov eax, 1
 call PCJMP_f2
BBf2_87: mov dword [reg_a2], 0x0
BBf2_88: mov eax, dword [reg_bp2]
 jmp PIXf2_7_5
PIXf2_8_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 jmp PIXf2_8_5
PIXf2_9_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 jmp PIXf2_9_5
PIXf2_10_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_10_5
PIXf2_11_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_11_5
PIXf2_12_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_12_5
PIXf2_13_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_173: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 jmp PIXf2_13_5
PIXf2_14_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_198: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_14_5
PIXf2_15_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_15_5
PIXf2_16_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_220: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_16_5
PIXf2_17_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xec
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_235: mov dword [reg_a2], 0x1
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_17_5
PIXf2_18_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_18_5
PIXf2_19_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_19_5
PIXf2_20_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_20_5
PIXf2_21_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_21_5
PIXf2_22_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_22_5
PIXf2_23_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_23_5
PIXf2_24_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_5
PIXf2_25_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_25_5
PIXf2_26_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_347: mov edi, 0x15e
 mov eax, 1
 call PCJMP_f2
BBf2_348: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_26_5
PIXf2_27_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_27_5
PIXf2_28_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x172
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_369: mov edi, 0x173
 mov eax, 1
 call PCJMP_f2
BBf2_370: mov edi, 0x174
 mov eax, 1
 call PCJMP_f2
BBf2_371: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_28_5
PIXf2_29_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_395: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 jmp PIXf2_29_5
PIXf2_30_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x1a2
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_417: mov edi, 0x1a3
 mov eax, 1
 call PCJMP_f2
BBf2_418: mov edi, 0x1a6
 mov eax, 1
 call PCJMP_f2
BBf2_419: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_30_5
PIXf2_31_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1b4
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_435: mov edi, 0x1b5
 mov eax, 1
 call PCJMP_f2
BBf2_436: mov edi, 0x1b8
 mov eax, 1
 call PCJMP_f2
BBf2_437: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 jmp PIXf2_31_5
PIXf2_32_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_5
PIXf2_33_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_5
PIXf2_34_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_462: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_34_5
PIXf2_35_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1d4
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_467: mov edi, 0x1d6
 mov eax, 1
 call PCJMP_f2
BBf2_468: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 sub dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 jmp PIXf2_35_5
PIXf2_36_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x1eb
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_490: mov edi, 0x1ec
 mov eax, 1
 call PCJMP_f2
BBf2_491: mov edi, 0x216
 mov eax, 1
 call PCJMP_f2
BBf2_492: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_36_5
PIXf2_37_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x63
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 jmp PIXf2_37_5
PIXf2_38_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffdd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 jmp PIXf2_38_5
PIXf2_39_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_39_5
PIXf2_40_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_542: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_40_5
PIXf2_41_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_41_5
PIXf2_42_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_5
PIXf2_43_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_43_5
PIXf2_44_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f2
BBf2_583: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_44_5
PIXf2_45_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_45_5
PIXf2_46_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov dword [reg_sp2], eax
 add dword [reg_sp2], 0x1
 mov dword [reg_bp2], eax
 mov eax, 1
 mov dword [reg_d2], eax
 mov dword [reg_b2], eax
 mov dword [reg_b2], eax
 call PCJMP_f2
 and dword [reg_sp2], 0xffffff
 mov dword [reg_d2], eax
 mov ecx, dword [reg_d2]
 mov eax, 1
 cmp dword [reg_a2], 0x0
 add dword [reg_sp2], 0x1
 mov dword [reg_a2], eax
 mov edi, 0xfc
 mov dword [reg_d2], eax
 mov dword [reg_a2], 0x0
 mov dword [reg_b2], eax
 mov dword [reg_b2], eax
 and dword [reg_b2], 0xffffff
 mov ecx, dword [reg_b2]
 mov dword [reg_bp2], eax
 call PCJMP_f2
 jmp PIXf2_46_5
PIXf2_0_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 jmp PIXf2_0_6
PIXf2_1_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_1_6
PIXf2_2_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_2_6
PIXf2_3_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_3_6
PIXf2_4_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_42: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_4_6
PIXf2_5_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_59: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 jmp PIXf2_5_6
PIXf2_6_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_77: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_6_6
PIXf2_7_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 jmp PIXf2_7_6
PIXf2_8_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x64
 mov eax, 1
 call PCJMP_f2
BBf2_99: mov dword [reg_a2], 0x0
BBf2_100: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_8_6
PIXf2_9_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 jmp PIXf2_9_6
PIXf2_10_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_10_6
PIXf2_11_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_11_6
PIXf2_12_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
BBf2_152: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_12_6
PIXf2_13_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_174: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_175: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_13_6
PIXf2_14_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xc7
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xbe
 jmp PIXf2_14_6
PIXf2_15_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x148
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 jmp PIXf2_15_6
PIXf2_16_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_16_6
PIXf2_17_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_17_6
PIXf2_18_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_18_6
PIXf2_19_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_19_6
PIXf2_20_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_20_6
PIXf2_21_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_21_6
PIXf2_22_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_22_6
PIXf2_23_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_23_6
PIXf2_24_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_6
PIXf2_25_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_6
PIXf2_26_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 jmp PIXf2_26_6
PIXf2_27_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_27_6
PIXf2_28_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x170
 mov eax, 1
 call PCJMP_f2
BBf2_372: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 jmp PIXf2_28_6
PIXf2_29_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_29_6
PIXf2_30_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_30_6
PIXf2_31_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_31_6
PIXf2_32_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_6
PIXf2_33_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_6
PIXf2_34_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 jmp PIXf2_34_6
PIXf2_35_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 movzx eax, al
 mov dword [reg_a2], eax
 jmp PIXf2_35_6
PIXf2_36_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x25
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1f2
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_36_6
PIXf2_37_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1fe
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_509: mov edi, 0x207
 mov eax, 1
 call PCJMP_f2
BBf2_510: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_37_6
PIXf2_38_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f2
BBf2_520: mov dword [reg_a2], 0x25
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffdd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_38_6
PIXf2_39_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_39_6
PIXf2_40_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0x3
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_40_6
PIXf2_41_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x229
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f2
BBf2_553: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 jmp PIXf2_41_6
PIXf2_42_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_6
PIXf2_43_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_43_6
PIXf2_44_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_584: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_585: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 jmp PIXf2_44_6
PIXf2_45_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_45_6
PIXf2_46_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
 and dword [reg_sp2], 0xffffff
 call PCJMP_f2
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_a2]
 add dword [reg_d2], 0xffffff
 mov eax, dword [reg_sp2]
 mov eax, 1
 add dword [reg_b2], 0xfffffe
 mov dword [reg_a2], eax
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [reg_bp2]
 add dword [reg_sp2], 0x1
 and dword [reg_d2], 0xffffff
 mov eax, dword [mem2 + 4*eax]
 mov eax, 1
 mov dword [mem2 + 4*ecx], eax
 call PCJMP_f2
 mov ecx, dword [reg_d2]
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_b2]
 mov dword [reg_sp2], eax
 mov edi, 0xca
 jmp PIXf2_46_6
PIXf2_0_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_0_7
PIXf2_1_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xffffcd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffd0
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_1_7
PIXf2_2_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_2_7
PIXf2_3_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_3_7
PIXf2_4_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_43: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_44: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_4_7
PIXf2_5_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_60: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_61: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_5_7
PIXf2_6_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_78: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 jmp PIXf2_6_7
PIXf2_7_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x5a
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_89: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_7_7
PIXf2_8_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 cmp dword [reg_a2], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x66
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_101: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_8_7
PIXf2_9_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_9_7
PIXf2_10_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_10_7
PIXf2_11_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_11_7
PIXf2_12_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_12_7
PIXf2_13_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xb0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_13_7
PIXf2_14_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_199: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_b2], 0x1
 mov edi, 0xca
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_200: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_14_7
PIXf2_15_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_7
PIXf2_16_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_16_7
PIXf2_17_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_17_7
PIXf2_18_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xfd
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_249: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_18_7
PIXf2_19_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_270: mov edi, 0x117
 mov eax, 1
 call PCJMP_f2
BBf2_271: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_19_7
PIXf2_20_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_286: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_20_7
PIXf2_21_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_21_7
PIXf2_22_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_310: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_22_7
PIXf2_23_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_318: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f2
BBf2_319: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 jmp PIXf2_23_7
PIXf2_24_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_7
PIXf2_25_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_7
PIXf2_26_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_7
PIXf2_27_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_357: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_27_7
PIXf2_28_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x176
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_373: mov edi, 0x177
 mov eax, 1
 call PCJMP_f2
BBf2_374: mov edi, 0x179
 mov eax, 1
 call PCJMP_f2
BBf2_375: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_28_7
PIXf2_29_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x18d
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_396: mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_29_7
PIXf2_30_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1a5
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_420: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_30_7
PIXf2_31_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1b7
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_438: mov edi, 0x1b1
 mov eax, 1
 call PCJMP_f2
BBf2_439: mov edi, 0x1b2
 mov eax, 1
 call PCJMP_f2
BBf2_440: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_31_7
PIXf2_32_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_7
PIXf2_33_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_7
PIXf2_34_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1d6
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_463: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x24
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_34_7
PIXf2_35_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x1d6
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_469: mov edi, 0x1d0
 mov eax, 1
 call PCJMP_f2
BBf2_470: mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 jmp PIXf2_35_7
PIXf2_36_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_493: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 cmp dword [reg_a2], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1f1
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_494: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_36_7
PIXf2_37_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x25
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x200
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_511: mov edi, 0x208
 mov eax, 1
 call PCJMP_f2
BBf2_512: mov edi, 0x209
 mov eax, 1
 call PCJMP_f2
BBf2_513: mov edi, 0x1f2
 jmp PIXf2_37_7
PIXf2_38_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_38_7
PIXf2_39_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x213
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_39_7
PIXf2_40_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_40_7
PIXf2_41_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_554: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_41_7
PIXf2_42_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_7
PIXf2_43_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_43_7
PIXf2_44_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_b2], 0x13f
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_44_7
PIXf2_45_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 jmp PIXf2_45_7
PIXf2_46_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
 add dword [reg_b2], 0xfffffd
 mov eax, 1
 mov eax, 1
 movzx eax, al
 add dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [reg_d2]
 and dword [reg_d2], 0xffffff
 and dword [reg_sp2], 0xffffff
 mov eax, 1
 call PCJMP_f2
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 and dword [reg_sp2], 0xffffff
 mov eax, 1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 mov dword [reg_b2], eax
 and dword [reg_a2], 0xffffff
 cmp dword [reg_a2], eax
 call PCJMP_f2
 call PCJMP_f2
 mov ecx, dword [reg_b2]
 mov eax, 1
 jmp PIXf2_46_7
PIXf2_0_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 jmp PIXf2_0_8
PIXf2_1_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_1_8
PIXf2_2_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_2_8
PIXf2_3_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_3_8
PIXf2_4_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_4_8
PIXf2_5_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x5
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 jmp PIXf2_5_8
PIXf2_6_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 sub dword [reg_sp2], 0x5
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_79: mov eax, dword [reg_bp2]
 jmp PIXf2_6_8
PIXf2_7_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_7_8
PIXf2_8_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_102: mov eax, dword [reg_bp2]
 jmp PIXf2_8_8
PIXf2_9_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_9_8
PIXf2_10_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_10_8
PIXf2_11_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_142: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_143: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_11_8
PIXf2_12_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x10
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_12_8
PIXf2_13_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f2
BBf2_176: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_b2], 0x1
 mov edi, 0xb4
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_177: mov dword [reg_a2], 0x61
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_13_8
PIXf2_14_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xc9
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f2
BBf2_201: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
 jmp PIXf2_14_8
PIXf2_15_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_8
PIXf2_16_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_16_8
PIXf2_17_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_17_8
PIXf2_18_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xfb
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_250: mov dword [reg_a2], 0x8
 jmp PIXf2_18_8
PIXf2_19_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x111
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_272: mov edi, 0x116
 mov eax, 1
 call PCJMP_f2
BBf2_273: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x114
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
 jmp PIXf2_19_8
PIXf2_20_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_20_8
PIXf2_21_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x39
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 jmp PIXf2_21_8
PIXf2_22_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_22_8
PIXf2_23_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov dword [reg_a2], 0x140
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_23_8
PIXf2_24_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 jmp PIXf2_24_8
PIXf2_25_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_8
PIXf2_26_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_8
PIXf2_27_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_27_8
PIXf2_28_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_28_8
PIXf2_29_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_397: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_29_8
PIXf2_30_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_421: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_30_8
PIXf2_31_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1ba
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
 jmp PIXf2_31_8
PIXf2_32_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_8
PIXf2_33_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_8
PIXf2_34_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 jmp PIXf2_34_8
PIXf2_35_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_471: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_472: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_35_8
PIXf2_36_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 jmp PIXf2_36_8
PIXf2_37_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_514: mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffdd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x20
 jmp PIXf2_37_8
PIXf2_38_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_38_8
PIXf2_39_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f2
BBf2_531: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
BBf2_532: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_39_8
PIXf2_40_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x21f
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_40_8
PIXf2_41_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_41_8
PIXf2_42_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_8
PIXf2_43_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_43_8
PIXf2_44_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 jmp PIXf2_44_8
PIXf2_45_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_45_8
PIXf2_46_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov eax, dword [mem2 + 4*eax]
 and dword [reg_sp2], 0xffffff
 mov dword [reg_b2], eax
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [mem2 + 4*eax]
 and dword [reg_b2], 0xffffff
 mov dword [reg_bp2], eax
 and dword [reg_b2], 0xffffff
 mov dword [reg_sp2], eax
 mov dword [reg_sp2], eax
 and dword [reg_d2], 0xffffff
 mov dword [reg_a2], eax
 call PCJMP_f2
 mov eax, 1
 mov eax, dword [reg_b2]
 call PCJMP_f2
 mov dword [reg_a2], eax
 mov eax, dword [reg_d2]
 add dword [reg_b2], 0xffffdb
 call PCJMP_f2
 mov eax, dword [reg_b2]
 mov eax, 1
 mov eax, 1
 add dword [reg_sp2], 0x1
 jmp PIXf2_46_8
PIXf2_0_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffce
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_0_9
PIXf2_1_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_1_9
PIXf2_2_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_2_9
PIXf2_3_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_3_9
PIXf2_4_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_4_9
PIXf2_5_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_62: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x18
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_5_9
PIXf2_6_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x18
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 jmp PIXf2_6_9
PIXf2_7_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_90: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_7_9
PIXf2_8_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_8_9
PIXf2_9_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_9_9
PIXf2_10_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_10_9
PIXf2_11_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x20
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffe0
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_11_9
PIXf2_12_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x99
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f2
BBf2_153: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 jmp PIXf2_12_9
PIXf2_13_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xb3
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_13_9
PIXf2_14_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_14_9
PIXf2_15_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_9
PIXf2_16_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_16_9
PIXf2_17_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0xee
 mov eax, 1
 call PCJMP_f2
BBf2_236: mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 jmp PIXf2_17_9
PIXf2_18_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0xfc
 mov eax, 1
 call PCJMP_f2
BBf2_251: mov dword [reg_a2], 0xa
BBf2_252: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_253: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x101
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_254: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_18_9
PIXf2_19_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_274: mov dword [reg_a2], 0x1
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_19_9
PIXf2_20_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x11f
 jmp PIXf2_20_9
PIXf2_21_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_298: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0x12e
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_299: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_21_9
PIXf2_22_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x2
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_22_9
PIXf2_23_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, dword [reg_c2]
 mov eax, 1
 call PCJMP_f2
BBf2_320: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_23_9
PIXf2_24_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 jmp PIXf2_24_9
PIXf2_25_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x153
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_25_9
PIXf2_26_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_9
PIXf2_27_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_27_9
PIXf2_28_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_376: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_28_9
PIXf2_29_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_29_9
PIXf2_30_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x1a0
 mov eax, 1
 call PCJMP_f2
BBf2_422: mov dword [reg_a2], 0x0
 jmp PIXf2_30_9
PIXf2_31_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_441: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 jmp PIXf2_31_9
PIXf2_32_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_9
PIXf2_33_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_9
PIXf2_34_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
BBf2_464: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_34_9
PIXf2_35_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
BBf2_473: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 jmp PIXf2_35_9
PIXf2_36_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1f0
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_36_9
PIXf2_37_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_37_9
PIXf2_38_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffdd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_38_9
PIXf2_39_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffda
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 jmp PIXf2_39_9
PIXf2_40_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x218
 mov eax, 1
 call PCJMP_f2
BBf2_543: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 jmp PIXf2_40_9
PIXf2_41_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x22b
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f2
BBf2_555: mov eax, dword [reg_b2]
 jmp PIXf2_41_9
PIXf2_42_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_9
PIXf2_43_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_43_9
PIXf2_44_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x24b
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_586: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x13f
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_44_9
PIXf2_45_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_45_9
PIXf2_46_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xffffdb
 mov eax, 1
 mov dword [reg_b2], eax
 and dword [reg_sp2], 0xffffff
 add dword [reg_sp2], 0x1
 mov eax, 1
 mov eax, 1
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 call PCJMP_f2
 mov dword [reg_b2], eax
 call PCJMP_f2
 mov dword [reg_a2], eax
 mov dword [reg_sp2], eax
 call PCJMP_f2
 and dword [reg_sp2], 0xffffff
 add dword [reg_d2], 0xffffff
 add dword [reg_d2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 mov eax, dword [reg_a2]
 mov eax, dword [reg_b2]
 mov eax, 1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_46_9
PIXf2_0_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffce
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_0_10
PIXf2_1_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_1_10
PIXf2_2_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_2_10
PIXf2_3_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_3_10
PIXf2_4_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_4_10
PIXf2_5_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_5_10
PIXf2_6_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x51
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_80: mov edi, 0x52
 mov eax, 1
 call PCJMP_f2
BBf2_81: mov edi, 0x5b
 mov eax, 1
 call PCJMP_f2
BBf2_82: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_6_10
PIXf2_7_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x4f
 mov eax, 1
 call PCJMP_f2
BBf2_91: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_7_10
PIXf2_8_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_8_10
PIXf2_9_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_9_10
PIXf2_10_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_126: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_10_10
PIXf2_11_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x20
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_11_10
PIXf2_12_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x9b
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_154: mov edi, 0x94
 mov eax, 1
 call PCJMP_f2
BBf2_155: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_12_10
PIXf2_13_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_178: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x66
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_13_10
PIXf2_14_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_14_10
PIXf2_15_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_10
PIXf2_16_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_221: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_16_10
PIXf2_17_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x2b
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_17_10
PIXf2_18_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff9
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 jmp PIXf2_18_10
PIXf2_19_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_19_10
PIXf2_20_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f2
BBf2_287: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_20_10
PIXf2_21_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x3
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_21_10
PIXf2_22_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x137
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_22_10
PIXf2_23_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x8000
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_23_10
PIXf2_24_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_331: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_24_10
PIXf2_25_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f2
BBf2_339: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_25_10
PIXf2_26_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_10
PIXf2_27_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_27_10
PIXf2_28_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_28_10
PIXf2_29_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x184
 mov eax, 1
 call PCJMP_f2
BBf2_398: mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_29_10
PIXf2_30_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_423: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_30_10
PIXf2_31_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_31_10
PIXf2_32_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_10
PIXf2_33_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_10
PIXf2_34_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 jmp PIXf2_34_10
PIXf2_35_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_35_10
PIXf2_36_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_495: mov dword [reg_a2], 0x1
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_36_10
PIXf2_37_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 jmp PIXf2_37_10
PIXf2_38_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 jmp PIXf2_38_10
PIXf2_39_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_533: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 jmp PIXf2_39_10
PIXf2_40_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_544: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_40_10
PIXf2_41_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_556: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_41_10
PIXf2_42_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_10
PIXf2_43_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_43_10
PIXf2_44_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_587: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_44_10
PIXf2_45_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x25c
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_603: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f2
BBf2_604: mov edi, 0x25e
 mov eax, 1
 call PCJMP_f2
BBf2_605: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f2
BBf2_606: mov edi, 0x254
 mov eax, 1
 call PCJMP_f2
BBf2_607: mov dword [reg_a2], 0x0
 jmp PIXf2_45_10
PIXf2_46_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov eax, dword [reg_a2]
 add dword [reg_d2], 0xffffff
 and dword [reg_sp2], 0xffffff
 add dword [reg_sp2], 0x1
 add dword [reg_b2], 0xffffff
 mov eax, 1
 mov eax, 1
 mov dword [reg_b2], eax
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_sp2]
 call PCJMP_f2
 mov eax, dword [reg_b2]
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_a2]
 mov eax, dword [reg_a2]
 and dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 add dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_a2], eax
 cmp dword [reg_a2], 0x0
 mov eax, dword [reg_b2]
 call PCJMP_f2
 jmp PIXf2_46_10
PIXf2_0_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0x4
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_3: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffce
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_0_11
PIXf2_1_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 jmp PIXf2_1_11
PIXf2_2_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_2_11
PIXf2_3_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_3_11
PIXf2_4_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_4_11
PIXf2_5_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_5_11
PIXf2_6_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_6_11
PIXf2_7_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_92: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_7_11
PIXf2_8_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_8_11
PIXf2_9_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_9_11
PIXf2_10_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x76
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_10_11
PIXf2_11_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 jmp PIXf2_11_11
PIXf2_12_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x9d
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_156: mov dword [reg_a2], 0x2d
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 sub dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_12_11
PIXf2_13_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_179: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_180: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xb8
 cmp dword [reg_a2], 0x0
 setne al
 jmp PIXf2_13_11
PIXf2_14_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_14_11
PIXf2_15_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_11
PIXf2_16_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_222: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x7
 jmp PIXf2_16_11
PIXf2_17_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xee
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_237: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_17_11
PIXf2_18_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov edi, 0x100
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_255: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff9
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 jmp PIXf2_18_11
PIXf2_19_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x113
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f2
BBf2_275: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_19_11
PIXf2_20_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_288: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 jmp PIXf2_20_11
PIXf2_21_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x12c
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f2
BBf2_300: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_21_11
PIXf2_22_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f2
BBf2_311: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_22_11
PIXf2_23_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x142
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_321: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_23_11
PIXf2_24_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x147
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_24_11
PIXf2_25_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x154
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f2
BBf2_340: mov eax, dword [reg_b2]
 jmp PIXf2_25_11
PIXf2_26_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_11
PIXf2_27_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_27_11
PIXf2_28_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x174
 mov eax, 1
 jmp PIXf2_28_11
PIXf2_29_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_399: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_29_11
PIXf2_30_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_424: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 jmp PIXf2_30_11
PIXf2_31_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_442: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_31_11
PIXf2_32_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_11
PIXf2_33_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_11
PIXf2_34_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_34_11
PIXf2_35_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1e2
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
 jmp PIXf2_35_11
PIXf2_36_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_36_11
PIXf2_37_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_37_11
PIXf2_38_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_38_11
PIXf2_39_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x1e9
 mov eax, 1
 call PCJMP_f2
BBf2_534: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 jmp PIXf2_39_11
PIXf2_40_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_545: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x101
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_40_11
PIXf2_41_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_557: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 jmp PIXf2_41_11
PIXf2_42_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_11
PIXf2_43_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_43_11
PIXf2_44_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 jmp PIXf2_44_11
PIXf2_45_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_45_11
PIXf2_46_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0xab
 mov eax, dword [reg_a2]
 mov eax, 1
 mov dword [reg_a2], eax
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_b2], eax
 add dword [reg_sp2], 0x1
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_d2], eax
 mov dword [reg_b2], eax
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x20b
 add dword [reg_sp2], 0x1
 mov dword [reg_b2], eax
 mov dword [reg_b2], 0x1
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_b2]
 mov eax, dword [reg_d2]
 mov eax, dword [reg_a2]
 and dword [reg_sp2], 0xffffff
 mov eax, 1
 mov eax, dword [reg_a2]
 mov dword [reg_sp2], eax
 jmp PIXf2_46_11
PIXf2_0_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 jmp PIXf2_0_12
PIXf2_1_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
BBf2_11: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_1_12
PIXf2_2_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffcd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_2_12
PIXf2_3_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffcd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_3_12
PIXf2_4_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_4_12
PIXf2_5_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_5_12
PIXf2_6_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_6_12
PIXf2_7_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_7_12
PIXf2_8_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_8_12
PIXf2_9_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_114: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 jmp PIXf2_9_12
PIXf2_10_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_127: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 jmp PIXf2_10_12
PIXf2_11_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_11_12
PIXf2_12_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_157: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 jmp PIXf2_12_12
PIXf2_13_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_181: mov dword [reg_a2], 0x41
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_13_12
PIXf2_14_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_14_12
PIXf2_15_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_12
PIXf2_16_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_16_12
PIXf2_17_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 jmp PIXf2_17_12
PIXf2_18_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff9
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_18_12
PIXf2_19_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 jmp PIXf2_19_12
PIXf2_20_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_289: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_20_12
PIXf2_21_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_21_12
PIXf2_22_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x138
 jmp PIXf2_22_12
PIXf2_23_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 jmp PIXf2_23_12
PIXf2_24_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_332: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_24_12
PIXf2_25_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_25_12
PIXf2_26_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_12
PIXf2_27_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_27_12
PIXf2_28_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_377: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_28_12
PIXf2_29_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_400: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_29_12
PIXf2_30_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1a9
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_30_12
PIXf2_31_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 jmp PIXf2_31_12
PIXf2_32_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_12
PIXf2_33_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_12
PIXf2_34_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_34_12
PIXf2_35_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_474: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_475: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_35_12
PIXf2_36_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_36_12
PIXf2_37_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_37_12
PIXf2_38_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffdd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f2
BBf2_521: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 jmp PIXf2_38_12
PIXf2_39_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 jmp PIXf2_39_12
PIXf2_40_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_40_12
PIXf2_41_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_558: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_41_12
PIXf2_42_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_12
PIXf2_43_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_43_12
PIXf2_44_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_588: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_589: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_44_12
PIXf2_45_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 jmp PIXf2_45_12
PIXf2_46_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x20d
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_bp2]
 mov eax, dword [reg_d2]
 mov ecx, dword [reg_d2]
 mov dword [reg_d2], eax
 mov dword [reg_sp2], eax
 mov ecx, dword [reg_b2]
 mov eax, dword [reg_bp2]
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_sp2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, 1
 mov eax, dword [reg_bp2]
 call PCJMP_f2
 mov dword [reg_d2], eax
 mov dword [reg_d2], eax
 mov dword [reg_a2], 0x0
 mov ecx, dword [reg_b2]
 jmp PIXf2_46_12
PIXf2_0_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_4: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0x6
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_5: mov edi, 0x8
 mov eax, 1
 call PCJMP_f2
BBf2_6: mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffd0
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_0_13
PIXf2_1_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xd
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_12: mov edi, 0xe
 mov eax, 1
 call PCJMP_f2
BBf2_13: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_1_13
PIXf2_2_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_2_13
PIXf2_3_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_3_13
PIXf2_4_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x5
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_4_13
PIXf2_5_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_5_13
PIXf2_6_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_6_13
PIXf2_7_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_7_13
PIXf2_8_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_8_13
PIXf2_9_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x6a
 mov eax, 1
 call PCJMP_f2
BBf2_115: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_9_13
PIXf2_10_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_128: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_129: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_10_13
PIXf2_11_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x90
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_11_13
PIXf2_12_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_158: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 jmp PIXf2_12_13
PIXf2_13_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xb7
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_182: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_13_13
PIXf2_14_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_14_13
PIXf2_15_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_13
PIXf2_16_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xe0
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_223: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_16_13
PIXf2_17_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
BBf2_238: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_17_13
PIXf2_18_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 jmp PIXf2_18_13
PIXf2_19_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x116
 mov eax, 1
 call PCJMP_f2
BBf2_276: mov dword [reg_a2], 0x1
 mov eax, dword [reg_bp2]
 jmp PIXf2_19_13
PIXf2_20_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_20_13
PIXf2_21_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x12d
 mov eax, dword [reg_sp2]
 jmp PIXf2_21_13
PIXf2_22_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f2
BBf2_312: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 jmp PIXf2_22_13
PIXf2_23_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x143
 mov eax, 1
 call PCJMP_f2
BBf2_322: mov edi, 0x144
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_23_13
PIXf2_24_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x14e
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_333: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 jmp PIXf2_24_13
PIXf2_25_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_25_13
PIXf2_26_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_13
PIXf2_27_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_27_13
PIXf2_28_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_378: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_28_13
PIXf2_29_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_401: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0x193
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_402: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 jmp PIXf2_29_13
PIXf2_30_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x168
 mov eax, 1
 call PCJMP_f2
BBf2_425: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_30_13
PIXf2_31_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_443: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 jmp PIXf2_31_13
PIXf2_32_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_13
PIXf2_33_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_13
PIXf2_34_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_34_13
PIXf2_35_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_35_13
PIXf2_36_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x1f1
 mov eax, 1
 call PCJMP_f2
BBf2_496: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_36_13
PIXf2_37_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0x203
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f2
BBf2_515: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x20e
 jmp PIXf2_37_13
PIXf2_38_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x20a
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x8f
 mov eax, 1
 call PCJMP_f2
BBf2_522: mov eax, dword [reg_b2]
 jmp PIXf2_38_13
PIXf2_39_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 jmp PIXf2_39_13
PIXf2_40_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x100
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffff00
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_40_13
PIXf2_41_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_559: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_b2], 0x13c
 mov eax, dword [reg_b2]
 jmp PIXf2_41_13
PIXf2_42_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_13
PIXf2_43_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_43_13
PIXf2_44_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, 0x4
 mov ecx, reg_a2
 int 0x80
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_44_13
PIXf2_45_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_45_13
PIXf2_46_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
 add dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov eax, dword [reg_a2]
 sete  al
 mov dword [reg_a2], eax
 call PCJMP_f2
 mov eax, dword [mem2 + 4*eax]
 cmp dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 call PCJMP_f2
 mov eax, dword [reg_sp2]
 cmp dword [reg_a2], eax
 mov dword [reg_sp2], eax
 add dword [reg_b2], 0xffffff
 mov eax, dword [reg_sp2]
 and dword [reg_sp2], 0xffffff
 add dword [reg_sp2], 0x1
 mov eax, dword [reg_b2]
 mov dword [reg_sp2], eax
 mov dword [reg_b2], eax
 call PCJMP_f2
 mov dword [reg_d2], eax
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_46_13
PIXf2_0_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 jmp PIXf2_0_14
PIXf2_1_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 sub dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x9
 mov eax, 1
 call PCJMP_f2
BBf2_14: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_1_14
PIXf2_2_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 jmp PIXf2_2_14
PIXf2_3_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_3_14
PIXf2_4_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_45: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x18
 mov eax, dword [reg_a2]
 jmp PIXf2_4_14
PIXf2_5_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_5_14
PIXf2_6_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_6_14
PIXf2_7_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_7_14
PIXf2_8_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_8_14
PIXf2_9_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_116: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_9_14
PIXf2_10_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
BBf2_130: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x84
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_131: mov edi, 0x85
 mov eax, 1
 call PCJMP_f2
BBf2_132: mov edi, 0x87
 mov eax, 1
 jmp PIXf2_10_14
PIXf2_11_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f2
BBf2_144: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x91
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_11_14
PIXf2_12_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_159: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_12_14
PIXf2_13_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x46
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_183: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_13_14
PIXf2_14_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_14_14
PIXf2_15_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_14
PIXf2_16_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_224: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xe2
 cmp dword [reg_a2], 0x0
 setne al
 jmp PIXf2_16_14
PIXf2_17_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xf0
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_239: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_17_14
PIXf2_18_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_256: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff9
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_18_14
PIXf2_19_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 jmp PIXf2_19_14
PIXf2_20_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x122
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f2
BBf2_290: mov eax, dword [reg_b2]
 jmp PIXf2_20_14
PIXf2_21_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f2
BBf2_301: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 jmp PIXf2_21_14
PIXf2_22_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 jmp PIXf2_22_14
PIXf2_23_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_323: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f2
BBf2_324: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_23_14
PIXf2_24_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x150
 mov eax, 1
 call PCJMP_f2
BBf2_334: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 jmp PIXf2_24_14
PIXf2_25_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_25_14
PIXf2_26_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_14
PIXf2_27_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_27_14
PIXf2_28_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_379: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 jmp PIXf2_28_14
PIXf2_29_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_403: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0x195
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_404: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 jmp PIXf2_29_14
PIXf2_30_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_30_14
PIXf2_31_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_31_14
PIXf2_32_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_14
PIXf2_33_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_14
PIXf2_34_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_34_14
PIXf2_35_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 jmp PIXf2_35_14
PIXf2_36_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_36_14
PIXf2_37_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_516: mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffdd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x20
 jmp PIXf2_37_14
PIXf2_38_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x124
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x20b
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x81
 mov eax, 1
 jmp PIXf2_38_14
PIXf2_39_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_39_14
PIXf2_40_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x222
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f2
BBf2_546: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffeff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_40_14
PIXf2_41_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_560: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_41_14
PIXf2_42_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_14
PIXf2_43_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_43_14
PIXf2_44_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_590: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_44_14
PIXf2_45_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_45_14
PIXf2_46_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_a2], eax
 movzx eax, al
 setne al
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_b2]
 mov dword [reg_b2], 0x1
 mov eax, dword [reg_sp2]
 mov dword [reg_a2], eax
 mov dword [reg_a2], eax
 sub dword [reg_sp2], 0x1
 mov dword [reg_a2], eax
 mov dword [reg_d2], eax
 cmp dword [reg_a2], 0x0
 call PCJMP_f2
 mov dword [reg_a2], eax
 setne al
 add dword [reg_b2], 0xfffffc
 call PCJMP_f2
 mov eax, dword [reg_a2]
 and dword [reg_d2], 0xffffff
 mov edi, dword [reg_a2]
 mov dword [reg_a2], eax
 add dword [reg_b2], 0x2
 jmp PIXf2_46_14
PIXf2_0_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_0_15
PIXf2_1_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_1_15
PIXf2_2_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_2_15
PIXf2_3_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_31: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_3_15
PIXf2_4_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x2f
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_46: mov edi, 0x30
 mov eax, 1
 call PCJMP_f2
BBf2_47: mov edi, 0x3b
 mov eax, 1
 call PCJMP_f2
BBf2_48: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 jmp PIXf2_4_15
PIXf2_5_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x40
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_63: mov edi, 0x41
 mov eax, 1
 call PCJMP_f2
BBf2_64: mov edi, 0x4c
 mov eax, 1
 call PCJMP_f2
BBf2_65: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_5_15
PIXf2_6_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_6_15
PIXf2_7_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_7_15
PIXf2_8_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x5e
 mov eax, 1
 call PCJMP_f2
BBf2_103: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 jmp PIXf2_8_15
PIXf2_9_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_117: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 jmp PIXf2_9_15
PIXf2_10_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_133: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, 0x4
 mov ecx, reg_a2
 int 0x80
 jmp PIXf2_10_15
PIXf2_11_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f2
BBf2_145: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_11_15
PIXf2_12_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xc
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_12_15
PIXf2_13_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_184: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_13_15
PIXf2_14_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_14_15
PIXf2_15_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_15
PIXf2_16_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_225: mov dword [reg_a2], 0x24
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_16_15
PIXf2_17_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x10
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_240: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xf2
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_17_15
PIXf2_18_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffff9
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_257: mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 jmp PIXf2_18_15
PIXf2_19_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_19_15
PIXf2_20_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_291: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_20_15
PIXf2_21_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_21_15
PIXf2_22_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_22_15
PIXf2_23_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x146
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_325: mov edi, 0x152
 mov eax, 1
 call PCJMP_f2
BBf2_326: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 jmp PIXf2_23_15
PIXf2_24_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x150
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_335: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_24_15
PIXf2_25_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_25_15
PIXf2_26_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_15
PIXf2_27_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_27_15
PIXf2_28_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_380: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x17e
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_28_15
PIXf2_29_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_29_15
PIXf2_30_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1aa
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f2
BBf2_426: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_30_15
PIXf2_31_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_444: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_31_15
PIXf2_32_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_15
PIXf2_33_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_15
PIXf2_34_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1d2
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
 jmp PIXf2_34_15
PIXf2_35_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1dd
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_476: mov edi, 0x1de
 mov eax, 1
 call PCJMP_f2
BBf2_477: mov edi, 0x1e1
 mov eax, 1
 call PCJMP_f2
BBf2_478: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_35_15
PIXf2_36_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_36_15
PIXf2_37_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_37_15
PIXf2_38_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_523: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x20c
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_38_15
PIXf2_39_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_535: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_39_15
PIXf2_40_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffff00
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_40_15
PIXf2_41_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_561: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x0
 jmp PIXf2_41_15
PIXf2_42_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_15
PIXf2_43_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_43_15
PIXf2_44_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_591: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 jmp PIXf2_44_15
PIXf2_45_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_608: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_609: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_45_15
PIXf2_46_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 and dword [reg_b2], 0xffffff
 call PCJMP_f2
 and dword [reg_sp2], 0xffffff
 add dword [reg_b2], 0xfffffe
 call PCJMP_f2
 mov ecx, dword [reg_d2]
 mov dword [reg_a2], eax
 mov dword [mem2 + 4*ecx], eax
 call PCJMP_f2
 call PCJMP_f2
 mov dword [reg_b2], eax
 and dword [reg_d2], 0xffffff
 mov dword [reg_b2], eax
 mov dword [reg_a2], eax
 call PCJMP_f2
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_a2]
 mov dword [reg_a2], eax
 mov dword [reg_sp2], eax
 mov eax, dword [mem2 + 4*eax]
 call PCJMP_f2
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_46_15
PIXf2_0_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffd0
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 jmp PIXf2_0_16
PIXf2_1_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_1_16
PIXf2_2_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_2_16
PIXf2_3_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x21
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_32: mov edi, 0x22
 mov eax, 1
 jmp PIXf2_3_16
PIXf2_4_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_4_16
PIXf2_5_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_5_16
PIXf2_6_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_6_16
PIXf2_7_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_7_16
PIXf2_8_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_104: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_8_16
PIXf2_9_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_9_16
PIXf2_10_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_134: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_10_16
PIXf2_11_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_146: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 jmp PIXf2_11_16
PIXf2_12_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xa1
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_160: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_12_16
PIXf2_13_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_185: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_186: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_13_16
PIXf2_14_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_14_16
PIXf2_15_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_16
PIXf2_16_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_226: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0xe6
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_227: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_16_16
PIXf2_17_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_241: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_17_16
PIXf2_18_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_258: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x103
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_18_16
PIXf2_19_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x115
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f2
BBf2_277: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 jmp PIXf2_19_16
PIXf2_20_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_292: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 jmp PIXf2_20_16
PIXf2_21_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_21_16
PIXf2_22_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_22_16
PIXf2_23_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_327: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 jmp PIXf2_23_16
PIXf2_24_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_336: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_24_16
PIXf2_25_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x155
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f2
BBf2_341: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_25_16
PIXf2_26_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_16
PIXf2_27_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_27_16
PIXf2_28_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_381: mov edi, 0x17f
 mov eax, 1
 call PCJMP_f2
BBf2_382: mov edi, 0x181
 mov eax, 1
 call PCJMP_f2
BBf2_383: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_28_16
PIXf2_29_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_405: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0x197
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_406: mov edi, 0x198
 mov eax, 1
 call PCJMP_f2
BBf2_407: mov edi, 0x19d
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_29_16
PIXf2_30_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 jmp PIXf2_30_16
PIXf2_31_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_31_16
PIXf2_32_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_16
PIXf2_33_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_16
PIXf2_34_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_465: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_34_16
PIXf2_35_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1e0
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_35_16
PIXf2_36_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 jmp PIXf2_36_16
PIXf2_37_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 jmp PIXf2_37_16
PIXf2_38_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f2
BBf2_524: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x129
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x20d
 mov eax, dword [reg_sp2]
 jmp PIXf2_38_16
PIXf2_39_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_536: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 jmp PIXf2_39_16
PIXf2_40_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffeff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 jmp PIXf2_40_16
PIXf2_41_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_562: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_41_16
PIXf2_42_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_16
PIXf2_43_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_43_16
PIXf2_44_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, 0x4
 mov ecx, reg_a2
 int 0x80
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_44_16
PIXf2_45_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x141
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x262
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_45_16
PIXf2_46_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 mov eax, dword [reg_sp2]
 call PCJMP_f2
 call PCJMP_f2
 and dword [reg_a2], 0xffffff
 add dword [reg_b2], 0xffffff
 call PCJMP_f2
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_sp2]
 call PCJMP_f2
 mov eax, 1
 mov dword [reg_bp2], eax
 mov eax, dword [reg_d2]
 sub dword [reg_sp2], 0x1
 cmp dword [reg_b2], 0x0
 mov eax, 1
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_a2]
 add dword [reg_b2], 0x4
 mov eax, 1
 and dword [reg_a2], 0xffffff
 mov dword [mem2 + 4*ecx], eax
 add dword [reg_b2], 0xfffffd
 mov eax, dword [reg_b2]
 add dword [reg_sp2], 0x1
 jmp PIXf2_46_16
PIXf2_0_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 jmp PIXf2_0_17
PIXf2_1_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_1_17
PIXf2_2_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 jmp PIXf2_2_17
PIXf2_3_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_33: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 sub dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 jmp PIXf2_3_17
PIXf2_4_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_4_17
PIXf2_5_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 jmp PIXf2_5_17
PIXf2_6_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_6_17
PIXf2_7_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_7_17
PIXf2_8_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_105: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 jmp PIXf2_8_17
PIXf2_9_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_118: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x18
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_9_17
PIXf2_10_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x82
 mov eax, 1
 call PCJMP_f2
BBf2_135: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 jmp PIXf2_10_17
PIXf2_11_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_11_17
PIXf2_12_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_161: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xa3
 cmp dword [reg_a2], 0x0
 setne al
 jmp PIXf2_12_17
PIXf2_13_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x41
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_13_17
PIXf2_14_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_14_17
PIXf2_15_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_17
PIXf2_16_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_16_17
PIXf2_17_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_242: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xf6
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_243: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_17_17
PIXf2_18_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f2
BBf2_259: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x105
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_260: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_18_17
PIXf2_19_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_19_17
PIXf2_20_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_20_17
PIXf2_21_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_21_17
PIXf2_22_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_22_17
PIXf2_23_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x149
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_328: mov edi, 0x14a
 mov eax, 1
 call PCJMP_f2
BBf2_329: mov edi, 0x14c
 mov eax, 1
 jmp PIXf2_23_17
PIXf2_24_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 jmp PIXf2_24_17
PIXf2_25_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_17
PIXf2_26_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_17
PIXf2_27_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_27_17
PIXf2_28_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_28_17
PIXf2_29_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_408: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 jmp PIXf2_29_17
PIXf2_30_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1ab
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_30_17
PIXf2_31_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_31_17
PIXf2_32_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_32_17
PIXf2_33_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_17
PIXf2_34_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_34_17
PIXf2_35_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_479: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_35_17
PIXf2_36_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_497: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 jmp PIXf2_36_17
PIXf2_37_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_37_17
PIXf2_38_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f2
BBf2_525: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_38_17
PIXf2_39_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_39_17
PIXf2_40_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_40_17
PIXf2_41_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_563: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 jmp PIXf2_41_17
PIXf2_42_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_17
PIXf2_43_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_43_17
PIXf2_44_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_592: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_44_17
PIXf2_45_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x225
 mov eax, 1
 call PCJMP_f2
BBf2_610: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
BBf2_611: nop
 mov eax, dword [reg_bp2]
 add dword [reg_b2], 0xfffffd
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 call PCJMP_f2
 mov eax, dword [reg_b2]
 mov eax, 1
 add dword [reg_sp2], 0x1
 call PCJMP_f2
 sete  al
 mov eax, dword [reg_a2]
 jmp PIXf2_45_17
PIXf2_46_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, dword [reg_a2]
 mov eax, dword [reg_sp2]
 mov eax, 1
 mov eax, 1
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 call PCJMP_f2
 mov eax, 1
 and dword [reg_d2], 0xffffff
 mov dword [reg_a2], 0x18
 mov dword [reg_c2], eax
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], eax
 add dword [reg_d2], 0xffffff
 call PCJMP_f2
 call PCJMP_f2
 mov ecx, dword [reg_d2]
 mov dword [reg_sp2], eax
 sete  al
 sete  al
 call PCJMP_f2
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 mov ecx, dword [reg_d2]
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_46_17
PIXf2_0_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_0_18
PIXf2_1_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_15: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_1_18
PIXf2_2_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_2_18
PIXf2_3_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x1d
 mov eax, 1
 call PCJMP_f2
BBf2_34: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_3_18
PIXf2_4_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_4_18
PIXf2_5_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_5_18
PIXf2_6_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_6_18
PIXf2_7_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_7_18
PIXf2_8_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_106: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_8_18
PIXf2_9_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x78
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_119: mov edi, 0x79
 mov eax, 1
 call PCJMP_f2
BBf2_120: mov edi, 0x7f
 mov eax, 1
 call PCJMP_f2
BBf2_121: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_9_18
PIXf2_10_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_136: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_10_18
PIXf2_11_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_11_18
PIXf2_12_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_162: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xd
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_12_18
PIXf2_13_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xbc
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_187: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_13_18
PIXf2_14_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_202: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_203: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_14_18
PIXf2_15_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_18
PIXf2_16_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_16_18
PIXf2_17_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x78
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 jmp PIXf2_17_18
PIXf2_18_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_18_18
PIXf2_19_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_278: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_19_18
PIXf2_20_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x125
 mov eax, dword [reg_sp2]
 jmp PIXf2_20_18
PIXf2_21_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_21_18
PIXf2_22_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_22_18
PIXf2_23_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_330: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_23_18
PIXf2_24_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_24_18
PIXf2_25_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_18
PIXf2_26_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_26_18
PIXf2_27_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_27_18
PIXf2_28_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_384: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 jmp PIXf2_28_18
PIXf2_29_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x19a
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_409: mov dword [reg_a2], 0x0
 jmp PIXf2_29_18
PIXf2_30_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_427: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_30_18
PIXf2_31_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1c1
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_445: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_31_18
PIXf2_32_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x24
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 jmp PIXf2_32_18
PIXf2_33_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_18
PIXf2_34_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_34_18
PIXf2_35_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_35_18
PIXf2_36_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x215
 mov eax, 1
 call PCJMP_f2
BBf2_498: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 jmp PIXf2_36_18
PIXf2_37_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_37_18
PIXf2_38_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_526: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x20f
 jmp PIXf2_38_18
PIXf2_39_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x100
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_39_18
PIXf2_40_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffff00
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x223
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_40_18
PIXf2_41_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_41_18
PIXf2_42_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_18
PIXf2_43_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 sete  al
 jmp PIXf2_43_18
PIXf2_44_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_593: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_44_18
PIXf2_45_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_a2], eax
 mov dword [reg_sp2], eax
 mov eax, 1
 and dword [reg_sp2], 0xffffff
 and dword [reg_sp2], 0xffffff
 mov dword [reg_b2], eax
 mov eax, dword [mem2 + 4*eax]
 and dword [reg_sp2], 0xffffff
 cmp dword [reg_a2], 0x0
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcb
 mov eax, dword [reg_d2]
 mov dword [reg_b2], eax
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 cmp dword [reg_a2], 0x0
 cmp dword [reg_a2], 0x0
 call PCJMP_f2
 mov eax, 1
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 call PCJMP_f2
 jmp PIXf2_45_18
PIXf2_46_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_a2]
 add dword [reg_d2], 0xffffff
 mov eax, 1
 add dword [reg_sp2], 0x1
 mov eax, dword [reg_b2]
 mov dword [reg_b2], eax
 mov dword [reg_sp2], eax
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 call PCJMP_f2
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov eax, 1
 mov edi, 0xb3
 mov eax, dword [reg_bp2]
 call PCJMP_f2
 and dword [reg_sp2], 0xffffff
 mov dword [reg_b2], eax
 and dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_46_18
PIXf2_0_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffd0
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 jmp PIXf2_0_19
PIXf2_1_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x35
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_1_19
PIXf2_2_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0x18
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_23: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_2_19
PIXf2_3_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_35: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 jmp PIXf2_3_19
PIXf2_4_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x32
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
 jmp PIXf2_4_19
PIXf2_5_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x43
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_66: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_5_19
PIXf2_6_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_6_19
PIXf2_7_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_7_19
PIXf2_8_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x18
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x6c
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_107: mov edi, 0x6d
 jmp PIXf2_8_19
PIXf2_9_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_9_19
PIXf2_10_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_137: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 jmp PIXf2_10_19
PIXf2_11_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x94
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_147: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_11_19
PIXf2_12_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_163: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xa5
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_164: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_12_19
PIXf2_13_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x5a
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_188: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_13_19
PIXf2_14_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_204: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_14_19
PIXf2_15_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_15_19
PIXf2_16_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_16_19
PIXf2_17_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_17_19
PIXf2_18_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_18_19
PIXf2_19_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_19_19
PIXf2_20_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f2
BBf2_293: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x3
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_20_19
PIXf2_21_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_21_19
PIXf2_22_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x139
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f2
BBf2_313: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_22_19
PIXf2_23_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_23_19
PIXf2_24_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_19
PIXf2_25_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_25_19
PIXf2_26_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_26_19
PIXf2_27_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x161
 mov eax, 1
 call PCJMP_f2
BBf2_358: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_27_19
PIXf2_28_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 jmp PIXf2_28_19
PIXf2_29_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_29_19
PIXf2_30_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_428: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_429: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_30_19
PIXf2_31_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1bf
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_446: mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 jmp PIXf2_31_19
PIXf2_32_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_32_19
PIXf2_33_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_33_19
PIXf2_34_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_34_19
PIXf2_35_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_35_19
PIXf2_36_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_36_19
PIXf2_37_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0x205
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x92
 mov eax, 1
 call PCJMP_f2
BBf2_517: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x20e
 jmp PIXf2_37_19
PIXf2_38_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x168
 mov eax, 1
 call PCJMP_f2
BBf2_527: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffda
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_38_19
PIXf2_39_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x219
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f2
BBf2_537: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 jmp PIXf2_39_19
PIXf2_40_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_40_19
PIXf2_41_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_41_19
PIXf2_42_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_42_19
PIXf2_43_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_576: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_43_19
PIXf2_44_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x253
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
 jmp PIXf2_44_19
PIXf2_45_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x2
 call PCJMP_f2
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, 1
 mov dword [reg_c2], eax
 cmp dword [reg_a2], 0x0
 mov dword [mem2 + 4*ecx], eax
 add dword [reg_sp2], 0x1
 mov eax, dword [mem2 + 4*eax]
 and dword [reg_b2], 0xffffff
 and dword [reg_a2], 0xffffff
 mov dword [reg_a2], eax
 mov eax, 1
 mov eax, dword [reg_d2]
 mov eax, 1
 mov dword [reg_b2], eax
 mov eax, 1
 mov ecx, dword [reg_b2]
 call PCJMP_f2
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], eax
 call PCJMP_f2
 and dword [reg_d2], 0xffffff
 call PCJMP_f2
 jmp PIXf2_45_19
PIXf2_46_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov eax, 1
 mov dword [reg_sp2], eax
 sete  al
 mov edi, 0x114
 mov eax, dword [reg_d2]
 and dword [reg_sp2], 0xffffff
 and dword [reg_sp2], 0xffffff
 call PCJMP_f2
 mov dword [reg_sp2], eax
 mov eax, 1
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_d2]
 cmp dword [reg_a2], 0x0
 movzx eax, al
 mov dword [reg_b2], eax
 call PCJMP_f2
 mov dword [reg_sp2], eax
 mov dword [reg_b2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, 1
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_d2]
 mov edi, dword [reg_a2]
 jmp PIXf2_46_19
PIXf2_0_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_0_20
PIXf2_1_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x11
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_16: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_1_20
PIXf2_2_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_2_20
PIXf2_3_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_36: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_3_20
PIXf2_4_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_49: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_4_20
PIXf2_5_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_5_20
PIXf2_6_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_6_20
PIXf2_7_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_7_20
PIXf2_8_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_108: mov edi, 0x73
 mov eax, 1
 call PCJMP_f2
BBf2_109: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_8_20
PIXf2_9_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_9_20
PIXf2_10_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 sub dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_10_20
PIXf2_11_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_11_20
PIXf2_12_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x9
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_12_20
PIXf2_13_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_189: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_13_20
PIXf2_14_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xcd
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 jmp PIXf2_14_20
PIXf2_15_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_b2], 0x148
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_15_20
PIXf2_16_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_16_20
PIXf2_17_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 sete  al
 jmp PIXf2_17_20
PIXf2_18_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_18_20
PIXf2_19_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_19_20
PIXf2_20_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_20_20
PIXf2_21_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_21_20
PIXf2_22_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_22_20
PIXf2_23_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_23_20
PIXf2_24_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_24_20
PIXf2_25_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_25_20
PIXf2_26_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_349: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_26_20
PIXf2_27_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_359: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_360: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_27_20
PIXf2_28_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x17c
 mov eax, 1
 call PCJMP_f2
BBf2_385: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_28_20
PIXf2_29_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_410: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_29_20
PIXf2_30_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_30_20
PIXf2_31_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x1c0
 mov eax, 1
 call PCJMP_f2
BBf2_447: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_31_20
PIXf2_32_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_454: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_32_20
PIXf2_33_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1c9
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_456: mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_33_20
PIXf2_34_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_34_20
PIXf2_35_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_35_20
PIXf2_36_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_36_20
PIXf2_37_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_37_20
PIXf2_38_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_38_20
PIXf2_39_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_39_20
PIXf2_40_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_40_20
PIXf2_41_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_41_20
PIXf2_42_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, 0x4
 mov ecx, reg_a2
 int 0x80
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_569: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_42_20
PIXf2_43_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_577: mov eax, 0x3
 mov ecx, reg_a2
 int 0x80
 mov edi, 0x243
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_578: mov dword [reg_a2], 0xffffff
 jmp PIXf2_43_20
PIXf2_44_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_594: mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_595: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_44_20
PIXf2_45_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov eax, dword [reg_d2]
 and dword [reg_b2], 0xffffff
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_a2]
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_b2]
 add dword [reg_sp2], 0x1
 call PCJMP_f2
 mov eax, dword [reg_sp2]
 sete  al
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 call PCJMP_f2
 mov eax, 1
 mov eax, 1
 mov ecx, dword [reg_d2]
 add dword [reg_d2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], eax
 mov dword [reg_b2], eax
 mov ecx, dword [reg_b2]
 jmp PIXf2_45_20
PIXf2_46_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 call PCJMP_f2
 and dword [reg_sp2], 0xffffff
 mov eax, 1
 mov eax, dword [mem2 + 4*eax]
 mov ecx, dword [reg_d2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [mem2 + 4*eax]
 mov eax, 1
 setne al
 mov eax, dword [reg_b2]
 call PCJMP_f2
 and dword [reg_d2], 0xffffff
 mov eax, 1
 mov eax, dword [reg_b2]
 call PCJMP_f2
 mov dword [reg_a2], eax
 mov eax, 1
 mov dword [reg_a2], eax
 mov eax, dword [mem2 + 4*eax]
 mov edi, 0x60
 call PCJMP_f2
 mov eax, dword [reg_b2]
 jmp PIXf2_46_20
PIXf2_0_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_0_21
PIXf2_1_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 jmp PIXf2_1_21
PIXf2_2_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_24: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0x1a
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_25: mov edi, 0x1c
 mov eax, 1
 call PCJMP_f2
BBf2_26: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_2_21
PIXf2_3_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x26
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_37: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_3_21
PIXf2_4_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x33
 mov eax, 1
 call PCJMP_f2
BBf2_50: mov dword [reg_a2], 0x0
BBf2_51: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_4_21
PIXf2_5_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov edi, 0x44
 mov eax, 1
 call PCJMP_f2
BBf2_67: mov dword [reg_a2], 0x0
BBf2_68: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 jmp PIXf2_5_21
PIXf2_6_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_6_21
PIXf2_7_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_93: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 jmp PIXf2_7_21
PIXf2_8_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_8_21
PIXf2_9_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_9_21
PIXf2_10_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xa
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 jmp PIXf2_10_21
PIXf2_11_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_148: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 sub dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 jmp PIXf2_11_21
PIXf2_12_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_165: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xa7
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_166: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_12_21
PIXf2_13_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_190: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov dword [reg_a2], 0x61
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_13_21
PIXf2_14_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f2
BBf2_205: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_b2], 0x1
 mov edi, 0xd1
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_206: mov dword [reg_a2], 0x20
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 jmp PIXf2_14_21
PIXf2_15_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xd7
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_213: mov dword [reg_a2], 0x18
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xd6
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_15_21
PIXf2_16_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0xe5
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_16_21
PIXf2_17_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xf5
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_244: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_17_21
PIXf2_18_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f2
BBf2_261: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x106
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_18_21
PIXf2_19_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_19_21
PIXf2_20_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_20_21
PIXf2_21_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_21_21
PIXf2_22_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_22_21
PIXf2_23_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_23_21
PIXf2_24_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_24_21
PIXf2_25_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_25_21
PIXf2_26_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x159
 mov eax, 1
 call PCJMP_f2
BBf2_350: mov eax, dword [reg_bp2]
 jmp PIXf2_26_21
PIXf2_27_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_361: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_27_21
PIXf2_28_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_28_21
PIXf2_29_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_29_21
PIXf2_30_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0x1af
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_430: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_30_21
PIXf2_31_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_31_21
PIXf2_32_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_32_21
PIXf2_33_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_457: mov edi, 0x1cb
 mov eax, 1
 call PCJMP_f2
BBf2_458: mov edi, 0x1cc
 mov eax, 1
 call PCJMP_f2
BBf2_459: mov edi, 0x1c6
 mov eax, 1
 call PCJMP_f2
BBf2_460: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_33_21
PIXf2_34_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_34_21
PIXf2_35_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_480: mov edi, 0x1db
 mov eax, 1
 call PCJMP_f2
BBf2_481: mov edi, 0x1e3
 mov eax, 1
 call PCJMP_f2
BBf2_482: mov edi, 0x1e4
 jmp PIXf2_35_21
PIXf2_36_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_36_21
PIXf2_37_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_37_21
PIXf2_38_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_38_21
PIXf2_39_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 jmp PIXf2_39_21
PIXf2_40_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f2
BBf2_547: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffeff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_40_21
PIXf2_41_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_41_21
PIXf2_42_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x235
 jmp PIXf2_42_21
PIXf2_43_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_579: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 jmp PIXf2_43_21
PIXf2_44_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_596: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 jmp PIXf2_44_21
PIXf2_45_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_bp2]
 mov eax, dword [reg_sp2]
 add dword [reg_sp2], 0x1
 mov dword [reg_b2], eax
 mov dword [reg_b2], eax
 mov eax, dword [mem2 + 4*eax]
 call PCJMP_f2
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov ecx, dword [reg_d2]
 mov eax, dword [reg_b2]
 mov eax, 1
 cmp dword [reg_a2], 0x0
 mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, dword [reg_a2]
 mov eax, dword [reg_a2]
 sete  al
 add dword [reg_d2], 0xffffff
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [reg_a2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_45_21
PIXf2_46_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_c2]
 mov eax, dword [reg_a2]
 mov eax, dword [reg_a2]
 mov eax, dword [reg_a2]
 movzx eax, al
 mov dword [reg_a2], eax
 and dword [reg_d2], 0xffffff
 sete  al
 cmp dword [reg_a2], 0x0
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_b2], eax
 and dword [reg_d2], 0xffffff
 and dword [reg_sp2], 0xffffff
 setne al
 and dword [reg_d2], 0xffffff
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_a2]
 mov dword [reg_a2], eax
 and dword [reg_sp2], 0xffffff
 mov dword [reg_bp2], eax
 mov dword [mem2 + 4*ecx], eax
 movzx eax, al
 mov eax, dword [reg_b2]
 jmp PIXf2_46_21
PIXf2_0_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffce
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_0_22
PIXf2_1_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_17: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_1_22
PIXf2_2_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_27: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 jmp PIXf2_2_22
PIXf2_3_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_38: mov eax, dword [reg_bp2]
 jmp PIXf2_3_22
PIXf2_4_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 jmp PIXf2_4_22
PIXf2_5_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_5_22
PIXf2_6_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 jmp PIXf2_6_22
PIXf2_7_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 sub dword [reg_sp2], 0x4
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_94: mov eax, dword [reg_bp2]
 jmp PIXf2_7_22
PIXf2_8_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_8_22
PIXf2_9_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_9_22
PIXf2_10_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x8a
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f2
BBf2_138: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_10_22
PIXf2_11_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x10
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_11_22
PIXf2_12_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0xb
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_167: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xa9
 jmp PIXf2_12_22
PIXf2_13_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 jmp PIXf2_13_22
PIXf2_14_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x0
 mov edi, 0xd0
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_207: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_14_22
PIXf2_15_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f2
BBf2_214: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, ebx
 jmp PIXf2_15_22
PIXf2_16_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_228: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_16_22
PIXf2_17_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x58
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_245: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 jmp PIXf2_17_22
PIXf2_18_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f2
BBf2_262: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x10c
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_263: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_18_22
PIXf2_19_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x102
 mov eax, 1
 call PCJMP_f2
BBf2_279: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_19_22
PIXf2_20_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_294: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 jmp PIXf2_20_22
PIXf2_21_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x12f
 mov eax, 1
 call PCJMP_f2
BBf2_302: mov edi, 0x130
 mov eax, 1
 call PCJMP_f2
BBf2_303: mov edi, 0x128
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_21_22
PIXf2_22_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_22_22
PIXf2_23_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_23_22
PIXf2_24_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_24_22
PIXf2_25_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_25_22
PIXf2_26_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_26_22
PIXf2_27_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_27_22
PIXf2_28_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 jmp PIXf2_28_22
PIXf2_29_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x19c
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_411: mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 jmp PIXf2_29_22
PIXf2_30_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_30_22
PIXf2_31_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 jmp PIXf2_31_22
PIXf2_32_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_32_22
PIXf2_33_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_33_22
PIXf2_34_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 jmp PIXf2_34_22
PIXf2_35_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_483: mov edi, 0x1d9
 mov eax, 1
 call PCJMP_f2
BBf2_484: mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
 jmp PIXf2_35_22
PIXf2_36_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x6c
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1f4
 cmp dword [reg_a2], 0x0
 sete  al
 jmp PIXf2_36_22
PIXf2_37_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_518: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 jmp PIXf2_37_22
PIXf2_38_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 cmp dword [reg_a2], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x214
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_528: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_38_22
PIXf2_39_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_538: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_39_22
PIXf2_40_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_548: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 jmp PIXf2_40_22
PIXf2_41_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 jmp PIXf2_41_22
PIXf2_42_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_570: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_42_22
PIXf2_43_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_43_22
PIXf2_44_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_44_22
PIXf2_45_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_d2]
 cmp dword [reg_a2], 0x0
 add dword [reg_b2], 0x3
 mov eax, dword [mem2 + 4*eax]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_a2]
 setne al
 and dword [reg_b2], 0xffffff
 mov edi, 0x11a
 call PCJMP_f2
 call PCJMP_f2
 sete  al
 mov dword [reg_bp2], eax
 add dword [reg_d2], 0xffffff
 setbe al
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_d2]
 mov dword [reg_b2], eax
 call PCJMP_f2
 mov eax, dword [reg_b2]
 call PCJMP_f2
 mov eax, dword [reg_bp2]
 call PCJMP_f2
 jmp PIXf2_45_22
PIXf2_46_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 setne al
 mov eax, dword [mem2 + 4*eax]
 call PCJMP_f2
 mov eax, dword [reg_sp2]
 call PCJMP_f2
 and dword [reg_sp2], 0xffffff
 cmp dword [reg_a2], 0x0
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], 0x0
 add dword [reg_b2], 0xfffffc
 mov ecx, dword [reg_d2]
 call PCJMP_f2
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov dword [reg_a2], eax
 mov dword [reg_a2], eax
 mov dword [reg_sp2], eax
 mov eax, dword [reg_a2]
 mov eax, dword [reg_a2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_46_22
PIXf2_0_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_7: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcf
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_0_23
PIXf2_1_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x13
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_18: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 jmp PIXf2_1_23
PIXf2_2_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x16
 mov eax, 1
 call PCJMP_f2
BBf2_28: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcb
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 jmp PIXf2_2_23
PIXf2_3_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xfffffe
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_3_23
PIXf2_4_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x35
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_52: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_4_23
PIXf2_5_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x46
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_69: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_5_23
PIXf2_6_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_6_23
PIXf2_7_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x18
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 jmp PIXf2_7_23
PIXf2_8_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 jmp PIXf2_8_23
PIXf2_9_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x7b
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_122: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_9_23
PIXf2_10_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x30
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_10_23
PIXf2_11_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x95
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 jmp PIXf2_11_23
PIXf2_12_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_168: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x20
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_12_23
PIXf2_13_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], 0x0
 mov edi, 0xc0
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_191: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x7a
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_13_23
PIXf2_14_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x7f
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 jmp PIXf2_14_23
PIXf2_15_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_215: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_15_23
PIXf2_16_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
BBf2_229: mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_16_23
PIXf2_17_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_246: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0xf8
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_247: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_17_23
PIXf2_18_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x108
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 jmp PIXf2_18_23
PIXf2_19_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setne al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x11c
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_280: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffa
 and dword [reg_b2], 0xffffff
 jmp PIXf2_19_23
PIXf2_20_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_295: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_20_23
PIXf2_21_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_304: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 jmp PIXf2_21_23
PIXf2_22_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_314: mov dword [reg_a2], 0x8000
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_22_23
PIXf2_23_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 jmp PIXf2_23_23
PIXf2_24_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_24_23
PIXf2_25_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x156
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x24
 mov eax, 1
 jmp PIXf2_25_23
PIXf2_26_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_351: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_352: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_26_23
PIXf2_27_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_27_23
PIXf2_28_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_386: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_387: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_28_23
PIXf2_29_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_412: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 jmp PIXf2_29_23
PIXf2_30_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_431: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov edi, 0x1b1
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_432: mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 jmp PIXf2_30_23
PIXf2_31_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_31_23
PIXf2_32_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 jmp PIXf2_32_23
PIXf2_33_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 jmp PIXf2_33_23
PIXf2_34_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 jmp PIXf2_34_23
PIXf2_35_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_485: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_486: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 jmp PIXf2_35_23
PIXf2_36_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_499: mov edi, 0x201
 mov eax, 1
 call PCJMP_f2
BBf2_500: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x64
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 jmp PIXf2_36_23
PIXf2_37_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_b2], 0xffffdc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f2
BBf2_519: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_a2]
 jmp PIXf2_37_23
PIXf2_38_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffda
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 jmp PIXf2_38_23
PIXf2_39_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_539: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0x4
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 jmp PIXf2_39_23
PIXf2_40_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 call PCJMP_f2
BBf2_549: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0x2
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 jmp PIXf2_40_23
PIXf2_41_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x234
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 jmp PIXf2_41_23
PIXf2_42_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_571: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_572: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 jmp PIXf2_42_23
PIXf2_43_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x140
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 jmp PIXf2_43_23
PIXf2_44_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setb  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x25d
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_597: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 jmp PIXf2_44_23
PIXf2_45_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov dword [reg_sp2], eax
 mov dword [reg_b2], eax
 and dword [reg_sp2], 0xffffff
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_b2], eax
 mov eax, 1
 mov ecx, dword [reg_b2]
 mov eax, dword [reg_a2]
 add dword [reg_sp2], 0x1
 add dword [reg_d2], 0xffffff
 cmp dword [reg_a2], eax
 call PCJMP_f2
 and dword [reg_b2], 0xffffff
 and dword [reg_d2], 0xffffff
 sete  al
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 add dword [reg_d2], 0xffffff
 add dword [reg_b2], 0xffffff
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 jmp PIXf2_45_23
PIXf2_46_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, 1
 mov eax, dword [reg_d2]
 mov dword [reg_a2], eax
 mov eax, 1
 sete  al
 and dword [reg_sp2], 0xffffff
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], eax
 mov dword [reg_sp2], eax
 add dword [reg_sp2], 0x1
 mov eax, dword [reg_a2]
 mov eax, dword [mem2 + 4*eax]
 call PCJMP_f2
 mov eax, 1
 mov dword [reg_a2], eax
 and dword [reg_sp2], 0xffffff
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov ebx, 0x0
 mov dword [reg_a2], eax
 sete  al
 mov eax, dword [reg_a2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], eax
 jmp PIXf2_46_23
PIXf2_0_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x2
 mov eax, 1
 call PCJMP_f2
BBf2_8: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffcd
 and dword [reg_b2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_9: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffe8
 mov esi, 1
 jmp PIX_END_f2
PIXf2_1_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_19: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 mov esi, 2
 jmp PIX_END_f2
PIXf2_2_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_29: mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffcd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov esi, 3
 jmp PIX_END_f2
PIXf2_3_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x27
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov esi, 4
 jmp PIX_END_f2
PIXf2_4_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 mov esi, 5
 jmp PIX_END_f2
PIXf2_5_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 sub dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 mov esi, 6
 jmp PIX_END_f2
PIXf2_6_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x54
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_83: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov esi, 7
 jmp PIX_END_f2
PIXf2_7_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x60
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_95: mov edi, 0x61
 mov eax, 1
 call PCJMP_f2
BBf2_96: mov edi, 0x67
 mov eax, 1
 call PCJMP_f2
BBf2_97: mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov esi, 8
 jmp PIX_END_f2
PIXf2_8_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x6f
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_110: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov esi, 9
 jmp PIX_END_f2
PIXf2_9_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 mov esi, 10
 jmp PIX_END_f2
PIXf2_10_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_a2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov esi, 11
 jmp PIX_END_f2
PIXf2_11_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f2
BBf2_149: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov esi, 12
 jmp PIX_END_f2
PIXf2_12_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_169: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov esi, 13
 jmp PIX_END_f2
PIXf2_13_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_192: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0xc4
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_193: mov dword [reg_a2], 0x41
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 mov esi, 14
 jmp PIX_END_f2
PIXf2_14_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_208: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 cmp dword [reg_b2], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b2], eax
BBf2_209: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov esi, 15
 jmp PIX_END_f2
PIXf2_15_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_216: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_217: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 mov esi, 16
 jmp PIX_END_f2
PIXf2_16_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_230: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov esi, 17
 jmp PIX_END_f2
PIXf2_17_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov esi, 18
 jmp PIX_END_f2
PIXf2_18_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xba
 mov eax, 1
 call PCJMP_f2
BBf2_264: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, 0x10a
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_265: mov dword [reg_a2], 0x41
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov esi, 19
 jmp PIX_END_f2
PIXf2_19_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov edi, 0x11a
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_281: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 mov esi, 20
 jmp PIX_END_f2
PIXf2_20_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_296: mov dword [reg_a2], 0x30
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov esi, 21
 jmp PIX_END_f2
PIXf2_21_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_305: mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_306: mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_bp2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov esi, 22
 jmp PIX_END_f2
PIXf2_22_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x5
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov esi, 23
 jmp PIX_END_f2
PIXf2_23_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_c2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov esi, 24
 jmp PIX_END_f2
PIXf2_24_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
BBf2_337: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f2
BBf2_338: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov esi, 25
 jmp PIX_END_f2
PIXf2_25_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 call PCJMP_f2
BBf2_342: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffc
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov esi, 26
 jmp PIX_END_f2
PIXf2_26_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 sub dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
BBf2_353: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov esi, 27
 jmp PIX_END_f2
PIXf2_27_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov edi, 0x16b
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_362: mov edi, 0x16c
 mov eax, 1
 call PCJMP_f2
BBf2_363: mov edi, 0x16d
 mov eax, 1
 call PCJMP_f2
BBf2_364: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov esi, 28
 jmp PIX_END_f2
PIXf2_28_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
BBf2_388: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov dword [reg_b2], 0x1
 mov edi, 0x186
 cmp dword [reg_a2], 0x0
 setne al
 call PCJMP_f2
BBf2_389: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov esi, 29
 jmp PIX_END_f2
PIXf2_29_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x3
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov esi, 30
 jmp PIX_END_f2
PIXf2_30_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_bp2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_433: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov esi, 31
 jmp PIX_END_f2
PIXf2_31_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
BBf2_448: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x4
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov esi, 32
 jmp PIX_END_f2
PIXf2_32_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 add dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov esi, 33
 jmp PIX_END_f2
PIXf2_33_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_c2]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov esi, 34
 jmp PIX_END_f2
PIXf2_34_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 sub dword [reg_a2], 0x1
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov esi, 35
 jmp PIX_END_f2
PIXf2_35_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x1e7
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov esi, 36
 jmp PIX_END_f2
PIXf2_36_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 sete  al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x1f6
 cmp dword [reg_a2], 0x0
 sete  al
 call PCJMP_f2
BBf2_501: mov edi, 0x202
 mov eax, 1
 call PCJMP_f2
BBf2_502: mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffdb
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 mov esi, 37
 jmp PIX_END_f2
PIXf2_37_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_a2], eax
 add dword [reg_a2], 0xffffdd
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_b2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov esi, 38
 jmp PIX_END_f2
PIXf2_38_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 add dword [reg_a2], eax
 and dword [reg_a2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_b2]
 cmp dword [reg_a2], eax
 setbe al
 movzx eax, al
 mov dword [reg_a2], eax
 mov edi, 0x212
 mov esi, 39
 jmp PIX_END_f2
PIXf2_39_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov esi, 40
 jmp PIX_END_f2
PIXf2_40_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov esi, 41
 jmp PIX_END_f2
PIXf2_41_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f2
BBf2_564: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x2
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffe
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_b2], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xfffffd
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov esi, 42
 jmp PIX_END_f2
PIXf2_42_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0x2
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x23d
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 mov esi, 43
 jmp PIX_END_f2
PIXf2_43_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 and dword [reg_sp2], 0xffffff
 mov eax, dword [reg_a2]
 mov dword [reg_bp2], eax
 mov eax, dword [reg_sp2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 and dword [reg_sp2], 0xffffff
 mov edi, dword [reg_a2]
 mov eax, 1
 call PCJMP_f2
BBf2_580: mov dword [reg_b2], 0x13f
 mov eax, dword [reg_b2]
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_a2], eax
 mov eax, dword [reg_bp2]
 mov dword [reg_b2], eax
 add dword [reg_b2], 0xffffff
 and dword [reg_b2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_b2]
 mov dword [mem2 + 4*ecx], eax
 mov dword [reg_a2], 0x0
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 mov esi, 44
 jmp PIX_END_f2
PIXf2_44_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov dword [reg_a2], 0x256
 mov eax, dword [reg_sp2]
 mov dword [reg_d2], eax
 add dword [reg_d2], 0xffffff
 and dword [reg_d2], 0xffffff
 mov eax, dword [reg_a2]
 mov ecx, dword [reg_d2]
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [reg_d2]
 mov dword [reg_sp2], eax
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f2
BBf2_598: mov eax, dword [reg_b2]
 mov dword [reg_a2], eax
 add dword [reg_sp2], 0x1
 mov esi, 45
 jmp PIX_END_f2
PIXf2_45_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov eax, 1
 cmp dword [reg_b2], 0x0
 mov eax, 1
 mov eax, 1
 mov dword [reg_sp2], eax
 and dword [reg_d2], 0xffffff
 mov dword [reg_a2], 0x0
 mov dword [reg_a2], eax
 mov eax, ebx
 add dword [reg_d2], 0xffffff
 mov dword [reg_b2], eax
 mov eax, 1
 mov edi, 0x10a
 mov dword [reg_sp2], eax
 mov edi, 0x3a
 mov eax, dword [mem2 + 4*eax]
 mov dword [reg_b2], eax
 mov eax, dword [reg_a2]
 mov eax, dword [mem2 + 4*eax]
 call PCJMP_f2
 int 0x80
 mov eax, 1
 mov dword [reg_a2], eax
 call PCJMP_f2
 and dword [reg_a2], 0xffffff
 mov esi, 46
 jmp PIX_END_f2
PIXf2_46_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem2]
 mov dword [reg_a2], eax
 sete  al
 mov eax, 1
 mov dword [reg_a2], eax
 mov eax, dword [reg_a2]
 mov dword [reg_sp2], eax
 mov eax, dword [reg_c2]
 mov eax, dword [reg_a2]
 add dword [reg_d2], 0xffffff
 mov dword [reg_b2], eax
 call PCJMP_f2
 add dword [reg_b2], 0x2
 mov dword [mem2 + 4*ecx], eax
 mov eax, dword [mem2 + 4*eax]
 mov eax, dword [reg_d2]
 and dword [reg_b2], 0xffffff
 mov dword [mem2 + 4*ecx], eax
 and dword [reg_d2], 0xffffff
 mov edi, 0x195
 mov eax, dword [mem2 + 4*eax]
 movzx eax, al
 int 0x80
 mov eax, dword [reg_a2]
 and dword [reg_sp2], 0xffffff
 mov esi, 47
 jmp PIX_END_f2
PIX_PAD_f2_0: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_1
PIX_PAD_f2_1: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_2
PIX_PAD_f2_2: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_3
PIX_PAD_f2_3: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_4
PIX_PAD_f2_4: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_5
PIX_PAD_f2_5: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_6
PIX_PAD_f2_6: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_7
PIX_PAD_f2_7: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_8
PIX_PAD_f2_8: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_9
PIX_PAD_f2_9: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_10
PIX_PAD_f2_10: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_11
PIX_PAD_f2_11: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_12
PIX_PAD_f2_12: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_13
PIX_PAD_f2_13: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_14
PIX_PAD_f2_14: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_15
PIX_PAD_f2_15: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_16
PIX_PAD_f2_16: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_17
PIX_PAD_f2_17: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_18
PIX_PAD_f2_18: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_19
PIX_PAD_f2_19: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_20
PIX_PAD_f2_20: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_21
PIX_PAD_f2_21: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_22
PIX_PAD_f2_22: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f2_23
PIX_PAD_f2_23: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_END_f2
PIX_END_f2:
jmp PIX_START_f2


 mov eax, 1
 call PCJMP_f0

BBf0_4:
 ; op: MOV
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 ; op: LOAD
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 ; op: ADD
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 ; op: JMP
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f0

BBf0_5:
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 ; op: MOV
 mov dword [reg_a], 0x6
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f0

BBf0_6:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_a], 0x7
 ; op: MOV
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 ; op: ADD
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 ; op: STORE
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 ; op: MOV
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 ; op: JMP
 mov edi, 0x3
 mov eax, 1
 call PCJMP_f0

BBf0_7:
 ; op: MOV
 mov eax, dword [reg_b]
 mov dword [reg_a], eax
 ; op: MOV
 mov dword [reg_a], 0x0
 ; op: MOV
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 ; op: EXIT
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 ; op: EXIT
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
JMP_TABLE_f0:
 dd BBf0_0 + 0xabad1dea
 dd BBf0_1 + 0xabad1dea
 dd BBf0_2 + 0xabad1dea
 dd BBf0_3 + 0xabad1dea
 dd BBf0_4 + 0xabad1dea
 dd BBf0_5 + 0xabad1dea
 dd BBf0_6 + 0xabad1dea
 dd BBf0_7 + 0xabad1dea
; ----- End of func 0 -----

JMP_TABLE_f1:
 dd BBf1_0 + 0xabad1dea
 dd BBf1_1 + 0xabad1dea
 dd BBf1_2 + 0xabad1dea
 dd BBf1_3 + 0xabad1dea
 dd BBf1_4 + 0xabad1dea
 dd BBf1_5 + 0xabad1dea
 dd BBf1_6 + 0xabad1dea
 dd BBf1_7 + 0xabad1dea
 dd BBf1_8 + 0xabad1dea
 dd BBf1_9 + 0xabad1dea
 dd BBf1_10 + 0xabad1dea
 dd BBf1_11 + 0xabad1dea
 dd BBf1_12 + 0xabad1dea
 dd BBf1_13 + 0xabad1dea
 dd BBf1_14 + 0xabad1dea
 dd BBf1_15 + 0xabad1dea
 dd BBf1_16 + 0xabad1dea
 dd BBf1_17 + 0xabad1dea
 dd BBf1_18 + 0xabad1dea
 dd BBf1_19 + 0xabad1dea
 dd BBf1_20 + 0xabad1dea
 dd BBf1_21 + 0xabad1dea
 dd BBf1_22 + 0xabad1dea
 dd BBf1_23 + 0xabad1dea
 dd BBf1_24 + 0xabad1dea
 dd BBf1_25 + 0xabad1dea
 dd BBf1_26 + 0xabad1dea
 dd BBf1_27 + 0xabad1dea
 dd BBf1_28 + 0xabad1dea
 dd BBf1_29 + 0xabad1dea
 dd BBf1_30 + 0xabad1dea
 dd BBf1_31 + 0xabad1dea
 dd BBf1_32 + 0xabad1dea
 dd BBf1_33 + 0xabad1dea
 dd BBf1_34 + 0xabad1dea
 dd BBf1_35 + 0xabad1dea
 dd BBf1_36 + 0xabad1dea
 dd BBf1_37 + 0xabad1dea
 dd BBf1_38 + 0xabad1dea
 dd BBf1_39 + 0xabad1dea
 dd BBf1_40 + 0xabad1dea
 dd BBf1_41 + 0xabad1dea
 dd BBf1_42 + 0xabad1dea
 dd BBf1_43 + 0xabad1dea
 dd BBf1_44 + 0xabad1dea
 dd BBf1_45 + 0xabad1dea
 dd BBf1_46 + 0xabad1dea
 dd BBf1_47 + 0xabad1dea
 dd BBf1_48 + 0xabad1dea
 dd BBf1_49 + 0xabad1dea
 dd BBf1_50 + 0xabad1dea
 dd BBf1_51 + 0xabad1dea
 dd BBf1_52 + 0xabad1dea
 dd BBf1_53 + 0xabad1dea
 dd BBf1_54 + 0xabad1dea
 dd BBf1_55 + 0xabad1dea
 dd BBf1_56 + 0xabad1dea
 dd BBf1_57 + 0xabad1dea
 dd BBf1_58 + 0xabad1dea
 dd BBf1_59 + 0xabad1dea
 dd BBf1_60 + 0xabad1dea
 dd BBf1_61 + 0xabad1dea
 dd BBf1_62 + 0xabad1dea
 dd BBf1_63 + 0xabad1dea
 dd BBf1_64 + 0xabad1dea
 dd BBf1_65 + 0xabad1dea
 dd BBf1_66 + 0xabad1dea
 dd BBf1_67 + 0xabad1dea
 dd BBf1_68 + 0xabad1dea
 dd BBf1_69 + 0xabad1dea
 dd BBf1_70 + 0xabad1dea
 dd BBf1_71 + 0xabad1dea
 dd BBf1_72 + 0xabad1dea
 dd BBf1_73 + 0xabad1dea
 dd BBf1_74 + 0xabad1dea
 dd BBf1_75 + 0xabad1dea
 dd BBf1_76 + 0xabad1dea
 dd BBf1_77 + 0xabad1dea
 dd BBf1_78 + 0xabad1dea
 dd BBf1_79 + 0xabad1dea
 dd BBf1_80 + 0xabad1dea
 dd BBf1_81 + 0xabad1dea
 dd BBf1_82 + 0xabad1dea
 dd BBf1_83 + 0xabad1dea
 dd BBf1_84 + 0xabad1dea
 dd BBf1_85 + 0xabad1dea
 dd BBf1_86 + 0xabad1dea
 dd BBf1_87 + 0xabad1dea
 dd BBf1_88 + 0xabad1dea
 dd BBf1_89 + 0xabad1dea
 dd BBf1_90 + 0xabad1dea
 dd BBf1_91 + 0xabad1dea
 dd BBf1_92 + 0xabad1dea
 dd BBf1_93 + 0xabad1dea
 dd BBf1_94 + 0xabad1dea
 dd BBf1_95 + 0xabad1dea
 dd BBf1_96 + 0xabad1dea
 dd BBf1_97 + 0xabad1dea
 dd BBf1_98 + 0xabad1dea
 dd BBf1_99 + 0xabad1dea
 dd BBf1_100 + 0xabad1dea
 dd BBf1_101 + 0xabad1dea
 dd BBf1_102 + 0xabad1dea
 dd BBf1_103 + 0xabad1dea
 dd BBf1_104 + 0xabad1dea
 dd BBf1_105 + 0xabad1dea
 dd BBf1_106 + 0xabad1dea
 dd BBf1_107 + 0xabad1dea
 dd BBf1_108 + 0xabad1dea
 dd BBf1_109 + 0xabad1dea
 dd BBf1_110 + 0xabad1dea
 dd BBf1_111 + 0xabad1dea
 dd BBf1_112 + 0xabad1dea
 dd BBf1_113 + 0xabad1dea
 dd BBf1_114 + 0xabad1dea
 dd BBf1_115 + 0xabad1dea
 dd BBf1_116 + 0xabad1dea
 dd BBf1_117 + 0xabad1dea
 dd BBf1_118 + 0xabad1dea
 dd BBf1_119 + 0xabad1dea
 dd BBf1_120 + 0xabad1dea
 dd BBf1_121 + 0xabad1dea
 dd BBf1_122 + 0xabad1dea
 dd BBf1_123 + 0xabad1dea
 dd BBf1_124 + 0xabad1dea
 dd BBf1_125 + 0xabad1dea
 dd BBf1_126 + 0xabad1dea
 dd BBf1_127 + 0xabad1dea
 dd BBf1_128 + 0xabad1dea
 dd BBf1_129 + 0xabad1dea
 dd BBf1_130 + 0xabad1dea
 dd BBf1_131 + 0xabad1dea
 dd BBf1_132 + 0xabad1dea
 dd BBf1_133 + 0xabad1dea
 dd BBf1_134 + 0xabad1dea
 dd BBf1_135 + 0xabad1dea
 dd BBf1_136 + 0xabad1dea
 dd BBf1_137 + 0xabad1dea
 dd BBf1_138 + 0xabad1dea
 dd BBf1_139 + 0xabad1dea
 dd BBf1_140 + 0xabad1dea
 dd BBf1_141 + 0xabad1dea
 dd BBf1_142 + 0xabad1dea
 dd BBf1_143 + 0xabad1dea
 dd BBf1_144 + 0xabad1dea
 dd BBf1_145 + 0xabad1dea
 dd BBf1_146 + 0xabad1dea
 dd BBf1_147 + 0xabad1dea
 dd BBf1_148 + 0xabad1dea
 dd BBf1_149 + 0xabad1dea
 dd BBf1_150 + 0xabad1dea
 dd BBf1_151 + 0xabad1dea
 dd BBf1_152 + 0xabad1dea
 dd BBf1_153 + 0xabad1dea
 dd BBf1_154 + 0xabad1dea
 dd BBf1_155 + 0xabad1dea
 dd BBf1_156 + 0xabad1dea
 dd BBf1_157 + 0xabad1dea
 dd BBf1_158 + 0xabad1dea
 dd BBf1_159 + 0xabad1dea
 dd BBf1_160 + 0xabad1dea
 dd BBf1_161 + 0xabad1dea
 dd BBf1_162 + 0xabad1dea
 dd BBf1_163 + 0xabad1dea
 dd BBf1_164 + 0xabad1dea
 dd BBf1_165 + 0xabad1dea
 dd BBf1_166 + 0xabad1dea
 dd BBf1_167 + 0xabad1dea
 dd BBf1_168 + 0xabad1dea
 dd BBf1_169 + 0xabad1dea
 dd BBf1_170 + 0xabad1dea
 dd BBf1_171 + 0xabad1dea
 dd BBf1_172 + 0xabad1dea
 dd BBf1_173 + 0xabad1dea
 dd BBf1_174 + 0xabad1dea
 dd BBf1_175 + 0xabad1dea
 dd BBf1_176 + 0xabad1dea
 dd BBf1_177 + 0xabad1dea
 dd BBf1_178 + 0xabad1dea
 dd BBf1_179 + 0xabad1dea
 dd BBf1_180 + 0xabad1dea
 dd BBf1_181 + 0xabad1dea
 dd BBf1_182 + 0xabad1dea
 dd BBf1_183 + 0xabad1dea
 dd BBf1_184 + 0xabad1dea
 dd BBf1_185 + 0xabad1dea
 dd BBf1_186 + 0xabad1dea
 dd BBf1_187 + 0xabad1dea
 dd BBf1_188 + 0xabad1dea
 dd BBf1_189 + 0xabad1dea
 dd BBf1_190 + 0xabad1dea
 dd BBf1_191 + 0xabad1dea
 dd BBf1_192 + 0xabad1dea
 dd BBf1_193 + 0xabad1dea
 dd BBf1_194 + 0xabad1dea
 dd BBf1_195 + 0xabad1dea
 dd BBf1_196 + 0xabad1dea
 dd BBf1_197 + 0xabad1dea
 dd BBf1_198 + 0xabad1dea
 dd BBf1_199 + 0xabad1dea
 dd BBf1_200 + 0xabad1dea
 dd BBf1_201 + 0xabad1dea
 dd BBf1_202 + 0xabad1dea
 dd BBf1_203 + 0xabad1dea
 dd BBf1_204 + 0xabad1dea
 dd BBf1_205 + 0xabad1dea
 dd BBf1_206 + 0xabad1dea
 dd BBf1_207 + 0xabad1dea
 dd BBf1_208 + 0xabad1dea
 dd BBf1_209 + 0xabad1dea
 dd BBf1_210 + 0xabad1dea
 dd BBf1_211 + 0xabad1dea
 dd BBf1_212 + 0xabad1dea
 dd BBf1_213 + 0xabad1dea
 dd BBf1_214 + 0xabad1dea
 dd BBf1_215 + 0xabad1dea
 dd BBf1_216 + 0xabad1dea
 dd BBf1_217 + 0xabad1dea
 dd BBf1_218 + 0xabad1dea
 dd BBf1_219 + 0xabad1dea
 dd BBf1_220 + 0xabad1dea
 dd BBf1_221 + 0xabad1dea
 dd BBf1_222 + 0xabad1dea
 dd BBf1_223 + 0xabad1dea
 dd BBf1_224 + 0xabad1dea
 dd BBf1_225 + 0xabad1dea
 dd BBf1_226 + 0xabad1dea
 dd BBf1_227 + 0xabad1dea
 dd BBf1_228 + 0xabad1dea
 dd BBf1_229 + 0xabad1dea
 dd BBf1_230 + 0xabad1dea
 dd BBf1_231 + 0xabad1dea
 dd BBf1_232 + 0xabad1dea
 dd BBf1_233 + 0xabad1dea
 dd BBf1_234 + 0xabad1dea
 dd BBf1_235 + 0xabad1dea
 dd BBf1_236 + 0xabad1dea
 dd BBf1_237 + 0xabad1dea
 dd BBf1_238 + 0xabad1dea
 dd BBf1_239 + 0xabad1dea
 dd BBf1_240 + 0xabad1dea
 dd BBf1_241 + 0xabad1dea
 dd BBf1_242 + 0xabad1dea
 dd BBf1_243 + 0xabad1dea
 dd BBf1_244 + 0xabad1dea
 dd BBf1_245 + 0xabad1dea
 dd BBf1_246 + 0xabad1dea
 dd BBf1_247 + 0xabad1dea
 dd BBf1_248 + 0xabad1dea
 dd BBf1_249 + 0xabad1dea
 dd BBf1_250 + 0xabad1dea
 dd BBf1_251 + 0xabad1dea
 dd BBf1_252 + 0xabad1dea
 dd BBf1_253 + 0xabad1dea
 dd BBf1_254 + 0xabad1dea
 dd BBf1_255 + 0xabad1dea
 dd BBf1_256 + 0xabad1dea
 dd BBf1_257 + 0xabad1dea
 dd BBf1_258 + 0xabad1dea
 dd BBf1_259 + 0xabad1dea
 dd BBf1_260 + 0xabad1dea
 dd BBf1_261 + 0xabad1dea
 dd BBf1_262 + 0xabad1dea
 dd BBf1_263 + 0xabad1dea
 dd BBf1_264 + 0xabad1dea
 dd BBf1_265 + 0xabad1dea
 dd BBf1_266 + 0xabad1dea
 dd BBf1_267 + 0xabad1dea
 dd BBf1_268 + 0xabad1dea
 dd BBf1_269 + 0xabad1dea
 dd BBf1_270 + 0xabad1dea
 dd BBf1_271 + 0xabad1dea
 dd BBf1_272 + 0xabad1dea
 dd BBf1_273 + 0xabad1dea
 dd BBf1_274 + 0xabad1dea
 dd BBf1_275 + 0xabad1dea
 dd BBf1_276 + 0xabad1dea
 dd BBf1_277 + 0xabad1dea
 dd BBf1_278 + 0xabad1dea
 dd BBf1_279 + 0xabad1dea
 dd BBf1_280 + 0xabad1dea
 dd BBf1_281 + 0xabad1dea
 dd BBf1_282 + 0xabad1dea
 dd BBf1_283 + 0xabad1dea
 dd BBf1_284 + 0xabad1dea
 dd BBf1_285 + 0xabad1dea
 dd BBf1_286 + 0xabad1dea
 dd BBf1_287 + 0xabad1dea
 dd BBf1_288 + 0xabad1dea
 dd BBf1_289 + 0xabad1dea
 dd BBf1_290 + 0xabad1dea
 dd BBf1_291 + 0xabad1dea
 dd BBf1_292 + 0xabad1dea
 dd BBf1_293 + 0xabad1dea
 dd BBf1_294 + 0xabad1dea
 dd BBf1_295 + 0xabad1dea
 dd BBf1_296 + 0xabad1dea
 dd BBf1_297 + 0xabad1dea
 dd BBf1_298 + 0xabad1dea
 dd BBf1_299 + 0xabad1dea
 dd BBf1_300 + 0xabad1dea
 dd BBf1_301 + 0xabad1dea
 dd BBf1_302 + 0xabad1dea
 dd BBf1_303 + 0xabad1dea
 dd BBf1_304 + 0xabad1dea
 dd BBf1_305 + 0xabad1dea
 dd BBf1_306 + 0xabad1dea
 dd BBf1_307 + 0xabad1dea
 dd BBf1_308 + 0xabad1dea
 dd BBf1_309 + 0xabad1dea
 dd BBf1_310 + 0xabad1dea
 dd BBf1_311 + 0xabad1dea
 dd BBf1_312 + 0xabad1dea
 dd BBf1_313 + 0xabad1dea
 dd BBf1_314 + 0xabad1dea
 dd BBf1_315 + 0xabad1dea
 dd BBf1_316 + 0xabad1dea
 dd BBf1_317 + 0xabad1dea
 dd BBf1_318 + 0xabad1dea
 dd BBf1_319 + 0xabad1dea
 dd BBf1_320 + 0xabad1dea
 dd BBf1_321 + 0xabad1dea
 dd BBf1_322 + 0xabad1dea
 dd BBf1_323 + 0xabad1dea
 dd BBf1_324 + 0xabad1dea
 dd BBf1_325 + 0xabad1dea
 dd BBf1_326 + 0xabad1dea
 dd BBf1_327 + 0xabad1dea
 dd BBf1_328 + 0xabad1dea
 dd BBf1_329 + 0xabad1dea
 dd BBf1_330 + 0xabad1dea
 dd BBf1_331 + 0xabad1dea
 dd BBf1_332 + 0xabad1dea
 dd BBf1_333 + 0xabad1dea
 dd BBf1_334 + 0xabad1dea
 dd BBf1_335 + 0xabad1dea
 dd BBf1_336 + 0xabad1dea
 dd BBf1_337 + 0xabad1dea
 dd BBf1_338 + 0xabad1dea
 dd BBf1_339 + 0xabad1dea
 dd BBf1_340 + 0xabad1dea
 dd BBf1_341 + 0xabad1dea
 dd BBf1_342 + 0xabad1dea
 dd BBf1_343 + 0xabad1dea
 dd BBf1_344 + 0xabad1dea
 dd BBf1_345 + 0xabad1dea
 dd BBf1_346 + 0xabad1dea
 dd BBf1_347 + 0xabad1dea
 dd BBf1_348 + 0xabad1dea
 dd BBf1_349 + 0xabad1dea
 dd BBf1_350 + 0xabad1dea
 dd BBf1_351 + 0xabad1dea
 dd BBf1_352 + 0xabad1dea
 dd BBf1_353 + 0xabad1dea
 dd BBf1_354 + 0xabad1dea
 dd BBf1_355 + 0xabad1dea
 dd BBf1_356 + 0xabad1dea
 dd BBf1_357 + 0xabad1dea
 dd BBf1_358 + 0xabad1dea
 dd BBf1_359 + 0xabad1dea
 dd BBf1_360 + 0xabad1dea
 dd BBf1_361 + 0xabad1dea
 dd BBf1_362 + 0xabad1dea
 dd BBf1_363 + 0xabad1dea
 dd BBf1_364 + 0xabad1dea
 dd BBf1_365 + 0xabad1dea
 dd BBf1_366 + 0xabad1dea
 dd BBf1_367 + 0xabad1dea
 dd BBf1_368 + 0xabad1dea
 dd BBf1_369 + 0xabad1dea
 dd BBf1_370 + 0xabad1dea
 dd BBf1_371 + 0xabad1dea
 dd BBf1_372 + 0xabad1dea
 dd BBf1_373 + 0xabad1dea
 dd BBf1_374 + 0xabad1dea
 dd BBf1_375 + 0xabad1dea
 dd BBf1_376 + 0xabad1dea
 dd BBf1_377 + 0xabad1dea
 dd BBf1_378 + 0xabad1dea
 dd BBf1_379 + 0xabad1dea
 dd BBf1_380 + 0xabad1dea
 dd BBf1_381 + 0xabad1dea
 dd BBf1_382 + 0xabad1dea
 dd BBf1_383 + 0xabad1dea
 dd BBf1_384 + 0xabad1dea
 dd BBf1_385 + 0xabad1dea
 dd BBf1_386 + 0xabad1dea
 dd BBf1_387 + 0xabad1dea
 dd BBf1_388 + 0xabad1dea
 dd BBf1_389 + 0xabad1dea
 dd BBf1_390 + 0xabad1dea
 dd BBf1_391 + 0xabad1dea
 dd BBf1_392 + 0xabad1dea
 dd BBf1_393 + 0xabad1dea
 dd BBf1_394 + 0xabad1dea
 dd BBf1_395 + 0xabad1dea
 dd BBf1_396 + 0xabad1dea
 dd BBf1_397 + 0xabad1dea
 dd BBf1_398 + 0xabad1dea
 dd BBf1_399 + 0xabad1dea
 dd BBf1_400 + 0xabad1dea
 dd BBf1_401 + 0xabad1dea
 dd BBf1_402 + 0xabad1dea
 dd BBf1_403 + 0xabad1dea
 dd BBf1_404 + 0xabad1dea
 dd BBf1_405 + 0xabad1dea
 dd BBf1_406 + 0xabad1dea
 dd BBf1_407 + 0xabad1dea
 dd BBf1_408 + 0xabad1dea
 dd BBf1_409 + 0xabad1dea
 dd BBf1_410 + 0xabad1dea
 dd BBf1_411 + 0xabad1dea
 dd BBf1_412 + 0xabad1dea
 dd BBf1_413 + 0xabad1dea
 dd BBf1_414 + 0xabad1dea
 dd BBf1_415 + 0xabad1dea
 dd BBf1_416 + 0xabad1dea
 dd BBf1_417 + 0xabad1dea
 dd BBf1_418 + 0xabad1dea
 dd BBf1_419 + 0xabad1dea
 dd BBf1_420 + 0xabad1dea
 dd BBf1_421 + 0xabad1dea
 dd BBf1_422 + 0xabad1dea
 dd BBf1_423 + 0xabad1dea
 dd BBf1_424 + 0xabad1dea
 dd BBf1_425 + 0xabad1dea
 dd BBf1_426 + 0xabad1dea
 dd BBf1_427 + 0xabad1dea
 dd BBf1_428 + 0xabad1dea
 dd BBf1_429 + 0xabad1dea
 dd BBf1_430 + 0xabad1dea
 dd BBf1_431 + 0xabad1dea
 dd BBf1_432 + 0xabad1dea
 dd BBf1_433 + 0xabad1dea
 dd BBf1_434 + 0xabad1dea
 dd BBf1_435 + 0xabad1dea
 dd BBf1_436 + 0xabad1dea
 dd BBf1_437 + 0xabad1dea
 dd BBf1_438 + 0xabad1dea
 dd BBf1_439 + 0xabad1dea
 dd BBf1_440 + 0xabad1dea
 dd BBf1_441 + 0xabad1dea
 dd BBf1_442 + 0xabad1dea
 dd BBf1_443 + 0xabad1dea
 dd BBf1_444 + 0xabad1dea
 dd BBf1_445 + 0xabad1dea
 dd BBf1_446 + 0xabad1dea
 dd BBf1_447 + 0xabad1dea
 dd BBf1_448 + 0xabad1dea
 dd BBf1_449 + 0xabad1dea
 dd BBf1_450 + 0xabad1dea
 dd BBf1_451 + 0xabad1dea
 dd BBf1_452 + 0xabad1dea
 dd BBf1_453 + 0xabad1dea
 dd BBf1_454 + 0xabad1dea
 dd BBf1_455 + 0xabad1dea
 dd BBf1_456 + 0xabad1dea
 dd BBf1_457 + 0xabad1dea
 dd BBf1_458 + 0xabad1dea
 dd BBf1_459 + 0xabad1dea
 dd BBf1_460 + 0xabad1dea
 dd BBf1_461 + 0xabad1dea
 dd BBf1_462 + 0xabad1dea
 dd BBf1_463 + 0xabad1dea
 dd BBf1_464 + 0xabad1dea
 dd BBf1_465 + 0xabad1dea
 dd BBf1_466 + 0xabad1dea
 dd BBf1_467 + 0xabad1dea
 dd BBf1_468 + 0xabad1dea
 dd BBf1_469 + 0xabad1dea
 dd BBf1_470 + 0xabad1dea
 dd BBf1_471 + 0xabad1dea
 dd BBf1_472 + 0xabad1dea
 dd BBf1_473 + 0xabad1dea
 dd BBf1_474 + 0xabad1dea
 dd BBf1_475 + 0xabad1dea
 dd BBf1_476 + 0xabad1dea
 dd BBf1_477 + 0xabad1dea
 dd BBf1_478 + 0xabad1dea
 dd BBf1_479 + 0xabad1dea
 dd BBf1_480 + 0xabad1dea
 dd BBf1_481 + 0xabad1dea
 dd BBf1_482 + 0xabad1dea
 dd BBf1_483 + 0xabad1dea
 dd BBf1_484 + 0xabad1dea
 dd BBf1_485 + 0xabad1dea
 dd BBf1_486 + 0xabad1dea
 dd BBf1_487 + 0xabad1dea
 dd BBf1_488 + 0xabad1dea
 dd BBf1_489 + 0xabad1dea
 dd BBf1_490 + 0xabad1dea
 dd BBf1_491 + 0xabad1dea
 dd BBf1_492 + 0xabad1dea
 dd BBf1_493 + 0xabad1dea
 dd BBf1_494 + 0xabad1dea
 dd BBf1_495 + 0xabad1dea
 dd BBf1_496 + 0xabad1dea
 dd BBf1_497 + 0xabad1dea
 dd BBf1_498 + 0xabad1dea
 dd BBf1_499 + 0xabad1dea
 dd BBf1_500 + 0xabad1dea
 dd BBf1_501 + 0xabad1dea
 dd BBf1_502 + 0xabad1dea
 dd BBf1_503 + 0xabad1dea
 dd BBf1_504 + 0xabad1dea
 dd BBf1_505 + 0xabad1dea
 dd BBf1_506 + 0xabad1dea
 dd BBf1_507 + 0xabad1dea
 dd BBf1_508 + 0xabad1dea
 dd BBf1_509 + 0xabad1dea
 dd BBf1_510 + 0xabad1dea
 dd BBf1_511 + 0xabad1dea
 dd BBf1_512 + 0xabad1dea
 dd BBf1_513 + 0xabad1dea
 dd BBf1_514 + 0xabad1dea
 dd BBf1_515 + 0xabad1dea
 dd BBf1_516 + 0xabad1dea
 dd BBf1_517 + 0xabad1dea
 dd BBf1_518 + 0xabad1dea
 dd BBf1_519 + 0xabad1dea
 dd BBf1_520 + 0xabad1dea
 dd BBf1_521 + 0xabad1dea
 dd BBf1_522 + 0xabad1dea
 dd BBf1_523 + 0xabad1dea
 dd BBf1_524 + 0xabad1dea
 dd BBf1_525 + 0xabad1dea
 dd BBf1_526 + 0xabad1dea
 dd BBf1_527 + 0xabad1dea
 dd BBf1_528 + 0xabad1dea
 dd BBf1_529 + 0xabad1dea
 dd BBf1_530 + 0xabad1dea
 dd BBf1_531 + 0xabad1dea
 dd BBf1_532 + 0xabad1dea
 dd BBf1_533 + 0xabad1dea
 dd BBf1_534 + 0xabad1dea
 dd BBf1_535 + 0xabad1dea
 dd BBf1_536 + 0xabad1dea
 dd BBf1_537 + 0xabad1dea
 dd BBf1_538 + 0xabad1dea
 dd BBf1_539 + 0xabad1dea
 dd BBf1_540 + 0xabad1dea
 dd BBf1_541 + 0xabad1dea
 dd BBf1_542 + 0xabad1dea
 dd BBf1_543 + 0xabad1dea
 dd BBf1_544 + 0xabad1dea
 dd BBf1_545 + 0xabad1dea
 dd BBf1_546 + 0xabad1dea
 dd BBf1_547 + 0xabad1dea
 dd BBf1_548 + 0xabad1dea
 dd BBf1_549 + 0xabad1dea
 dd BBf1_550 + 0xabad1dea
 dd BBf1_551 + 0xabad1dea
 dd BBf1_552 + 0xabad1dea
 dd BBf1_553 + 0xabad1dea
 dd BBf1_554 + 0xabad1dea
 dd BBf1_555 + 0xabad1dea
 dd BBf1_556 + 0xabad1dea
 dd BBf1_557 + 0xabad1dea
 dd BBf1_558 + 0xabad1dea
 dd BBf1_559 + 0xabad1dea
 dd BBf1_560 + 0xabad1dea
 dd BBf1_561 + 0xabad1dea
 dd BBf1_562 + 0xabad1dea
 dd BBf1_563 + 0xabad1dea
 dd BBf1_564 + 0xabad1dea
 dd BBf1_565 + 0xabad1dea
 dd BBf1_566 + 0xabad1dea
 dd BBf1_567 + 0xabad1dea
 dd BBf1_568 + 0xabad1dea
 dd BBf1_569 + 0xabad1dea
 dd BBf1_570 + 0xabad1dea
 dd BBf1_571 + 0xabad1dea
 dd BBf1_572 + 0xabad1dea
 dd BBf1_573 + 0xabad1dea
 dd BBf1_574 + 0xabad1dea
 dd BBf1_575 + 0xabad1dea
 dd BBf1_576 + 0xabad1dea
 dd BBf1_577 + 0xabad1dea
 dd BBf1_578 + 0xabad1dea
 dd BBf1_579 + 0xabad1dea
 dd BBf1_580 + 0xabad1dea
 dd BBf1_581 + 0xabad1dea
 dd BBf1_582 + 0xabad1dea
 dd BBf1_583 + 0xabad1dea
 dd BBf1_584 + 0xabad1dea
 dd BBf1_585 + 0xabad1dea
 dd BBf1_586 + 0xabad1dea
 dd BBf1_587 + 0xabad1dea
 dd BBf1_588 + 0xabad1dea
 dd BBf1_589 + 0xabad1dea
 dd BBf1_590 + 0xabad1dea
 dd BBf1_591 + 0xabad1dea
 dd BBf1_592 + 0xabad1dea
 dd BBf1_593 + 0xabad1dea
 dd BBf1_594 + 0xabad1dea
 dd BBf1_595 + 0xabad1dea
 dd BBf1_596 + 0xabad1dea
 dd BBf1_597 + 0xabad1dea
 dd BBf1_598 + 0xabad1dea
 dd BBf1_599 + 0xabad1dea
 dd BBf1_600 + 0xabad1dea
 dd BBf1_601 + 0xabad1dea
 dd BBf1_602 + 0xabad1dea
 dd BBf1_603 + 0xabad1dea
 dd BBf1_604 + 0xabad1dea
 dd BBf1_605 + 0xabad1dea
 dd BBf1_606 + 0xabad1dea
 dd BBf1_607 + 0xabad1dea
 dd BBf1_608 + 0xabad1dea
 dd BBf1_609 + 0xabad1dea
 ; dd CONTROL_01 + 0xabad1dea
 dd BBf1_610 + 0xabad1dea

 PIX_TABLE_f1:
 dd PIXf0_0_0
 dd PIXf0_1_0
 dd PIXf0_2_0
 dd PIXf0_3_0
 dd PIXf0_4_0
 dd PIXf0_5_0
 dd PIXf0_6_0
 dd PIXf0_7_0
 dd PIXf0_8_0
 dd PIXf0_9_0
 dd PIXf0_10_0
 dd PIXf0_11_0
 dd PIXf0_12_0
 dd PIXf0_13_0
 dd PIXf0_14_0
 dd PIXf0_15_0
 dd PIXf0_16_0
 dd PIXf0_17_0
 dd PIXf0_18_0
 dd PIXf0_19_0
 dd PIXf0_20_0
 dd PIXf0_21_0
 dd PIXf0_22_0
 dd PIXf0_23_0
 dd PIXf0_24_0
 dd PIXf0_25_0
 dd PIXf0_26_0
 dd PIXf0_27_0
 dd PIXf0_28_0
 dd PIXf0_29_0
 dd PIXf0_30_0
 dd PIXf0_31_0
 dd PIXf0_32_0
 dd PIXf0_33_0
 dd PIXf0_34_0
 dd PIXf0_35_0
 dd PIXf0_36_0
 dd PIXf0_37_0
 dd PIXf0_38_0
 dd PIXf0_39_0
 dd PIXf0_40_0
 dd PIXf0_41_0
 dd PIXf0_42_0
 dd PIXf0_43_0
 dd PIXf0_44_0
 dd PIXf0_45_0
 dd PIXf0_46_0
 dd PIXf0_47_0
 dd PIXf0_48_0
 dd PIX_PAD_f1_0

 ; --- END 1

 PIX_TABLE_f2:
 dd PIXf2_0_0
 dd PIXf2_1_0
 dd PIXf2_2_0
 dd PIXf2_3_0
 dd PIXf2_4_0
 dd PIXf2_5_0
 dd PIXf2_6_0
 dd PIXf2_7_0
 dd PIXf2_8_0
 dd PIXf2_9_0
 dd PIXf2_10_0
 dd PIXf2_11_0
 dd PIXf2_12_0
 dd PIXf2_13_0
 dd PIXf2_14_0
 dd PIXf2_15_0
 dd PIXf2_16_0
 dd PIXf2_17_0
 dd PIXf2_18_0
 dd PIXf2_19_0
 dd PIXf2_20_0
 dd PIXf2_21_0
 dd PIXf2_22_0
 dd PIXf2_23_0
 dd PIXf2_24_0
 dd PIXf2_25_0
 dd PIXf2_26_0
 dd PIXf2_27_0
 dd PIXf2_28_0
 dd PIXf2_29_0
 dd PIXf2_30_0
 dd PIXf2_31_0
 dd PIXf2_32_0
 dd PIXf2_33_0
 dd PIXf2_34_0
 dd PIXf2_35_0
 dd PIXf2_36_0
 dd PIXf2_37_0
 dd PIXf2_38_0
 dd PIXf2_39_0
 dd PIXf2_40_0
 dd PIXf2_41_0
 dd PIXf2_42_0
 dd PIXf2_43_0
 dd PIXf2_44_0
 dd PIXf2_45_0
 dd PIXf2_46_0
 dd PIX_PAD_f2_0
JMP_TABLE_f2:
 dd BBf2_0 + 0xabad1dea
 dd BBf2_1 + 0xabad1dea
 dd BBf2_2 + 0xabad1dea
 dd BBf2_3 + 0xabad1dea
 dd BBf2_4 + 0xabad1dea
 dd BBf2_5 + 0xabad1dea
 dd BBf2_6 + 0xabad1dea
 dd BBf2_7 + 0xabad1dea
 dd BBf2_8 + 0xabad1dea
 dd BBf2_9 + 0xabad1dea
 dd BBf2_10 + 0xabad1dea
 dd BBf2_11 + 0xabad1dea
 dd BBf2_12 + 0xabad1dea
 dd BBf2_13 + 0xabad1dea
 dd BBf2_14 + 0xabad1dea
 dd BBf2_15 + 0xabad1dea
 dd BBf2_16 + 0xabad1dea
 dd BBf2_17 + 0xabad1dea
 dd BBf2_18 + 0xabad1dea
 dd BBf2_19 + 0xabad1dea
 dd BBf2_20 + 0xabad1dea
 dd BBf2_21 + 0xabad1dea
 dd BBf2_22 + 0xabad1dea
 dd BBf2_23 + 0xabad1dea
 dd BBf2_24 + 0xabad1dea
 dd BBf2_25 + 0xabad1dea
 dd BBf2_26 + 0xabad1dea
 dd BBf2_27 + 0xabad1dea
 dd BBf2_28 + 0xabad1dea
 dd BBf2_29 + 0xabad1dea
 dd BBf2_30 + 0xabad1dea
 dd BBf2_31 + 0xabad1dea
 dd BBf2_32 + 0xabad1dea
 dd BBf2_33 + 0xabad1dea
 dd BBf2_34 + 0xabad1dea
 dd BBf2_35 + 0xabad1dea
 dd BBf2_36 + 0xabad1dea
 dd BBf2_37 + 0xabad1dea
 dd BBf2_38 + 0xabad1dea
 dd BBf2_39 + 0xabad1dea
 dd BBf2_40 + 0xabad1dea
 dd BBf2_41 + 0xabad1dea
 dd BBf2_42 + 0xabad1dea
 dd BBf2_43 + 0xabad1dea
 dd BBf2_44 + 0xabad1dea
 dd BBf2_45 + 0xabad1dea
 dd BBf2_46 + 0xabad1dea
 dd BBf2_47 + 0xabad1dea
 dd BBf2_48 + 0xabad1dea
 dd BBf2_49 + 0xabad1dea
 dd BBf2_50 + 0xabad1dea
 dd BBf2_51 + 0xabad1dea
 dd BBf2_52 + 0xabad1dea
 dd BBf2_53 + 0xabad1dea
 dd BBf2_54 + 0xabad1dea
 dd BBf2_55 + 0xabad1dea
 dd BBf2_56 + 0xabad1dea
 dd BBf2_57 + 0xabad1dea
 dd BBf2_58 + 0xabad1dea
 dd BBf2_59 + 0xabad1dea
 dd BBf2_60 + 0xabad1dea
 dd BBf2_61 + 0xabad1dea
 dd BBf2_62 + 0xabad1dea
 dd BBf2_63 + 0xabad1dea
 dd BBf2_64 + 0xabad1dea
 dd BBf2_65 + 0xabad1dea
 dd BBf2_66 + 0xabad1dea
 dd BBf2_67 + 0xabad1dea
 dd BBf2_68 + 0xabad1dea
 dd BBf2_69 + 0xabad1dea
 dd BBf2_70 + 0xabad1dea
 dd BBf2_71 + 0xabad1dea
 dd BBf2_72 + 0xabad1dea
 dd BBf2_73 + 0xabad1dea
 dd BBf2_74 + 0xabad1dea
 dd BBf2_75 + 0xabad1dea
 dd BBf2_76 + 0xabad1dea
 dd BBf2_77 + 0xabad1dea
 dd BBf2_78 + 0xabad1dea
 dd BBf2_79 + 0xabad1dea
 dd BBf2_80 + 0xabad1dea
 dd BBf2_81 + 0xabad1dea
 dd BBf2_82 + 0xabad1dea
 dd BBf2_83 + 0xabad1dea
 dd BBf2_84 + 0xabad1dea
 dd BBf2_85 + 0xabad1dea
 dd BBf2_86 + 0xabad1dea
 dd BBf2_87 + 0xabad1dea
 dd BBf2_88 + 0xabad1dea
 dd BBf2_89 + 0xabad1dea
 dd BBf2_90 + 0xabad1dea
 dd BBf2_91 + 0xabad1dea
 dd BBf2_92 + 0xabad1dea
 dd BBf2_93 + 0xabad1dea
 dd BBf2_94 + 0xabad1dea
 dd BBf2_95 + 0xabad1dea
 dd BBf2_96 + 0xabad1dea
 dd BBf2_97 + 0xabad1dea
 dd BBf2_98 + 0xabad1dea
 dd BBf2_99 + 0xabad1dea
 dd BBf2_100 + 0xabad1dea
 dd BBf2_101 + 0xabad1dea
 dd BBf2_102 + 0xabad1dea
 dd BBf2_103 + 0xabad1dea
 dd BBf2_104 + 0xabad1dea
 dd BBf2_105 + 0xabad1dea
 dd BBf2_106 + 0xabad1dea
 dd BBf2_107 + 0xabad1dea
 dd BBf2_108 + 0xabad1dea
 dd BBf2_109 + 0xabad1dea
 dd BBf2_110 + 0xabad1dea
 dd BBf2_111 + 0xabad1dea
 dd BBf2_112 + 0xabad1dea
 dd BBf2_113 + 0xabad1dea
 dd BBf2_114 + 0xabad1dea
 dd BBf2_115 + 0xabad1dea
 dd BBf2_116 + 0xabad1dea
 dd BBf2_117 + 0xabad1dea
 dd BBf2_118 + 0xabad1dea
 dd BBf2_119 + 0xabad1dea
 dd BBf2_120 + 0xabad1dea
 dd BBf2_121 + 0xabad1dea
 dd BBf2_122 + 0xabad1dea
 dd BBf2_123 + 0xabad1dea
 dd BBf2_124 + 0xabad1dea
 dd BBf2_125 + 0xabad1dea
 dd BBf2_126 + 0xabad1dea
 dd BBf2_127 + 0xabad1dea
 dd BBf2_128 + 0xabad1dea
 dd BBf2_129 + 0xabad1dea
 dd BBf2_130 + 0xabad1dea
 dd BBf2_131 + 0xabad1dea
 dd BBf2_132 + 0xabad1dea
 dd BBf2_133 + 0xabad1dea
 dd BBf2_134 + 0xabad1dea
 dd BBf2_135 + 0xabad1dea
 dd BBf2_136 + 0xabad1dea
 dd BBf2_137 + 0xabad1dea
 dd BBf2_138 + 0xabad1dea
 dd BBf2_139 + 0xabad1dea
 dd BBf2_140 + 0xabad1dea
 dd BBf2_141 + 0xabad1dea
 dd BBf2_142 + 0xabad1dea
 dd BBf2_143 + 0xabad1dea
 dd BBf2_144 + 0xabad1dea
 dd BBf2_145 + 0xabad1dea
 dd BBf2_146 + 0xabad1dea
 dd BBf2_147 + 0xabad1dea
 dd BBf2_148 + 0xabad1dea
 dd BBf2_149 + 0xabad1dea
 dd BBf2_150 + 0xabad1dea
 dd BBf2_151 + 0xabad1dea
 dd BBf2_152 + 0xabad1dea
 dd BBf2_153 + 0xabad1dea
 dd BBf2_154 + 0xabad1dea
 dd BBf2_155 + 0xabad1dea
 dd BBf2_156 + 0xabad1dea
 dd BBf2_157 + 0xabad1dea
 dd BBf2_158 + 0xabad1dea
 dd BBf2_159 + 0xabad1dea
 dd BBf2_160 + 0xabad1dea
 dd BBf2_161 + 0xabad1dea
 dd BBf2_162 + 0xabad1dea
 dd BBf2_163 + 0xabad1dea
 dd BBf2_164 + 0xabad1dea
 dd BBf2_165 + 0xabad1dea
 dd BBf2_166 + 0xabad1dea
 dd BBf2_167 + 0xabad1dea
 dd BBf2_168 + 0xabad1dea
 dd BBf2_169 + 0xabad1dea
 dd BBf2_170 + 0xabad1dea
 dd BBf2_171 + 0xabad1dea
 dd BBf2_172 + 0xabad1dea
 dd BBf2_173 + 0xabad1dea
 dd BBf2_174 + 0xabad1dea
 dd BBf2_175 + 0xabad1dea
 dd BBf2_176 + 0xabad1dea
 dd BBf2_177 + 0xabad1dea
 dd BBf2_178 + 0xabad1dea
 dd BBf2_179 + 0xabad1dea
 dd BBf2_180 + 0xabad1dea
 dd BBf2_181 + 0xabad1dea
 dd BBf2_182 + 0xabad1dea
 dd BBf2_183 + 0xabad1dea
 dd BBf2_184 + 0xabad1dea
 dd BBf2_185 + 0xabad1dea
 dd BBf2_186 + 0xabad1dea
 dd BBf2_187 + 0xabad1dea
 dd BBf2_188 + 0xabad1dea
 dd BBf2_189 + 0xabad1dea
 dd BBf2_190 + 0xabad1dea
 dd BBf2_191 + 0xabad1dea
 dd BBf2_192 + 0xabad1dea
 dd BBf2_193 + 0xabad1dea
 dd BBf2_194 + 0xabad1dea
 dd BBf2_195 + 0xabad1dea
 dd BBf2_196 + 0xabad1dea
 dd BBf2_197 + 0xabad1dea
 dd BBf2_198 + 0xabad1dea
 dd BBf2_199 + 0xabad1dea
 dd BBf2_200 + 0xabad1dea
 dd BBf2_201 + 0xabad1dea
 dd BBf2_202 + 0xabad1dea
 dd BBf2_203 + 0xabad1dea
 dd BBf2_204 + 0xabad1dea
 dd BBf2_205 + 0xabad1dea
 dd BBf2_206 + 0xabad1dea
 dd BBf2_207 + 0xabad1dea
 dd BBf2_208 + 0xabad1dea
 dd BBf2_209 + 0xabad1dea
 dd BBf2_210 + 0xabad1dea
 dd BBf2_211 + 0xabad1dea
 dd BBf2_212 + 0xabad1dea
 dd BBf2_213 + 0xabad1dea
 dd BBf2_214 + 0xabad1dea
 dd BBf2_215 + 0xabad1dea
 dd BBf2_216 + 0xabad1dea
 dd BBf2_217 + 0xabad1dea
 dd BBf2_218 + 0xabad1dea
 dd BBf2_219 + 0xabad1dea
 dd BBf2_220 + 0xabad1dea
 dd BBf2_221 + 0xabad1dea
 dd BBf2_222 + 0xabad1dea
 dd BBf2_223 + 0xabad1dea
 dd BBf2_224 + 0xabad1dea
 dd BBf2_225 + 0xabad1dea
 dd BBf2_226 + 0xabad1dea
 dd BBf2_227 + 0xabad1dea
 dd BBf2_228 + 0xabad1dea
 dd BBf2_229 + 0xabad1dea
 dd BBf2_230 + 0xabad1dea
 dd BBf2_231 + 0xabad1dea
 dd BBf2_232 + 0xabad1dea
 dd BBf2_233 + 0xabad1dea
 dd BBf2_234 + 0xabad1dea
 dd BBf2_235 + 0xabad1dea
 dd BBf2_236 + 0xabad1dea
 dd BBf2_237 + 0xabad1dea
 dd BBf2_238 + 0xabad1dea
 dd BBf2_239 + 0xabad1dea
 dd BBf2_240 + 0xabad1dea
 dd BBf2_241 + 0xabad1dea
 dd BBf2_242 + 0xabad1dea
 dd BBf2_243 + 0xabad1dea
 dd BBf2_244 + 0xabad1dea
 dd BBf2_245 + 0xabad1dea
 dd BBf2_246 + 0xabad1dea
 dd BBf2_247 + 0xabad1dea
 dd BBf2_248 + 0xabad1dea
 dd BBf2_249 + 0xabad1dea
 dd BBf2_250 + 0xabad1dea
 dd BBf2_251 + 0xabad1dea
 dd BBf2_252 + 0xabad1dea
 dd BBf2_253 + 0xabad1dea
 dd BBf2_254 + 0xabad1dea
 dd BBf2_255 + 0xabad1dea
 dd BBf2_256 + 0xabad1dea
 dd BBf2_257 + 0xabad1dea
 dd BBf2_258 + 0xabad1dea
 dd BBf2_259 + 0xabad1dea
 dd BBf2_260 + 0xabad1dea
 dd BBf2_261 + 0xabad1dea
 dd BBf2_262 + 0xabad1dea
 dd BBf2_263 + 0xabad1dea
 dd BBf2_264 + 0xabad1dea
 dd BBf2_265 + 0xabad1dea
 dd BBf2_266 + 0xabad1dea
 dd BBf2_267 + 0xabad1dea
 dd BBf2_268 + 0xabad1dea
 dd BBf2_269 + 0xabad1dea
 dd BBf2_270 + 0xabad1dea
 dd BBf2_271 + 0xabad1dea
 dd BBf2_272 + 0xabad1dea
 dd BBf2_273 + 0xabad1dea
 dd BBf2_274 + 0xabad1dea
 dd BBf2_275 + 0xabad1dea
 dd BBf2_276 + 0xabad1dea
 dd BBf2_277 + 0xabad1dea
 dd BBf2_278 + 0xabad1dea
 dd BBf2_279 + 0xabad1dea
 dd BBf2_280 + 0xabad1dea
 dd BBf2_281 + 0xabad1dea
 dd BBf2_282 + 0xabad1dea
 dd BBf2_283 + 0xabad1dea
 dd BBf2_284 + 0xabad1dea
 dd BBf2_285 + 0xabad1dea
 dd BBf2_286 + 0xabad1dea
 dd BBf2_287 + 0xabad1dea
 dd BBf2_288 + 0xabad1dea
 dd BBf2_289 + 0xabad1dea
 dd BBf2_290 + 0xabad1dea
 dd BBf2_291 + 0xabad1dea
 dd BBf2_292 + 0xabad1dea
 dd BBf2_293 + 0xabad1dea
 dd BBf2_294 + 0xabad1dea
 dd BBf2_295 + 0xabad1dea
 dd BBf2_296 + 0xabad1dea
 dd BBf2_297 + 0xabad1dea
 dd BBf2_298 + 0xabad1dea
 dd BBf2_299 + 0xabad1dea
 dd BBf2_300 + 0xabad1dea
 dd BBf2_301 + 0xabad1dea
 dd BBf2_302 + 0xabad1dea
 dd BBf2_303 + 0xabad1dea
 dd BBf2_304 + 0xabad1dea
 dd BBf2_305 + 0xabad1dea
 dd BBf2_306 + 0xabad1dea
 dd BBf2_307 + 0xabad1dea
 dd BBf2_308 + 0xabad1dea
 dd BBf2_309 + 0xabad1dea
 dd BBf2_310 + 0xabad1dea
 dd BBf2_311 + 0xabad1dea
 dd BBf2_312 + 0xabad1dea
 dd BBf2_313 + 0xabad1dea
 dd BBf2_314 + 0xabad1dea
 dd BBf2_315 + 0xabad1dea
 dd BBf2_316 + 0xabad1dea
 dd BBf2_317 + 0xabad1dea
 dd BBf2_318 + 0xabad1dea
 dd BBf2_319 + 0xabad1dea
 dd BBf2_320 + 0xabad1dea
 dd BBf2_321 + 0xabad1dea
 dd BBf2_322 + 0xabad1dea
 dd BBf2_323 + 0xabad1dea
 dd BBf2_324 + 0xabad1dea
 dd BBf2_325 + 0xabad1dea
 dd BBf2_326 + 0xabad1dea
 dd BBf2_327 + 0xabad1dea
 dd BBf2_328 + 0xabad1dea
 dd BBf2_329 + 0xabad1dea
 dd BBf2_330 + 0xabad1dea
 dd BBf2_331 + 0xabad1dea
 dd BBf2_332 + 0xabad1dea
 dd BBf2_333 + 0xabad1dea
 dd BBf2_334 + 0xabad1dea
 dd BBf2_335 + 0xabad1dea
 dd BBf2_336 + 0xabad1dea
 dd BBf2_337 + 0xabad1dea
 dd BBf2_338 + 0xabad1dea
 dd BBf2_339 + 0xabad1dea
 dd BBf2_340 + 0xabad1dea
 dd BBf2_341 + 0xabad1dea
 dd BBf2_342 + 0xabad1dea
 dd BBf2_343 + 0xabad1dea
 dd BBf2_344 + 0xabad1dea
 dd BBf2_345 + 0xabad1dea
 dd BBf2_346 + 0xabad1dea
 dd BBf2_347 + 0xabad1dea
 dd BBf2_348 + 0xabad1dea
 dd BBf2_349 + 0xabad1dea
 dd BBf2_350 + 0xabad1dea
 dd BBf2_351 + 0xabad1dea
 dd BBf2_352 + 0xabad1dea
 dd BBf2_353 + 0xabad1dea
 dd BBf2_354 + 0xabad1dea
 dd BBf2_355 + 0xabad1dea
 dd BBf2_356 + 0xabad1dea
 dd BBf2_357 + 0xabad1dea
 dd BBf2_358 + 0xabad1dea
 dd BBf2_359 + 0xabad1dea
 dd BBf2_360 + 0xabad1dea
 dd BBf2_361 + 0xabad1dea
 dd BBf2_362 + 0xabad1dea
 dd BBf2_363 + 0xabad1dea
 dd BBf2_364 + 0xabad1dea
 dd BBf2_365 + 0xabad1dea
 dd BBf2_366 + 0xabad1dea
 dd BBf2_367 + 0xabad1dea
 dd BBf2_368 + 0xabad1dea
 dd BBf2_369 + 0xabad1dea
 dd BBf2_370 + 0xabad1dea
 dd BBf2_371 + 0xabad1dea
 dd BBf2_372 + 0xabad1dea
 dd BBf2_373 + 0xabad1dea
 dd BBf2_374 + 0xabad1dea
 dd BBf2_375 + 0xabad1dea
 dd BBf2_376 + 0xabad1dea
 dd BBf2_377 + 0xabad1dea
 dd BBf2_378 + 0xabad1dea
 dd BBf2_379 + 0xabad1dea
 dd BBf2_380 + 0xabad1dea
 dd BBf2_381 + 0xabad1dea
 dd BBf2_382 + 0xabad1dea
 dd BBf2_383 + 0xabad1dea
 dd BBf2_384 + 0xabad1dea
 dd BBf2_385 + 0xabad1dea
 dd BBf2_386 + 0xabad1dea
 dd BBf2_387 + 0xabad1dea
 dd BBf2_388 + 0xabad1dea
 dd BBf2_389 + 0xabad1dea
 dd BBf2_390 + 0xabad1dea
 dd BBf2_391 + 0xabad1dea
 dd BBf2_392 + 0xabad1dea
 dd BBf2_393 + 0xabad1dea
 dd BBf2_394 + 0xabad1dea
 dd BBf2_395 + 0xabad1dea
 dd BBf2_396 + 0xabad1dea
 dd BBf2_397 + 0xabad1dea
 dd BBf2_398 + 0xabad1dea
 dd BBf2_399 + 0xabad1dea
 dd BBf2_400 + 0xabad1dea
 dd BBf2_401 + 0xabad1dea
 dd BBf2_402 + 0xabad1dea
 dd BBf2_403 + 0xabad1dea
 dd BBf2_404 + 0xabad1dea
 dd BBf2_405 + 0xabad1dea
 dd BBf2_406 + 0xabad1dea
 dd BBf2_407 + 0xabad1dea
 dd BBf2_408 + 0xabad1dea
 dd BBf2_409 + 0xabad1dea
 dd BBf2_410 + 0xabad1dea
 dd BBf2_411 + 0xabad1dea
 dd BBf2_412 + 0xabad1dea
 dd BBf2_413 + 0xabad1dea
 dd BBf2_414 + 0xabad1dea
 dd BBf2_415 + 0xabad1dea
 dd BBf2_416 + 0xabad1dea
 dd BBf2_417 + 0xabad1dea
 dd BBf2_418 + 0xabad1dea
 dd BBf2_419 + 0xabad1dea
 dd BBf2_420 + 0xabad1dea
 dd BBf2_421 + 0xabad1dea
 dd BBf2_422 + 0xabad1dea
 dd BBf2_423 + 0xabad1dea
 dd BBf2_424 + 0xabad1dea
 dd BBf2_425 + 0xabad1dea
 dd BBf2_426 + 0xabad1dea
 dd BBf2_427 + 0xabad1dea
 dd BBf2_428 + 0xabad1dea
 dd BBf2_429 + 0xabad1dea
 dd BBf2_430 + 0xabad1dea
 dd BBf2_431 + 0xabad1dea
 dd BBf2_432 + 0xabad1dea
 dd BBf2_433 + 0xabad1dea
 dd BBf2_434 + 0xabad1dea
 dd BBf2_435 + 0xabad1dea
 dd BBf2_436 + 0xabad1dea
 dd BBf2_437 + 0xabad1dea
 dd BBf2_438 + 0xabad1dea
 dd BBf2_439 + 0xabad1dea
 dd BBf2_440 + 0xabad1dea
 dd BBf2_441 + 0xabad1dea
 dd BBf2_442 + 0xabad1dea
 dd BBf2_443 + 0xabad1dea
 dd BBf2_444 + 0xabad1dea
 dd BBf2_445 + 0xabad1dea
 dd BBf2_446 + 0xabad1dea
 dd BBf2_447 + 0xabad1dea
 dd BBf2_448 + 0xabad1dea
 dd BBf2_449 + 0xabad1dea
 dd BBf2_450 + 0xabad1dea
 dd BBf2_451 + 0xabad1dea
 dd BBf2_452 + 0xabad1dea
 dd BBf2_453 + 0xabad1dea
 dd BBf2_454 + 0xabad1dea
 dd BBf2_455 + 0xabad1dea
 dd BBf2_456 + 0xabad1dea
 dd BBf2_457 + 0xabad1dea
 dd BBf2_458 + 0xabad1dea
 dd BBf2_459 + 0xabad1dea
 dd BBf2_460 + 0xabad1dea
 dd BBf2_461 + 0xabad1dea
 dd BBf2_462 + 0xabad1dea
 dd BBf2_463 + 0xabad1dea
 dd BBf2_464 + 0xabad1dea
 dd BBf2_465 + 0xabad1dea
 dd BBf2_466 + 0xabad1dea
 dd BBf2_467 + 0xabad1dea
 dd BBf2_468 + 0xabad1dea
 dd BBf2_469 + 0xabad1dea
 dd BBf2_470 + 0xabad1dea
 dd BBf2_471 + 0xabad1dea
 dd BBf2_472 + 0xabad1dea
 dd BBf2_473 + 0xabad1dea
 dd BBf2_474 + 0xabad1dea
 dd BBf2_475 + 0xabad1dea
 dd BBf2_476 + 0xabad1dea
 dd BBf2_477 + 0xabad1dea
 dd BBf2_478 + 0xabad1dea
 dd BBf2_479 + 0xabad1dea
 dd BBf2_480 + 0xabad1dea
 dd BBf2_481 + 0xabad1dea
 dd BBf2_482 + 0xabad1dea
 dd BBf2_483 + 0xabad1dea
 dd BBf2_484 + 0xabad1dea
 dd BBf2_485 + 0xabad1dea
 dd BBf2_486 + 0xabad1dea
 dd BBf2_487 + 0xabad1dea
 dd BBf2_488 + 0xabad1dea
 dd BBf2_489 + 0xabad1dea
 dd BBf2_490 + 0xabad1dea
 dd BBf2_491 + 0xabad1dea
 dd BBf2_492 + 0xabad1dea
 dd BBf2_493 + 0xabad1dea
 dd BBf2_494 + 0xabad1dea
 dd BBf2_495 + 0xabad1dea
 dd BBf2_496 + 0xabad1dea
 dd BBf2_497 + 0xabad1dea
 dd BBf2_498 + 0xabad1dea
 dd BBf2_499 + 0xabad1dea
 dd BBf2_500 + 0xabad1dea
 dd BBf2_501 + 0xabad1dea
 dd BBf2_502 + 0xabad1dea
 dd BBf2_503 + 0xabad1dea
 dd BBf2_504 + 0xabad1dea
 dd BBf2_505 + 0xabad1dea
 dd BBf2_506 + 0xabad1dea
 dd BBf2_507 + 0xabad1dea
 dd BBf2_508 + 0xabad1dea
 dd BBf2_509 + 0xabad1dea
 dd BBf2_510 + 0xabad1dea
 dd BBf2_511 + 0xabad1dea
 dd BBf2_512 + 0xabad1dea
 dd BBf2_513 + 0xabad1dea
 dd BBf2_514 + 0xabad1dea
 dd BBf2_515 + 0xabad1dea
 dd BBf2_516 + 0xabad1dea
 dd BBf2_517 + 0xabad1dea
 dd BBf2_518 + 0xabad1dea
 dd BBf2_519 + 0xabad1dea
 dd BBf2_520 + 0xabad1dea
 dd BBf2_521 + 0xabad1dea
 dd BBf2_522 + 0xabad1dea
 dd BBf2_523 + 0xabad1dea
 dd BBf2_524 + 0xabad1dea
 dd BBf2_525 + 0xabad1dea
 dd BBf2_526 + 0xabad1dea
 dd BBf2_527 + 0xabad1dea
 dd BBf2_528 + 0xabad1dea
 dd BBf2_529 + 0xabad1dea
 dd BBf2_530 + 0xabad1dea
 dd BBf2_531 + 0xabad1dea
 dd BBf2_532 + 0xabad1dea
 dd BBf2_533 + 0xabad1dea
 dd BBf2_534 + 0xabad1dea
 dd BBf2_535 + 0xabad1dea
 dd BBf2_536 + 0xabad1dea
 dd BBf2_537 + 0xabad1dea
 dd BBf2_538 + 0xabad1dea
 dd BBf2_539 + 0xabad1dea
 dd BBf2_540 + 0xabad1dea
 dd BBf2_541 + 0xabad1dea
 dd BBf2_542 + 0xabad1dea
 dd BBf2_543 + 0xabad1dea
 dd BBf2_544 + 0xabad1dea
 dd BBf2_545 + 0xabad1dea
 dd BBf2_546 + 0xabad1dea
 dd BBf2_547 + 0xabad1dea
 dd BBf2_548 + 0xabad1dea
 dd BBf2_549 + 0xabad1dea
 dd BBf2_550 + 0xabad1dea
 dd BBf2_551 + 0xabad1dea
 dd BBf2_552 + 0xabad1dea
 dd BBf2_553 + 0xabad1dea
 dd BBf2_554 + 0xabad1dea
 dd BBf2_555 + 0xabad1dea
 dd BBf2_556 + 0xabad1dea
 dd BBf2_557 + 0xabad1dea
 dd BBf2_558 + 0xabad1dea
 dd BBf2_559 + 0xabad1dea
 dd BBf2_560 + 0xabad1dea
 dd BBf2_561 + 0xabad1dea
 dd BBf2_562 + 0xabad1dea
 dd BBf2_563 + 0xabad1dea
 dd BBf2_564 + 0xabad1dea
 dd BBf2_565 + 0xabad1dea
 dd BBf2_566 + 0xabad1dea
 dd BBf2_567 + 0xabad1dea
 dd BBf2_568 + 0xabad1dea
 dd BBf2_569 + 0xabad1dea
 dd BBf2_570 + 0xabad1dea
 dd BBf2_571 + 0xabad1dea
 dd BBf2_572 + 0xabad1dea
 dd BBf2_573 + 0xabad1dea
 dd BBf2_574 + 0xabad1dea
 dd BBf2_575 + 0xabad1dea
 dd BBf2_576 + 0xabad1dea
 dd BBf2_577 + 0xabad1dea
 dd BBf2_578 + 0xabad1dea
 dd BBf2_579 + 0xabad1dea
 dd BBf2_580 + 0xabad1dea
 dd BBf2_581 + 0xabad1dea
 dd BBf2_582 + 0xabad1dea
 dd BBf2_583 + 0xabad1dea
 dd BBf2_584 + 0xabad1dea
 dd BBf2_585 + 0xabad1dea
 dd BBf2_586 + 0xabad1dea
 dd BBf2_587 + 0xabad1dea
 dd BBf2_588 + 0xabad1dea
 dd BBf2_589 + 0xabad1dea
 dd BBf2_590 + 0xabad1dea
 dd BBf2_591 + 0xabad1dea
 dd BBf2_592 + 0xabad1dea
 dd BBf2_593 + 0xabad1dea
 dd BBf2_594 + 0xabad1dea
 dd BBf2_595 + 0xabad1dea
 dd BBf2_596 + 0xabad1dea
 dd BBf2_597 + 0xabad1dea
 dd BBf2_598 + 0xabad1dea
 dd BBf2_599 + 0xabad1dea
 dd BBf2_600 + 0xabad1dea
 dd BBf2_601 + 0xabad1dea
 dd BBf2_602 + 0xabad1dea
 dd BBf2_603 + 0xabad1dea
 dd BBf2_604 + 0xabad1dea
 dd BBf2_605 + 0xabad1dea
 dd BBf2_606 + 0xabad1dea
 dd BBf2_607 + 0xabad1dea
 dd BBf2_608 + 0xabad1dea
 dd BBf2_609 + 0xabad1dea
 dd BBf2_610 + 0xabad1dea
; ----- End of func 0 -----


func_3:
 PCJMP_f3:
  cmp eax, 1
  je _PCJMP_f3
  ret
 _PCJMP_f3:
  pop eax
  mov eax, [JMP_TABLE_f3 + 4*edi]
  sub eax, 0xabad1dea
  jz PIX_START_f3
  jmp eax
PIX_START_f3:
 mov esi, [PIX_TABLE_f3 + 4*esi]
 jmp esi
PIXf3_0_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_0: mov edi, 0x261
 mov eax, 1
 call PCJMP_f3
BBf3_1: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x34
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_0_1
PIXf3_1_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_1_1
PIXf3_2_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
BBf3_11: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_2_1
PIXf3_3_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_17: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_3_1
PIXf3_4_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 jmp PIXf3_4_1
PIXf3_5_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_5_1
PIXf3_6_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_6_1
PIXf3_7_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0x38
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_55: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_56: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0x3a
 cmp dword [reg_a3], 0x0
 sete  al
 jmp PIXf3_7_1
PIXf3_8_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_8_1
PIXf3_9_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x57
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_86: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_9_1
PIXf3_10_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x5e
 mov eax, 1
 call PCJMP_f3
BBf3_103: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_10_1
PIXf3_11_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_118: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x18
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_11_1
PIXf3_12_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
BBf3_137: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 sub dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_12_1
PIXf3_13_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_148: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 sub dword [reg_a3], 0x1
 jmp PIXf3_13_1
PIXf3_14_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_161: mov eax, dword [reg_b3]
 jmp PIXf3_14_1
PIXf3_15_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_174: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_175: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_15_1
PIXf3_16_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_183: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_184: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_16_1
PIXf3_17_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f3
BBf3_199: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_b3], 0x1
 mov edi, 0xca
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_200: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_17_1
PIXf3_18_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_216: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 jmp PIXf3_18_1
PIXf3_19_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xe8
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_19_1
PIXf3_20_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_20_1
PIXf3_21_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_21_1
PIXf3_22_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_22_1
PIXf3_23_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_23_1
PIXf3_24_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_24_1
PIXf3_25_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 jmp PIXf3_25_1
PIXf3_26_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x146
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_325: mov edi, 0x152
 mov eax, 1
 call PCJMP_f3
BBf3_326: mov dword [reg_a3], 0x0
 jmp PIXf3_26_1
PIXf3_27_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x14e
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_333: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_27_1
PIXf3_28_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_28_1
PIXf3_29_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f3
BBf3_341: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_29_1
PIXf3_30_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_30_1
PIXf3_31_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x16b
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_362: mov edi, 0x16c
 mov eax, 1
 call PCJMP_f3
BBf3_363: mov edi, 0x16d
 mov eax, 1
 call PCJMP_f3
BBf3_364: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_31_1
PIXf3_32_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_384: mov eax, dword [reg_bp3]
 jmp PIXf3_32_1
PIXf3_33_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x184
 mov eax, 1
 call PCJMP_f3
BBf3_398: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_33_1
PIXf3_34_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_414: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_34_1
PIXf3_35_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_431: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0x1b1
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_432: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_35_1
PIXf3_36_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, 0x1c0
 mov eax, 1
 call PCJMP_f3
BBf3_447: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_36_1
PIXf3_37_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_457: mov edi, 0x1cb
 mov eax, 1
 call PCJMP_f3
BBf3_458: mov edi, 0x1cc
 mov eax, 1
 call PCJMP_f3
BBf3_459: mov edi, 0x1c6
 mov eax, 1
 call PCJMP_f3
BBf3_460: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_37_1
PIXf3_38_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_38_1
PIXf3_39_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1dd
 jmp PIXf3_39_1
PIXf3_40_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_489: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_40_1
PIXf3_41_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_497: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 jmp PIXf3_41_1
PIXf3_42_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f3
BBf3_515: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f3
BBf3_516: mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 jmp PIXf3_42_1
PIXf3_43_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffdd
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_43_1
PIXf3_44_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_44_1
PIXf3_45_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_538: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_45_1
PIXf3_46_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x222
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f3
BBf3_546: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x4
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffeff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 jmp PIXf3_46_1
PIXf3_47_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x22b
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f3
BBf3_555: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_47_1
PIXf3_48_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_48_1
PIXf3_49_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_581: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_49_1
PIXf3_50_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_590: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 jmp PIXf3_50_1
PIXf3_51_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_51_1
PIXf3_0_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffd0
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 jmp PIXf3_0_2
PIXf3_1_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_1_2
PIXf3_2_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xd
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_12: mov edi, 0xe
 mov eax, 1
 call PCJMP_f3
BBf3_13: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_2_2
PIXf3_3_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x13
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_18: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_3_2
PIXf3_4_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_4_2
PIXf3_5_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffcd
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_5_2
PIXf3_6_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x2a
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_6_2
PIXf3_7_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_57: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_7_2
PIXf3_8_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x47
 mov eax, 1
 call PCJMP_f3
BBf3_70: mov dword [reg_a3], 0x0
BBf3_71: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 jmp PIXf3_8_2
PIXf3_9_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 jmp PIXf3_9_2
PIXf3_10_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_104: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_10_2
PIXf3_11_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x78
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_119: mov edi, 0x79
 mov eax, 1
 call PCJMP_f3
BBf3_120: mov edi, 0x7f
 mov eax, 1
 call PCJMP_f3
BBf3_121: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_11_2
PIXf3_12_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_12_2
PIXf3_13_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x10
 jmp PIXf3_13_2
PIXf3_14_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xa3
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_162: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xd
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_14_2
PIXf3_15_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_15_2
PIXf3_16_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_185: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_186: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_16_2
PIXf3_17_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xc9
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f3
BBf3_201: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_17_2
PIXf3_18_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_217: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_18_2
PIXf3_19_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_232: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0xea
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_233: mov edi, 0xe7
 mov eax, 1
 call PCJMP_f3
BBf3_234: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_19_2
PIXf3_20_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_20_2
PIXf3_21_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x108
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xba
 mov eax, 1
 call PCJMP_f3
BBf3_264: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x10a
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_265: mov dword [reg_a3], 0x41
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_21_2
PIXf3_22_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x102
 mov eax, 1
 call PCJMP_f3
BBf3_279: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_22_2
PIXf3_23_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_23_2
PIXf3_24_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_24_2
PIXf3_25_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_25_2
PIXf3_26_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_327: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_26_2
PIXf3_27_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x150
 mov eax, 1
 call PCJMP_f3
BBf3_334: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_27_2
PIXf3_28_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_28_2
PIXf3_29_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_29_2
PIXf3_30_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x159
 mov eax, 1
 call PCJMP_f3
BBf3_350: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 jmp PIXf3_30_2
PIXf3_31_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x169
 mov eax, 1
 jmp PIXf3_31_2
PIXf3_32_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_32_2
PIXf3_33_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_399: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_33_2
PIXf3_34_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_415: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
BBf3_416: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_34_2
PIXf3_35_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_433: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_35_2
PIXf3_36_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 jmp PIXf3_36_2
PIXf3_37_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_37_2
PIXf3_38_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_38_2
PIXf3_39_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_476: mov edi, 0x1de
 mov eax, 1
 call PCJMP_f3
BBf3_477: mov edi, 0x1e1
 mov eax, 1
 call PCJMP_f3
BBf3_478: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_39_2
PIXf3_40_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, 0x1eb
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_490: mov edi, 0x1ec
 mov eax, 1
 call PCJMP_f3
BBf3_491: mov edi, 0x216
 mov eax, 1
 call PCJMP_f3
BBf3_492: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_40_2
PIXf3_41_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x215
 mov eax, 1
 call PCJMP_f3
BBf3_498: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 jmp PIXf3_41_2
PIXf3_42_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_a3], 0xffffdd
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x20
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_42_2
PIXf3_43_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_43_2
PIXf3_44_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x214
 mov eax, 1
 call PCJMP_f3
BBf3_530: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_44_2
PIXf3_45_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_539: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0x4
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 jmp PIXf3_45_2
PIXf3_46_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffff00
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_46_2
PIXf3_47_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_556: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_47_2
PIXf3_48_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_571: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_572: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_48_2
PIXf3_49_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_582: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_49_2
PIXf3_50_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_591: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_50_2
PIXf3_51_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 jmp PIXf3_51_2
PIXf3_0_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_0_3
PIXf3_1_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffce
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_1_3
PIXf3_2_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 sub dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x9
 mov eax, 1
 call PCJMP_f3
BBf3_14: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_2_3
PIXf3_3_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_19: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 jmp PIXf3_3_3
PIXf3_4_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_4_3
PIXf3_5_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_5_3
PIXf3_6_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_42: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_6_3
PIXf3_7_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_58: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_7_3
PIXf3_8_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, 0x49
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_72: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_73: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0x4b
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_74: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_8_3
PIXf3_9_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x58
 mov eax, 1
 call PCJMP_f3
BBf3_87: mov dword [reg_a3], 0x0
BBf3_88: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_9_3
PIXf3_10_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_105: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x4
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 jmp PIXf3_10_3
PIXf3_11_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_11_3
PIXf3_12_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x8a
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f3
BBf3_138: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 jmp PIXf3_12_3
PIXf3_13_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_13_3
PIXf3_14_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_163: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xa5
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_164: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_14_3
PIXf3_15_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0xb0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f3
BBf3_176: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_b3], 0x1
 mov edi, 0xb4
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_177: mov dword [reg_a3], 0x61
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_15_3
PIXf3_16_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x41
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_16_3
PIXf3_17_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_202: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_17_3
PIXf3_18_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_18_3
PIXf3_19_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x2d
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xec
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_235: mov dword [reg_a3], 0x1
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_19_3
PIXf3_20_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x2
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 jmp PIXf3_20_3
PIXf3_21_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov edi, 0x10b
 mov eax, 1
 call PCJMP_f3
BBf3_266: mov dword [reg_a3], 0x61
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_21_3
PIXf3_22_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x11c
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
 jmp PIXf3_22_3
PIXf3_23_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x125
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f3
BBf3_293: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_23_3
PIXf3_24_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_24_3
PIXf3_25_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_25_3
PIXf3_26_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x149
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_328: mov edi, 0x14a
 jmp PIXf3_26_3
PIXf3_27_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x150
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_335: mov eax, dword [reg_bp3]
 jmp PIXf3_27_3
PIXf3_28_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_28_3
PIXf3_29_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_29_3
PIXf3_30_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_351: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_30_3
PIXf3_31_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_365: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 jmp PIXf3_31_3
PIXf3_32_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 jmp PIXf3_32_3
PIXf3_33_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_400: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 jmp PIXf3_33_3
PIXf3_34_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x1a2
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_417: mov edi, 0x1a3
 mov eax, 1
 call PCJMP_f3
BBf3_418: mov edi, 0x1a6
 mov eax, 1
 call PCJMP_f3
BBf3_419: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_34_3
PIXf3_35_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_35_3
PIXf3_36_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_36_3
PIXf3_37_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_37_3
PIXf3_38_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 sub dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_38_3
PIXf3_39_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1e0
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_479: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_39_3
PIXf3_40_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x25
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1f2
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_493: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_40_3
PIXf3_41_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_41_3
PIXf3_42_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_42_3
PIXf3_43_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffdd
 jmp PIXf3_43_3
PIXf3_44_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_44_3
PIXf3_45_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 jmp PIXf3_45_3
PIXf3_46_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffeff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 jmp PIXf3_46_3
PIXf3_47_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_557: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_47_3
PIXf3_48_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x23d
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_48_3
PIXf3_49_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x247
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x23e
 jmp PIXf3_49_3
PIXf3_50_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, 0x4
 mov ecx, reg_a3
 int 0x80
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_50_3
PIXf3_51_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 jmp PIXf3_51_3
PIXf3_0_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_2: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_0_4
PIXf3_1_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_7: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_1_4
PIXf3_2_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_2_4
PIXf3_3_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 jmp PIXf3_3_4
PIXf3_4_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 jmp PIXf3_4_4
PIXf3_5_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_5_4
PIXf3_6_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_43: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_44: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_6_4
PIXf3_7_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x2d
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_7_4
PIXf3_8_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_8_4
PIXf3_9_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x5a
 cmp dword [reg_a3], 0x0
 jmp PIXf3_9_4
PIXf3_10_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_106: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_10_4
PIXf3_11_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_11_4
PIXf3_12_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_12_4
PIXf3_13_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x95
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f3
BBf3_149: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_13_4
PIXf3_14_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x9
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 jmp PIXf3_14_4
PIXf3_15_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 jmp PIXf3_15_4
PIXf3_16_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xbc
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_187: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_16_4
PIXf3_17_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_203: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_204: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_17_4
PIXf3_18_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xda
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f3
BBf3_218: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 jmp PIXf3_18_4
PIXf3_19_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_19_4
PIXf3_20_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x10
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_248: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_20_4
PIXf3_21_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
BBf3_267: mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_21_4
PIXf3_22_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_280: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x11a
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_281: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_22_4
PIXf3_23_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_294: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_23_4
PIXf3_24_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_24_4
PIXf3_25_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_25_4
PIXf3_26_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_329: mov edi, 0x14c
 mov eax, 1
 call PCJMP_f3
BBf3_330: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_26_4
PIXf3_27_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_336: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_27_4
PIXf3_28_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x153
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f3
BBf3_339: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_28_4
PIXf3_29_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x156
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_29_4
PIXf3_30_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_352: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_353: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 jmp PIXf3_30_4
PIXf3_31_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_366: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_367: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_31_4
PIXf3_32_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x17c
 mov eax, 1
 call PCJMP_f3
BBf3_385: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 jmp PIXf3_32_4
PIXf3_33_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
BBf3_401: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0x193
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_402: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_33_4
PIXf3_34_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_34_4
PIXf3_35_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_434: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_35_4
PIXf3_36_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_448: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 jmp PIXf3_36_4
PIXf3_37_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_37_4
PIXf3_38_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 jmp PIXf3_38_4
PIXf3_39_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 jmp PIXf3_39_4
PIXf3_40_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 cmp dword [reg_a3], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1f1
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_494: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_40_4
PIXf3_41_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x6c
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1f4
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_499: mov edi, 0x201
 mov eax, 1
 jmp PIXf3_41_4
PIXf3_42_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_42_4
PIXf3_43_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f3
BBf3_521: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_43_4
PIXf3_44_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 jmp PIXf3_44_4
PIXf3_45_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_45_4
PIXf3_46_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_46_4
PIXf3_47_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_558: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_47_4
PIXf3_48_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f3
BBf3_573: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_48_4
PIXf3_49_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_583: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_49_4
PIXf3_50_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_592: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 jmp PIXf3_50_4
PIXf3_51_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_51_4
PIXf3_0_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffe8
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_0_5
PIXf3_1_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x2
 mov eax, 1
 call PCJMP_f3
BBf3_8: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcd
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_9: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffe8
 jmp PIXf3_1_5
PIXf3_2_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_2_5
PIXf3_3_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_3_5
PIXf3_4_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_4_5
PIXf3_5_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_5_5
PIXf3_6_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_6_5
PIXf3_7_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_7_5
PIXf3_8_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_8_5
PIXf3_9_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 sete  al
 jmp PIXf3_9_5
PIXf3_10_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_10_5
PIXf3_11_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_11_5
PIXf3_12_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_12_5
PIXf3_13_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_13_5
PIXf3_14_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_14_5
PIXf3_15_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xb3
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_178: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x66
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_15_5
PIXf3_16_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x5a
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 jmp PIXf3_16_5
PIXf3_17_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xcd
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_17_5
PIXf3_18_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xdb
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f3
BBf3_219: mov eax, dword [reg_b3]
 jmp PIXf3_18_5
PIXf3_19_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0xee
 mov eax, 1
 call PCJMP_f3
BBf3_236: mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_19_5
PIXf3_20_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xfd
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_249: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_20_5
PIXf3_21_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f3
BBf3_268: mov edi, 0x117
 mov eax, 1
 call PCJMP_f3
BBf3_269: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_21_5
PIXf3_22_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_22_5
PIXf3_23_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_295: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 jmp PIXf3_23_5
PIXf3_24_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_24_5
PIXf3_25_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_25_5
PIXf3_26_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 jmp PIXf3_26_5
PIXf3_27_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_27_5
PIXf3_28_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_28_5
PIXf3_29_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_29_5
PIXf3_30_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_30_5
PIXf3_31_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_31_5
PIXf3_32_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_32_5
PIXf3_33_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_33_5
PIXf3_34_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_34_5
PIXf3_35_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_35_5
PIXf3_36_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_36_5
PIXf3_37_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 sub dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 jmp PIXf3_37_5
PIXf3_38_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_466: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_38_5
PIXf3_39_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_39_5
PIXf3_40_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_40_5
PIXf3_41_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_41_5
PIXf3_42_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_42_5
PIXf3_43_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x20a
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x8f
 mov eax, 1
 call PCJMP_f3
BBf3_522: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x124
 jmp PIXf3_43_5
PIXf3_44_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x213
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_44_5
PIXf3_45_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x21c
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_45_5
PIXf3_46_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffff00
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x223
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x81
 jmp PIXf3_46_5
PIXf3_47_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_559: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_b3], 0x13c
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_47_5
PIXf3_48_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_574: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_b3], 0x13f
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_48_5
PIXf3_49_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_584: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_585: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_49_5
PIXf3_50_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_50_5
PIXf3_51_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_51_5
PIXf3_0_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 jmp PIXf3_0_6
PIXf3_1_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_1_6
PIXf3_2_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_2_6
PIXf3_3_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_3_6
PIXf3_4_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_4_6
PIXf3_5_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_31: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_5_6
PIXf3_6_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x5
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_6_6
PIXf3_7_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_59: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 jmp PIXf3_7_6
PIXf3_8_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_75: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_8_6
PIXf3_9_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_89: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_9_6
PIXf3_10_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x18
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x6c
 jmp PIXf3_10_6
PIXf3_11_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_11_6
PIXf3_12_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_12_6
PIXf3_13_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_13_6
PIXf3_14_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_14_6
PIXf3_15_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_179: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_180: mov eax, dword [reg_b3]
 jmp PIXf3_15_6
PIXf3_16_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
BBf3_188: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_189: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_16_6
PIXf3_17_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f3
BBf3_205: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_b3], 0x1
 mov edi, 0xd1
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_206: mov dword [reg_a3], 0x20
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_17_6
PIXf3_18_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_220: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_18_6
PIXf3_19_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x2b
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_19_6
PIXf3_20_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xfb
 jmp PIXf3_20_6
PIXf3_21_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 jmp PIXf3_21_6
PIXf3_22_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov edi, 0x11b
 mov eax, 1
 call PCJMP_f3
BBf3_282: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
BBf3_283: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_22_6
PIXf3_23_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_23_6
PIXf3_24_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_24_6
PIXf3_25_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_25_6
PIXf3_26_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_26_6
PIXf3_27_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_27_6
PIXf3_28_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_28_6
PIXf3_29_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_29_6
PIXf3_30_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_30_6
PIXf3_31_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_368: mov eax, dword [reg_bp3]
 jmp PIXf3_31_6
PIXf3_32_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 jmp PIXf3_32_6
PIXf3_33_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_403: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0x195
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_404: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_33_6
PIXf3_34_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1a5
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_420: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_34_6
PIXf3_35_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_35_6
PIXf3_36_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_36_6
PIXf3_37_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_37_6
PIXf3_38_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_38_6
PIXf3_39_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_480: mov edi, 0x1db
 mov eax, 1
 call PCJMP_f3
BBf3_481: mov edi, 0x1e3
 mov eax, 1
 call PCJMP_f3
BBf3_482: mov edi, 0x1e4
 mov eax, 1
 call PCJMP_f3
BBf3_483: mov edi, 0x1d9
 mov eax, 1
 jmp PIXf3_39_6
PIXf3_40_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_40_6
PIXf3_41_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_41_6
PIXf3_42_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_42_6
PIXf3_43_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_43_6
PIXf3_44_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f3
BBf3_531: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
BBf3_532: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_44_6
PIXf3_45_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f3
BBf3_540: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x4
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_45_6
PIXf3_46_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_547: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffeff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_46_6
PIXf3_47_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_560: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_47_6
PIXf3_48_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 jmp PIXf3_48_6
PIXf3_49_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_b3], 0x13f
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_49_6
PIXf3_50_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_50_6
PIXf3_51_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_51_6
PIXf3_0_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_0_7
PIXf3_1_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 jmp PIXf3_1_7
PIXf3_2_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_7
PIXf3_3_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_3_7
PIXf3_4_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_4_7
PIXf3_5_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x21
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_32: mov edi, 0x22
 mov eax, 1
 jmp PIXf3_5_7
PIXf3_6_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_45: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x18
 mov eax, dword [reg_a3]
 jmp PIXf3_6_7
PIXf3_7_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_60: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_61: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_7_7
PIXf3_8_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x3e
 mov eax, 1
 call PCJMP_f3
BBf3_76: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 jmp PIXf3_8_7
PIXf3_9_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_90: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_9_7
PIXf3_10_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_107: mov edi, 0x6d
 mov eax, 1
 call PCJMP_f3
BBf3_108: mov edi, 0x73
 mov eax, 1
 call PCJMP_f3
BBf3_109: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_10_7
PIXf3_11_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x7b
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_122: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_11_7
PIXf3_12_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x8b
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_12_7
PIXf3_13_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_13_7
PIXf3_14_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_14_7
PIXf3_15_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_7
PIXf3_16_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_190: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 jmp PIXf3_16_7
PIXf3_17_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xd0
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
 jmp PIXf3_17_7
PIXf3_18_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_221: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 jmp PIXf3_18_7
PIXf3_19_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xee
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_237: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_19_7
PIXf3_20_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_250: mov dword [reg_a3], 0x8
 mov edi, 0xfc
 mov eax, 1
 call PCJMP_f3
BBf3_251: mov dword [reg_a3], 0xa
BBf3_252: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_253: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x101
 cmp dword [reg_a3], 0x0
 sete  al
 jmp PIXf3_20_7
PIXf3_21_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, 0x10f
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_270: mov edi, 0x117
 mov eax, 1
 call PCJMP_f3
BBf3_271: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 jmp PIXf3_21_7
PIXf3_22_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_22_7
PIXf3_23_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_23_7
PIXf3_24_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_24_7
PIXf3_25_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x139
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f3
BBf3_313: mov eax, dword [reg_b3]
 jmp PIXf3_25_7
PIXf3_26_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_26_7
PIXf3_27_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_27_7
PIXf3_28_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_28_7
PIXf3_29_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_29_7
PIXf3_30_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x163
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_354: mov edi, 0x164
 mov eax, 1
 call PCJMP_f3
BBf3_355: mov edi, 0x166
 mov eax, 1
 call PCJMP_f3
BBf3_356: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_30_7
PIXf3_31_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x172
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_369: mov edi, 0x173
 mov eax, 1
 call PCJMP_f3
BBf3_370: mov edi, 0x174
 mov eax, 1
 call PCJMP_f3
BBf3_371: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_31_7
PIXf3_32_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_386: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_32_7
PIXf3_33_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 jmp PIXf3_33_7
PIXf3_34_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_421: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_34_7
PIXf3_35_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_35_7
PIXf3_36_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_36_7
PIXf3_37_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_37_7
PIXf3_38_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 jmp PIXf3_38_7
PIXf3_39_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_484: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_485: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_39_7
PIXf3_40_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_40_7
PIXf3_41_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_41_7
PIXf3_42_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_42_7
PIXf3_43_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_43_7
PIXf3_44_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffda
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_44_7
PIXf3_45_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_541: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_45_7
PIXf3_46_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_548: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_549: mov eax, dword [reg_sp3]
 jmp PIXf3_46_7
PIXf3_47_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_561: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_47_7
PIXf3_48_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x244
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_575: mov dword [reg_b3], 0x140
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x241
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_576: mov dword [reg_a3], 0x0
 jmp PIXf3_48_7
PIXf3_49_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_49_7
PIXf3_50_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_50_7
PIXf3_51_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_51_7
PIXf3_0_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 jmp PIXf3_0_8
PIXf3_1_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_1_8
PIXf3_2_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_8
PIXf3_3_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_3_8
PIXf3_4_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0x18
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_23: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_4_8
PIXf3_5_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_33: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 sub dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 jmp PIXf3_5_8
PIXf3_6_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x2f
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_46: mov edi, 0x30
 mov eax, 1
 call PCJMP_f3
BBf3_47: mov edi, 0x3b
 mov eax, 1
 call PCJMP_f3
BBf3_48: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 jmp PIXf3_6_8
PIXf3_7_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x5
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 jmp PIXf3_7_8
PIXf3_8_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_77: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_8_8
PIXf3_9_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x4f
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_9_8
PIXf3_10_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 jmp PIXf3_10_8
PIXf3_11_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_11_8
PIXf3_12_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f3
BBf3_139: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_12_8
PIXf3_13_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 jmp PIXf3_13_8
PIXf3_14_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_14_8
PIXf3_15_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_8
PIXf3_16_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x61
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_16_8
PIXf3_17_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_207: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x7f
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_17_8
PIXf3_18_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_222: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_18_8
PIXf3_19_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_19_8
PIXf3_20_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_254: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff9
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_20_8
PIXf3_21_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x111
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_272: mov edi, 0x116
 mov eax, 1
 call PCJMP_f3
BBf3_273: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_21_8
PIXf3_22_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_22_8
PIXf3_23_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_23_8
PIXf3_24_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_24_8
PIXf3_25_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_25_8
PIXf3_26_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 jmp PIXf3_26_8
PIXf3_27_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 jmp PIXf3_27_8
PIXf3_28_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_28_8
PIXf3_29_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_29_8
PIXf3_30_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_30_8
PIXf3_31_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_31_8
PIXf3_32_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_387: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 jmp PIXf3_32_8
PIXf3_33_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_405: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0x197
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_406: mov edi, 0x198
 mov eax, 1
 call PCJMP_f3
BBf3_407: mov edi, 0x19d
 mov eax, 1
 call PCJMP_f3
BBf3_408: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_33_8
PIXf3_34_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x1a0
 mov eax, 1
 call PCJMP_f3
BBf3_422: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 jmp PIXf3_34_8
PIXf3_35_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1b4
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_435: mov edi, 0x1b5
 mov eax, 1
 call PCJMP_f3
BBf3_436: mov edi, 0x1b8
 mov eax, 1
 call PCJMP_f3
BBf3_437: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_35_8
PIXf3_36_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_449: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_36_8
PIXf3_37_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_461: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_37_8
PIXf3_38_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov edi, 0x1d4
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_467: mov edi, 0x1d6
 mov eax, 1
 call PCJMP_f3
BBf3_468: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 sub dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_38_8
PIXf3_39_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_486: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_39_8
PIXf3_40_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_40_8
PIXf3_41_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_41_8
PIXf3_42_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_42_8
PIXf3_43_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_43_8
PIXf3_44_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_533: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_44_8
PIXf3_45_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_542: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_45_8
PIXf3_46_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0x2
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 jmp PIXf3_46_8
PIXf3_47_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_562: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 jmp PIXf3_47_8
PIXf3_48_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_48_8
PIXf3_49_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_49_8
PIXf3_50_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_50_8
PIXf3_51_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x25c
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_603: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f3
BBf3_604: mov edi, 0x25e
 mov eax, 1
 call PCJMP_f3
BBf3_605: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f3
BBf3_606: mov edi, 0x254
 mov eax, 1
 call PCJMP_f3
BBf3_607: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_51_8
PIXf3_0_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffce
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_0_9
PIXf3_1_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xb
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_10: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_1_9
PIXf3_2_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_9
PIXf3_3_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_3_9
PIXf3_4_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_4_9
PIXf3_5_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x1d
 mov eax, 1
 call PCJMP_f3
BBf3_34: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_5_9
PIXf3_6_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_6_9
PIXf3_7_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_62: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x18
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_7_9
PIXf3_8_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_78: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 jmp PIXf3_8_9
PIXf3_9_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_91: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 jmp PIXf3_9_9
PIXf3_10_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_10_9
PIXf3_11_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x7c
 mov eax, 1
 call PCJMP_f3
BBf3_123: mov dword [reg_a3], 0x0
BBf3_124: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_11_9
PIXf3_12_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x8d
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_140: mov edi, 0x89
 mov eax, 1
 call PCJMP_f3
BBf3_141: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_12_9
PIXf3_13_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x97
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_150: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_a3]
 jmp PIXf3_13_9
PIXf3_14_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_14_9
PIXf3_15_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_9
PIXf3_16_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xc0
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_191: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_16_9
PIXf3_17_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_208: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_209: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_17_9
PIXf3_18_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x7
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_18_9
PIXf3_19_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_238: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_19_9
PIXf3_20_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x100
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_255: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff9
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_20_9
PIXf3_21_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_21_9
PIXf3_22_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_22_9
PIXf3_23_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_23_9
PIXf3_24_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x12f
 mov eax, 1
 call PCJMP_f3
BBf3_302: mov edi, 0x130
 mov eax, 1
 jmp PIXf3_24_9
PIXf3_25_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_314: mov dword [reg_a3], 0x8000
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_25_9
PIXf3_26_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_26_9
PIXf3_27_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_337: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f3
BBf3_338: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_27_9
PIXf3_28_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_28_9
PIXf3_29_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_29_9
PIXf3_30_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_30_9
PIXf3_31_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov edi, 0x170
 mov eax, 1
 call PCJMP_f3
BBf3_372: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x176
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_373: mov edi, 0x177
 mov eax, 1
 call PCJMP_f3
BBf3_374: mov edi, 0x179
 mov eax, 1
 jmp PIXf3_31_9
PIXf3_32_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_388: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0x186
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_389: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_32_9
PIXf3_33_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_33_9
PIXf3_34_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_423: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_34_9
PIXf3_35_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 jmp PIXf3_35_9
PIXf3_36_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1c3
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_450: mov edi, 0x1bc
 mov eax, 1
 call PCJMP_f3
BBf3_451: mov edi, 0x1bb
 jmp PIXf3_36_9
PIXf3_37_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_462: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_37_9
PIXf3_38_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1d6
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
 jmp PIXf3_38_9
PIXf3_39_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_39_9
PIXf3_40_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_40_9
PIXf3_41_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_500: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x64
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_41_9
PIXf3_42_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 jmp PIXf3_42_9
PIXf3_43_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_43_9
PIXf3_44_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_44_9
PIXf3_45_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0x3
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_45_9
PIXf3_46_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_46_9
PIXf3_47_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_563: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_47_9
PIXf3_48_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_577: mov eax, 0x3
 mov ecx, reg_a3
 int 0x80
 mov edi, 0x243
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_578: mov dword [reg_a3], 0xffffff
BBf3_579: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 jmp PIXf3_48_9
PIXf3_49_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_49_9
PIXf3_50_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_50_9
PIXf3_51_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_51_9
PIXf3_0_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffce
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_0_10
PIXf3_1_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xffffcd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffd0
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_1_10
PIXf3_2_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_10
PIXf3_3_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_3_10
PIXf3_4_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_24: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0x1a
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_25: mov edi, 0x1c
 mov eax, 1
 call PCJMP_f3
BBf3_26: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_4_10
PIXf3_5_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_35: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 jmp PIXf3_5_10
PIXf3_6_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_6_10
PIXf3_7_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x40
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_63: mov edi, 0x41
 mov eax, 1
 call PCJMP_f3
BBf3_64: mov edi, 0x4c
 mov eax, 1
 call PCJMP_f3
BBf3_65: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_7_10
PIXf3_8_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 sub dword [reg_sp3], 0x5
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_79: mov eax, dword [reg_bp3]
 jmp PIXf3_8_10
PIXf3_9_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_92: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_93: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_9_10
PIXf3_10_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_10_10
PIXf3_11_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x7e
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_125: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_11_10
PIXf3_12_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_142: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 jmp PIXf3_12_10
PIXf3_13_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov edi, 0x98
 mov eax, 1
 call PCJMP_f3
BBf3_151: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_13_10
PIXf3_14_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_14_10
PIXf3_15_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_10
PIXf3_16_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x7a
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_192: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xc4
 cmp dword [reg_a3], 0x0
 setne al
 jmp PIXf3_16_10
PIXf3_17_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_210: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_17_10
PIXf3_18_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xe0
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_223: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_18_10
PIXf3_19_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xf0
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_239: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_19_10
PIXf3_20_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff9
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_20_10
PIXf3_21_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_21_10
PIXf3_22_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_22_10
PIXf3_23_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_296: mov dword [reg_a3], 0x30
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_23_10
PIXf3_24_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_303: mov edi, 0x128
 mov eax, 1
 call PCJMP_f3
BBf3_304: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_24_10
PIXf3_25_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_25_10
PIXf3_26_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_26_10
PIXf3_27_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_27_10
PIXf3_28_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_28_10
PIXf3_29_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f3
BBf3_342: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 jmp PIXf3_29_10
PIXf3_30_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_30_10
PIXf3_31_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_375: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 jmp PIXf3_31_10
PIXf3_32_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_390: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0x188
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_391: mov edi, 0x189
 mov eax, 1
 call PCJMP_f3
BBf3_392: mov edi, 0x18e
 mov eax, 1
 call PCJMP_f3
BBf3_393: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 jmp PIXf3_32_10
PIXf3_33_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x19a
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_409: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_33_10
PIXf3_34_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_424: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_34_10
PIXf3_35_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1b7
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_438: mov edi, 0x1b1
 mov eax, 1
 call PCJMP_f3
BBf3_439: mov edi, 0x1b2
 mov eax, 1
 call PCJMP_f3
BBf3_440: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_35_10
PIXf3_36_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_452: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_453: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_36_10
PIXf3_37_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1d6
 cmp dword [reg_a3], 0x0
 sete  al
 jmp PIXf3_37_10
PIXf3_38_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_469: mov edi, 0x1d0
 mov eax, 1
 call PCJMP_f3
BBf3_470: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_471: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 jmp PIXf3_38_10
PIXf3_39_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_39_10
PIXf3_40_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_40_10
PIXf3_41_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1f6
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_501: mov edi, 0x202
 mov eax, 1
 call PCJMP_f3
BBf3_502: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_41_10
PIXf3_42_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x205
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_42_10
PIXf3_43_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_43_10
PIXf3_44_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_44_10
PIXf3_45_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_45_10
PIXf3_46_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x226
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f3
BBf3_550: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_46_10
PIXf3_47_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_47_10
PIXf3_48_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_48_10
PIXf3_49_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_49_10
PIXf3_50_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_50_10
PIXf3_51_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 jmp PIXf3_51_10
PIXf3_0_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0x4
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_3: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffce
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_0_11
PIXf3_1_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_1_11
PIXf3_2_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_11
PIXf3_3_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_3_11
PIXf3_4_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_4_11
PIXf3_5_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_5_11
PIXf3_6_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_6_11
PIXf3_7_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_7_11
PIXf3_8_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_8_11
PIXf3_9_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x4
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 jmp PIXf3_9_11
PIXf3_10_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x6f
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_110: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_10_11
PIXf3_11_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 jmp PIXf3_11_11
PIXf3_12_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_143: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x20
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffe0
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_12_11
PIXf3_13_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x61
 mov eax, dword [reg_a3]
 jmp PIXf3_13_11
PIXf3_14_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_14_11
PIXf3_15_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_11
PIXf3_16_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_193: mov dword [reg_a3], 0x41
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_16_11
PIXf3_17_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_211: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_17_11
PIXf3_18_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_224: mov eax, dword [reg_b3]
 jmp PIXf3_18_11
PIXf3_19_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x10
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_240: mov eax, dword [reg_b3]
 jmp PIXf3_19_11
PIXf3_20_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_20_11
PIXf3_21_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_21_11
PIXf3_22_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_22_11
PIXf3_23_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_23_11
PIXf3_24_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_305: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_306: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_24_11
PIXf3_25_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov dword [reg_a3], 0x13b
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, dword [reg_c3]
 mov eax, 1
 call PCJMP_f3
BBf3_315: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_25_11
PIXf3_26_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_26_11
PIXf3_27_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_27_11
PIXf3_28_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_28_11
PIXf3_29_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_29_11
PIXf3_30_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_30_11
PIXf3_31_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_31_11
PIXf3_32_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_32_11
PIXf3_33_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_33_11
PIXf3_34_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_34_11
PIXf3_35_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1ba
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_441: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_35_11
PIXf3_36_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x24
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_36_11
PIXf3_37_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_463: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x24
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_37_11
PIXf3_38_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_472: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_38_11
PIXf3_39_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_39_11
PIXf3_40_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_40_11
PIXf3_41_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x75
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1f8
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_503: mov edi, 0x202
 mov eax, 1
 call PCJMP_f3
BBf3_504: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_41_11
PIXf3_42_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x92
 mov eax, 1
 call PCJMP_f3
BBf3_517: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f3
BBf3_518: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_42_11
PIXf3_43_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_43_11
PIXf3_44_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_44_11
PIXf3_45_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_45_11
PIXf3_46_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 jmp PIXf3_46_11
PIXf3_47_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_47_11
PIXf3_48_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 jmp PIXf3_48_11
PIXf3_49_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_49_11
PIXf3_50_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_50_11
PIXf3_51_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_51_11
PIXf3_0_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 jmp PIXf3_0_12
PIXf3_1_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_12
PIXf3_2_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_12
PIXf3_3_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_3_12
PIXf3_4_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_4_12
PIXf3_5_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_5_12
PIXf3_6_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_6_12
PIXf3_7_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_7_12
PIXf3_8_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_8_12
PIXf3_9_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_94: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x18
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_9_12
PIXf3_10_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_10_12
PIXf3_11_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_11_12
PIXf3_12_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x20
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 jmp PIXf3_12_12
PIXf3_13_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
BBf3_152: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_13_12
PIXf3_14_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_14_12
PIXf3_15_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_12
PIXf3_16_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xc3
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_194: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_16_12
PIXf3_17_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_212: mov eax, dword [reg_sp3]
 jmp PIXf3_17_12
PIXf3_18_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xe2
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_225: mov dword [reg_a3], 0x24
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_18_12
PIXf3_19_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xf2
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_241: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_19_12
PIXf3_20_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_20_12
PIXf3_21_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_21_12
PIXf3_22_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
BBf3_284: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 jmp PIXf3_22_12
PIXf3_23_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_23_12
PIXf3_24_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_24_12
PIXf3_25_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x13d
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_316: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_25_12
PIXf3_26_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_26_12
PIXf3_27_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_27_12
PIXf3_28_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_28_12
PIXf3_29_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_29_12
PIXf3_30_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_30_12
PIXf3_31_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_31_12
PIXf3_32_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_32_12
PIXf3_33_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_33_12
PIXf3_34_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1a9
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x168
 jmp PIXf3_34_12
PIXf3_35_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_35_12
PIXf3_36_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_36_12
PIXf3_37_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_464: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 jmp PIXf3_37_12
PIXf3_38_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
BBf3_473: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_38_12
PIXf3_39_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_39_12
PIXf3_40_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_40_12
PIXf3_41_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xffffdb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x78
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 jmp PIXf3_41_12
PIXf3_42_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 jmp PIXf3_42_12
PIXf3_43_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x20b
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f3
BBf3_523: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_43_12
PIXf3_44_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_44_12
PIXf3_45_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_45_12
PIXf3_46_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_551: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_46_12
PIXf3_47_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x234
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xf
 jmp PIXf3_47_12
PIXf3_48_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_48_12
PIXf3_49_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_49_12
PIXf3_50_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_593: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_50_12
PIXf3_51_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 jmp PIXf3_51_12
PIXf3_0_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_4: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0x6
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_5: mov edi, 0x8
 mov eax, 1
 call PCJMP_f3
BBf3_6: mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffd0
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_0_13
PIXf3_1_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_13
PIXf3_2_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_13
PIXf3_3_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov edi, 0x15
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_20: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_3_13
PIXf3_4_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_27: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 jmp PIXf3_4_13
PIXf3_5_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_36: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_5_13
PIXf3_6_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_6_13
PIXf3_7_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_7_13
PIXf3_8_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x18
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 jmp PIXf3_8_13
PIXf3_9_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x60
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_95: mov edi, 0x61
 mov eax, 1
 call PCJMP_f3
BBf3_96: mov edi, 0x67
 mov eax, 1
 call PCJMP_f3
BBf3_97: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_9_13
PIXf3_10_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x70
 mov eax, 1
 call PCJMP_f3
BBf3_111: mov dword [reg_a3], 0x0
BBf3_112: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x72
 cmp dword [reg_a3], 0x0
 sete  al
 jmp PIXf3_10_13
PIXf3_11_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_126: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 jmp PIXf3_11_13
PIXf3_12_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_12_13
PIXf3_13_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_13_13
PIXf3_14_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_14_13
PIXf3_15_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_13
PIXf3_16_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x5a
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_195: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 jmp PIXf3_16_13
PIXf3_17_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_b3], 0x148
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 jmp PIXf3_17_13
PIXf3_18_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_226: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0xe6
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_227: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 jmp PIXf3_18_13
PIXf3_19_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_19_13
PIXf3_20_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_20_13
PIXf3_21_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, 0x114
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_274: mov dword [reg_a3], 0x1
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_21_13
PIXf3_22_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_285: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_286: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_22_13
PIXf3_23_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0x12a
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
 jmp PIXf3_23_13
PIXf3_24_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_307: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_308: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 jmp PIXf3_24_13
PIXf3_25_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_25_13
PIXf3_26_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_26_13
PIXf3_27_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_27_13
PIXf3_28_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_28_13
PIXf3_29_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x157
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x134
 mov eax, 1
 jmp PIXf3_29_13
PIXf3_30_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 jmp PIXf3_30_13
PIXf3_31_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_376: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 jmp PIXf3_31_13
PIXf3_32_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_32_13
PIXf3_33_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_33_13
PIXf3_34_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_425: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_34_13
PIXf3_35_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_35_13
PIXf3_36_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_454: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_36_13
PIXf3_37_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 jmp PIXf3_37_13
PIXf3_38_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_38_13
PIXf3_39_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_39_13
PIXf3_40_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_40_13
PIXf3_41_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1fa
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_505: mov edi, 0x204
 mov eax, 1
 call PCJMP_f3
BBf3_506: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_41_13
PIXf3_42_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f3
BBf3_519: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_42_13
PIXf3_43_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x20c
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_43_13
PIXf3_44_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_44_13
PIXf3_45_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_45_13
PIXf3_46_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_552: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0x3
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_46_13
PIXf3_47_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_564: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_565: mov eax, dword [reg_bp3]
 jmp PIXf3_47_13
PIXf3_48_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_48_13
PIXf3_49_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_49_13
PIXf3_50_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x253
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_594: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_50_13
PIXf3_51_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_608: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_609: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_51_13
PIXf3_0_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 jmp PIXf3_0_14
PIXf3_1_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_14
PIXf3_2_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_14
PIXf3_3_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_21: mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_3_14
PIXf3_4_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x16
 mov eax, 1
 call PCJMP_f3
BBf3_28: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcb
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 jmp PIXf3_4_14
PIXf3_5_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x26
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_37: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_5_14
PIXf3_6_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x32
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
 jmp PIXf3_6_14
PIXf3_7_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 jmp PIXf3_7_14
PIXf3_8_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x51
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_80: mov edi, 0x52
 mov eax, 1
 call PCJMP_f3
BBf3_81: mov edi, 0x5b
 mov eax, 1
 call PCJMP_f3
BBf3_82: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_8_14
PIXf3_9_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_9_14
PIXf3_10_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_113: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_10_14
PIXf3_11_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_11_14
PIXf3_12_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_12_14
PIXf3_13_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x10
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_13_14
PIXf3_14_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_165: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xa7
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_166: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_14_14
PIXf3_15_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_14
PIXf3_16_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_16_14
PIXf3_17_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_b3], 0x148
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_17_14
PIXf3_18_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 jmp PIXf3_18_14
PIXf3_19_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_19_14
PIXf3_20_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_20_14
PIXf3_21_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_21_14
PIXf3_22_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 jmp PIXf3_22_14
PIXf3_23_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_297: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_23_14
PIXf3_24_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x6
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 jmp PIXf3_24_14
PIXf3_25_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_25_14
PIXf3_26_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_26_14
PIXf3_27_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_27_14
PIXf3_28_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_28_14
PIXf3_29_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_343: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x4
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_344: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_29_14
PIXf3_30_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_30_14
PIXf3_31_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_31_14
PIXf3_32_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x18b
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_394: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_32_14
PIXf3_33_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_410: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_33_14
PIXf3_34_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_34_14
PIXf3_35_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_442: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_35_14
PIXf3_36_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_36_14
PIXf3_37_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_37_14
PIXf3_38_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_38_14
PIXf3_39_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_39_14
PIXf3_40_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_40_14
PIXf3_41_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x73
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1fc
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_507: mov edi, 0x206
 mov eax, 1
 call PCJMP_f3
BBf3_508: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_41_14
PIXf3_42_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffdd
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_42_14
PIXf3_43_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f3
BBf3_524: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x129
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x20d
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_43_14
PIXf3_44_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x1e9
 mov eax, 1
 call PCJMP_f3
BBf3_534: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_44_14
PIXf3_45_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_45_14
PIXf3_46_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_46_14
PIXf3_47_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_47_14
PIXf3_48_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_48_14
PIXf3_49_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_49_14
PIXf3_50_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_595: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 jmp PIXf3_50_14
PIXf3_51_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x141
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x262
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_51_14
PIXf3_0_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_0_15
PIXf3_1_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_15
PIXf3_2_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_15
PIXf3_3_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_22: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffe5
 and dword [reg_a3], 0xffffff
 jmp PIXf3_3_15
PIXf3_4_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_29: mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffcd
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_4_15
PIXf3_5_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_38: mov eax, dword [reg_bp3]
 jmp PIXf3_5_15
PIXf3_6_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_49: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_6_15
PIXf3_7_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_7_15
PIXf3_8_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_8_15
PIXf3_9_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 jmp PIXf3_9_15
PIXf3_10_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_10_15
PIXf3_11_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov edi, 0x76
 mov eax, 1
 call PCJMP_f3
BBf3_127: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_11_15
PIXf3_12_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x90
 jmp PIXf3_12_15
PIXf3_13_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x99
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f3
BBf3_153: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 jmp PIXf3_13_15
PIXf3_14_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xb
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
 jmp PIXf3_14_15
PIXf3_15_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_15
PIXf3_16_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_16_15
PIXf3_17_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 jmp PIXf3_17_15
PIXf3_18_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_18_15
PIXf3_19_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_19_15
PIXf3_20_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 jmp PIXf3_20_15
PIXf3_21_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x113
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f3
BBf3_275: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 jmp PIXf3_21_15
PIXf3_22_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_22_15
PIXf3_23_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_23_15
PIXf3_24_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x136
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_309: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 jmp PIXf3_24_15
PIXf3_25_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, 0x13e
 mov eax, 1
 call PCJMP_f3
BBf3_317: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f3
BBf3_318: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f3
BBf3_319: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_25_15
PIXf3_26_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_26_15
PIXf3_27_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_27_15
PIXf3_28_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x154
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_28_15
PIXf3_29_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_345: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_29_15
PIXf3_30_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_357: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 jmp PIXf3_30_15
PIXf3_31_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 jmp PIXf3_31_15
PIXf3_32_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_32_15
PIXf3_33_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_33_15
PIXf3_34_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1aa
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f3
BBf3_426: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 jmp PIXf3_34_15
PIXf3_35_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 jmp PIXf3_35_15
PIXf3_36_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_36_15
PIXf3_37_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_37_15
PIXf3_38_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_38_15
PIXf3_39_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_39_15
PIXf3_40_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1f0
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_495: mov dword [reg_a3], 0x1
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_40_15
PIXf3_41_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x63
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1fe
 jmp PIXf3_41_15
PIXf3_42_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_42_15
PIXf3_43_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f3
BBf3_525: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp3], 0x1
 jmp PIXf3_43_15
PIXf3_44_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_44_15
PIXf3_45_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_45_15
PIXf3_46_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_46_15
PIXf3_47_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x237
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_566: mov edi, 0x238
 mov eax, 1
 call PCJMP_f3
BBf3_567: mov edi, 0x23a
 mov eax, 1
 call PCJMP_f3
BBf3_568: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_47_15
PIXf3_48_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_48_15
PIXf3_49_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_49_15
PIXf3_50_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_596: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_50_15
PIXf3_51_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, 0x225
 mov eax, 1
 call PCJMP_f3
BBf3_610: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
BBf3_611: nop
 mov dword [reg_sp3], eax
 mov eax, 1
 mov eax, dword [mem3 + 4*eax]
 mov edi, 0xe6
 mov eax, dword [reg_a3]
 and dword [reg_a3], 0xffffff
 mov dword [reg_sp3], eax
 call PCJMP_f3
 cmp dword [reg_a3], 0x0
 and dword [reg_sp3], 0xffffff
 mov eax, dword [mem3 + 4*eax]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [mem3 + 4*eax]
 mov eax, dword [reg_a3]
 jmp PIXf3_51_15
PIXf3_0_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffd0
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 jmp PIXf3_0_16
PIXf3_1_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_16
PIXf3_2_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_16
PIXf3_3_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_3_16
PIXf3_4_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_4_16
PIXf3_5_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xfffffe
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_5_16
PIXf3_6_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x33
 mov eax, 1
 call PCJMP_f3
BBf3_50: mov dword [reg_a3], 0x0
BBf3_51: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_6_16
PIXf3_7_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x43
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_66: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_7_16
PIXf3_8_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_8_16
PIXf3_9_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_9_16
PIXf3_10_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_10_16
PIXf3_11_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_128: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_129: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_11_16
PIXf3_12_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f3
BBf3_144: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_12_16
PIXf3_13_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x9b
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_154: mov edi, 0x94
 mov eax, 1
 call PCJMP_f3
BBf3_155: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 jmp PIXf3_13_16
PIXf3_14_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_167: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xa9
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_168: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x20
 mov eax, dword [reg_a3]
 jmp PIXf3_14_16
PIXf3_15_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_16
PIXf3_16_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_16_16
PIXf3_17_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x148
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_b3], 0x148
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_17_16
PIXf3_18_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_18_16
PIXf3_19_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_19_16
PIXf3_20_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_256: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff9
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_20_16
PIXf3_21_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_21_16
PIXf3_22_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x11f
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f3
BBf3_287: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_22_16
PIXf3_23_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x39
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_23_16
PIXf3_24_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_310: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_24_16
PIXf3_25_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 jmp PIXf3_25_16
PIXf3_26_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_26_16
PIXf3_27_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_27_16
PIXf3_28_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f3
BBf3_340: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x4
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_28_16
PIXf3_29_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 jmp PIXf3_29_16
PIXf3_30_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x161
 mov eax, 1
 call PCJMP_f3
BBf3_358: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_30_16
PIXf3_31_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x174
 mov eax, 1
 call PCJMP_f3
BBf3_377: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_31_16
PIXf3_32_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_395: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_32_16
PIXf3_33_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x19c
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_411: mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_33_16
PIXf3_34_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_34_16
PIXf3_35_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_443: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 jmp PIXf3_35_16
PIXf3_36_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_36_16
PIXf3_37_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_37_16
PIXf3_38_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_38_16
PIXf3_39_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_39_16
PIXf3_40_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_40_16
PIXf3_41_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_509: mov edi, 0x207
 mov eax, 1
 call PCJMP_f3
BBf3_510: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x25
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_41_16
PIXf3_42_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_42_16
PIXf3_43_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
BBf3_526: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x20f
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_43_16
PIXf3_44_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_44_16
PIXf3_45_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_45_16
PIXf3_46_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_46_16
PIXf3_47_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_47_16
PIXf3_48_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_48_16
PIXf3_49_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_49_16
PIXf3_50_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_50_16
PIXf3_51_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, dword [reg_a3]
 call PCJMP_f3
 mov eax, dword [reg_a3]
 mov dword [reg_a3], eax
 mov dword [reg_a3], eax
 add dword [reg_b3], 0x3
 call PCJMP_f3
 mov dword [reg_a3], eax
 mov edi, 0xe2
 mov edi, 0x101
 mov dword [reg_b3], 0x0
 mov dword [reg_b3], eax
 mov dword [reg_sp3], eax
 mov eax, dword [reg_d3]
 mov eax, dword [reg_b3]
 call PCJMP_f3
 mov eax, 1
 and dword [reg_d3], 0xffffff
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov edi, dword [reg_a3]
 mov eax, dword [reg_b3]
 setb  al
 and dword [reg_b3], 0xffffff
 add dword [reg_sp3], 0x1
 jmp PIXf3_51_16
PIXf3_0_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_0_17
PIXf3_1_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_17
PIXf3_2_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_15: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_2_17
PIXf3_3_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_3_17
PIXf3_4_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_4_17
PIXf3_5_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x27
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_5_17
PIXf3_6_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 jmp PIXf3_6_17
PIXf3_7_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_7_17
PIXf3_8_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_8_17
PIXf3_9_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x63
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_98: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_9_17
PIXf3_10_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_10_17
PIXf3_11_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
BBf3_130: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x84
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_131: mov edi, 0x85
 jmp PIXf3_11_17
PIXf3_12_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x91
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f3
BBf3_145: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_12_17
PIXf3_13_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x9d
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_156: mov dword [reg_a3], 0x2d
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_13_17
PIXf3_14_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_169: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_14_17
PIXf3_15_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_17
PIXf3_16_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_16_17
PIXf3_17_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_17_17
PIXf3_18_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_18_17
PIXf3_19_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_242: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xf6
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_243: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_19_17
PIXf3_20_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffff9
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_257: mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_20_17
PIXf3_21_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x116
 jmp PIXf3_21_17
PIXf3_22_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_288: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_22_17
PIXf3_23_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_298: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0x12e
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_299: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_23_17
PIXf3_24_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_24_17
PIXf3_25_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x140
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, dword [reg_c3]
 mov eax, 1
 call PCJMP_f3
BBf3_320: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_25_17
PIXf3_26_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_26_17
PIXf3_27_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_27_17
PIXf3_28_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_28_17
PIXf3_29_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x15b
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_346: mov edi, 0x15c
 mov eax, 1
 call PCJMP_f3
BBf3_347: mov edi, 0x15e
 mov eax, 1
 call PCJMP_f3
BBf3_348: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_29_17
PIXf3_30_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_359: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_30_17
PIXf3_31_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_378: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 jmp PIXf3_31_17
PIXf3_32_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_32_17
PIXf3_33_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_412: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 jmp PIXf3_33_17
PIXf3_34_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1ab
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f3
BBf3_427: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_34_17
PIXf3_35_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 jmp PIXf3_35_17
PIXf3_36_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_36_17
PIXf3_37_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_37_17
PIXf3_38_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_38_17
PIXf3_39_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_39_17
PIXf3_40_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_40_17
PIXf3_41_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x200
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_511: mov edi, 0x208
 mov eax, 1
 call PCJMP_f3
BBf3_512: mov edi, 0x209
 mov eax, 1
 call PCJMP_f3
BBf3_513: mov edi, 0x1f2
 mov eax, 1
 call PCJMP_f3
BBf3_514: mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 jmp PIXf3_41_17
PIXf3_42_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffdd
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_42_17
PIXf3_43_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x168
 mov eax, 1
 call PCJMP_f3
BBf3_527: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffda
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_43_17
PIXf3_44_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 jmp PIXf3_44_17
PIXf3_45_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x21f
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x218
 mov eax, 1
 call PCJMP_f3
 jmp PIXf3_45_17
PIXf3_46_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_46_17
PIXf3_47_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_47_17
PIXf3_48_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_48_17
PIXf3_49_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x24b
 jmp PIXf3_49_17
PIXf3_50_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x25d
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_597: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_50_17
PIXf3_51_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov eax, dword [reg_b3]
 mov eax, 1
 and dword [reg_d3], 0xffffff
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], eax
 mov eax, dword [mem3 + 4*eax]
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [mem3 + 4*eax]
 call PCJMP_f3
 call PCJMP_f3
 call PCJMP_f3
 add dword [reg_sp3], 0x1
 call PCJMP_f3
 call PCJMP_f3
 add dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov eax, dword [reg_a3]
 sete  al
 call PCJMP_f3
 mov eax, dword [reg_bp3]
 call PCJMP_f3
 add dword [reg_d3], 0xffffff
 call PCJMP_f3
 jmp PIXf3_51_17
PIXf3_0_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_0_18
PIXf3_1_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_18
PIXf3_2_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_18
PIXf3_3_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_3_18
PIXf3_4_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_4_18
PIXf3_5_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_5_18
PIXf3_6_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_6_18
PIXf3_7_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_7_18
PIXf3_8_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_8_18
PIXf3_9_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_9_18
PIXf3_10_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_114: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_10_18
PIXf3_11_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_132: mov edi, 0x87
 mov eax, 1
 call PCJMP_f3
BBf3_133: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_11_18
PIXf3_12_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_146: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 jmp PIXf3_12_18
PIXf3_13_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 sub dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_13_18
PIXf3_14_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_170: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_14_18
PIXf3_15_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_18
PIXf3_16_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_16_18
PIXf3_17_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_17_18
PIXf3_18_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov edi, 0xe5
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_228: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 jmp PIXf3_18_18
PIXf3_19_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x78
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_19_18
PIXf3_20_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_258: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x103
 jmp PIXf3_20_18
PIXf3_21_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_276: mov dword [reg_a3], 0x1
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffa
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_21_18
PIXf3_22_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_289: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_22_18
PIXf3_23_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x3
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_23_18
PIXf3_24_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x2
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_24_18
PIXf3_25_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x8000
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_25_18
PIXf3_26_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_26_18
PIXf3_27_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_27_18
PIXf3_28_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_28_18
PIXf3_29_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_29_18
PIXf3_30_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_30_18
PIXf3_31_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_31_18
PIXf3_32_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_32_18
PIXf3_33_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_33_18
PIXf3_34_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 jmp PIXf3_34_18
PIXf3_35_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_444: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_35_18
PIXf3_36_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_36_18
PIXf3_37_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 jmp PIXf3_37_18
PIXf3_38_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_38_18
PIXf3_39_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_39_18
PIXf3_40_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_40_18
PIXf3_41_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_a3], 0xffffdd
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x20
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_41_18
PIXf3_42_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_42_18
PIXf3_43_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 cmp dword [reg_a3], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x214
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_528: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_43_18
PIXf3_44_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_535: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_44_18
PIXf3_45_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_543: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_45_18
PIXf3_46_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_46_18
PIXf3_47_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_47_18
PIXf3_48_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_48_18
PIXf3_49_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_586: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x13f
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 jmp PIXf3_49_18
PIXf3_50_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x256
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f3
BBf3_598: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_50_18
PIXf3_51_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 call PCJMP_f3
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov edi, 0xfc
 and dword [reg_sp3], 0xffffff
 add dword [reg_sp3], 0x1
 mov eax, dword [reg_d3]
 add dword [reg_sp3], 0x1
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 setne al
 mov eax, 1
 cmp dword [reg_a3], 0x0
 mov eax, dword [mem3 + 4*eax]
 and dword [reg_sp3], 0xffffff
 mov eax, 1
 mov eax, dword [reg_a3]
 sete  al
 mov eax, 1
 mov dword [reg_a3], eax
 mov dword [mem3 + 4*ecx], eax
 mov eax, 1
 and dword [reg_b3], 0xffffff
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_51_18
PIXf3_0_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_0_19
PIXf3_1_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_1_19
PIXf3_2_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_2_19
PIXf3_3_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_3_19
PIXf3_4_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_4_19
PIXf3_5_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_5_19
PIXf3_6_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_6_19
PIXf3_7_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_7_19
PIXf3_8_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x54
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_83: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_8_19
PIXf3_9_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x64
 mov eax, 1
 call PCJMP_f3
BBf3_99: mov dword [reg_a3], 0x0
BBf3_100: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_9_19
PIXf3_10_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x6a
 mov eax, 1
 call PCJMP_f3
BBf3_115: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_10_19
PIXf3_11_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, 0x4
 mov ecx, reg_a3
 int 0x80
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_134: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 jmp PIXf3_11_19
PIXf3_12_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_12_19
PIXf3_13_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
BBf3_157: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 jmp PIXf3_13_19
PIXf3_14_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_171: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_14_19
PIXf3_15_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_15_19
PIXf3_16_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 setne al
 jmp PIXf3_16_19
PIXf3_17_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_17_19
PIXf3_18_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_229: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 jmp PIXf3_18_19
PIXf3_19_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xf5
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_244: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_19_19
PIXf3_20_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f3
BBf3_259: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x105
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_260: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_20_19
PIXf3_21_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_21_19
PIXf3_22_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_22_19
PIXf3_23_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x12c
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f3
BBf3_300: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 jmp PIXf3_23_19
PIXf3_24_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x137
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_24_19
PIXf3_25_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x142
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_321: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_25_19
PIXf3_26_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_26_19
PIXf3_27_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_27_19
PIXf3_28_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_28_19
PIXf3_29_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_29_19
PIXf3_30_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_30_19
PIXf3_31_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_31_19
PIXf3_32_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_32_19
PIXf3_33_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_33_19
PIXf3_34_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_428: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_429: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_34_19
PIXf3_35_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_35_19
PIXf3_36_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1ca
 cmp dword [reg_a3], 0x0
 sete  al
 jmp PIXf3_36_19
PIXf3_37_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_37_19
PIXf3_38_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_38_19
PIXf3_39_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1e7
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_39_19
PIXf3_40_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x1f1
 mov eax, 1
 call PCJMP_f3
BBf3_496: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_40_19
PIXf3_41_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_41_19
PIXf3_42_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffdd
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffdc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_42_19
PIXf3_43_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffda
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_43_19
PIXf3_44_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_536: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_44_19
PIXf3_45_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_544: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_45_19
PIXf3_46_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_46_19
PIXf3_47_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 jmp PIXf3_47_19
PIXf3_48_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 sete  al
 jmp PIXf3_48_19
PIXf3_49_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_587: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_49_19
PIXf3_50_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_50_19
PIXf3_51_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x2
 add dword [reg_sp3], 0x1
 add dword [reg_b3], 0xfffffe
 mov dword [reg_a3], eax
 mov eax, dword [reg_d3]
 add dword [reg_d3], 0xffffff
 cmp dword [reg_a3], 0x0
 mov eax, dword [mem3 + 4*eax]
 and dword [reg_sp3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [mem3 + 4*eax]
 call PCJMP_f3
 mov eax, dword [mem3 + 4*eax]
 cmp dword [reg_a3], 0x0
 add dword [reg_sp3], 0x1
 mov eax, dword [reg_a3]
 add dword [reg_b3], 0xfffffd
 mov eax, 1
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_a3]
 call PCJMP_f3
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 call PCJMP_f3
 setne al
 jmp PIXf3_51_19
PIXf3_0_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 jmp PIXf3_0_20
PIXf3_1_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_1_20
PIXf3_2_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x35
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_2_20
PIXf3_3_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_3_20
PIXf3_4_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1f
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_30: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_4_20
PIXf3_5_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f3
BBf3_39: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_5_20
PIXf3_6_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x35
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_52: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_6_20
PIXf3_7_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x44
 mov eax, 1
 call PCJMP_f3
BBf3_67: mov dword [reg_a3], 0x0
BBf3_68: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 jmp PIXf3_7_20
PIXf3_8_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 jmp PIXf3_8_20
PIXf3_9_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 cmp dword [reg_a3], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x66
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_101: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_9_20
PIXf3_10_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_116: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_10_20
PIXf3_11_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x82
 mov eax, 1
 call PCJMP_f3
BBf3_135: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_11_20
PIXf3_12_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_12_20
PIXf3_13_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_158: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_159: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_13_20
PIXf3_14_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xad
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
 jmp PIXf3_14_20
PIXf3_15_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xb8
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_181: mov dword [reg_a3], 0x41
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_15_20
PIXf3_16_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_196: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_197: mov eax, dword [reg_bp3]
 jmp PIXf3_16_20
PIXf3_17_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0xd7
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_213: mov dword [reg_a3], 0x18
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_17_20
PIXf3_18_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_230: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 jmp PIXf3_18_20
PIXf3_19_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x58
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 jmp PIXf3_19_20
PIXf3_20_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x30
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 jmp PIXf3_20_20
PIXf3_21_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x115
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f3
BBf3_277: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_21_20
PIXf3_22_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x122
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_22_20
PIXf3_23_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_23_20
PIXf3_24_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f3
BBf3_311: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 jmp PIXf3_24_20
PIXf3_25_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_25_20
PIXf3_26_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_331: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 jmp PIXf3_26_20
PIXf3_27_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_27_20
PIXf3_28_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_28_20
PIXf3_29_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_29_20
PIXf3_30_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_360: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_30_20
PIXf3_31_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, 1
 call PCJMP_f3
BBf3_379: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_31_20
PIXf3_32_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x18d
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_396: mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 jmp PIXf3_32_20
PIXf3_33_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_33_20
PIXf3_34_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x4
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_34_20
PIXf3_35_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 jmp PIXf3_35_20
PIXf3_36_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_455: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 jmp PIXf3_36_20
PIXf3_37_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1d2
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_465: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 jmp PIXf3_37_20
PIXf3_38_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setne al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1e2
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_474: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 jmp PIXf3_38_20
PIXf3_39_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f3
BBf3_487: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0xa
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, 0x4
 mov ecx, reg_a3
 int 0x80
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_39_20
PIXf3_40_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_40_20
PIXf3_41_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_41_20
PIXf3_42_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f3
BBf3_520: mov dword [reg_a3], 0x25
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffdd
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_42_20
PIXf3_43_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x212
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_529: mov dword [reg_a3], 0x1
 jmp PIXf3_43_20
PIXf3_44_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_44_20
PIXf3_45_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_545: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x101
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_45_20
PIXf3_46_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x229
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f3
BBf3_553: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 jmp PIXf3_46_20
PIXf3_47_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 jmp PIXf3_47_20
PIXf3_48_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x140
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 jmp PIXf3_48_20
PIXf3_49_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_588: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 jmp PIXf3_49_20
PIXf3_50_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_50_20
PIXf3_51_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 and dword [reg_sp3], 0xffffff
 mov ecx, dword [reg_b3]
 mov dword [reg_d3], eax
 add dword [reg_sp3], 0x1
 mov dword [reg_d3], eax
 and dword [reg_sp3], 0xffffff
 mov eax, 1
 mov dword [reg_a3], eax
 mov dword [reg_a3], eax
 call PCJMP_f3
 setbe al
 mov eax, dword [reg_sp3]
 cmp dword [reg_a3], eax
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 cmp dword [reg_a3], 0x0
 mov dword [reg_b3], eax
 add dword [reg_sp3], 0x1
 mov dword [reg_a3], 0x78
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov eax, dword [reg_a3]
 mov eax, 1
 mov dword [reg_b3], 0x1
 jmp PIXf3_51_20
PIXf3_0_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 jmp PIXf3_0_21
PIXf3_1_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_1_21
PIXf3_2_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x11
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_16: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 jmp PIXf3_2_21
PIXf3_3_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffcd
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_3_21
PIXf3_4_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffe5
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_4_21
PIXf3_5_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_40: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_5_21
PIXf3_6_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_6_21
PIXf3_7_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 jmp PIXf3_7_21
PIXf3_8_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x55
 mov eax, 1
 call PCJMP_f3
BBf3_84: mov dword [reg_a3], 0x0
BBf3_85: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 jmp PIXf3_8_21
PIXf3_9_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 jmp PIXf3_9_21
PIXf3_10_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_117: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x4
 jmp PIXf3_10_21
PIXf3_11_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_136: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_11_21
PIXf3_12_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setb  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x94
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
 jmp PIXf3_12_21
PIXf3_13_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xc
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_13_21
PIXf3_14_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_172: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x39
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 jmp PIXf3_14_21
PIXf3_15_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0xb7
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_182: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 jmp PIXf3_15_21
PIXf3_16_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_198: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_16_21
PIXf3_17_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xd6
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f3
BBf3_214: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_17_21
PIXf3_18_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_231: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 jmp PIXf3_18_21
PIXf3_19_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_245: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_246: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov edi, 0xf8
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_247: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_19_21
PIXf3_20_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f3
BBf3_261: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x106
 mov eax, dword [reg_sp3]
 jmp PIXf3_20_21
PIXf3_21_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_21_21
PIXf3_22_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f3
BBf3_290: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x3
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 jmp PIXf3_22_21
PIXf3_23_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_23_21
PIXf3_24_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 jmp PIXf3_24_21
PIXf3_25_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov edi, 0x143
 mov eax, 1
 jmp PIXf3_25_21
PIXf3_26_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 jmp PIXf3_26_21
PIXf3_27_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 jmp PIXf3_27_21
PIXf3_28_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_28_21
PIXf3_29_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_29_21
PIXf3_30_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_361: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_30_21
PIXf3_31_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_380: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x17e
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_381: mov edi, 0x17f
 mov eax, 1
 jmp PIXf3_31_21
PIXf3_32_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_397: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 jmp PIXf3_32_21
PIXf3_33_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 jmp PIXf3_33_21
PIXf3_34_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x0
 mov edi, 0x1af
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_430: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 jmp PIXf3_34_21
PIXf3_35_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1c1
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_445: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 jmp PIXf3_35_21
PIXf3_36_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 jmp PIXf3_36_21
PIXf3_37_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 jmp PIXf3_37_21
PIXf3_38_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_475: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_38_21
PIXf3_39_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_488: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 jmp PIXf3_39_21
PIXf3_40_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 jmp PIXf3_40_21
PIXf3_41_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 jmp PIXf3_41_21
PIXf3_42_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 jmp PIXf3_42_21
PIXf3_43_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_43_21
PIXf3_44_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x100
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 jmp PIXf3_44_21
PIXf3_45_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 jmp PIXf3_45_21
PIXf3_46_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_554: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_46_21
PIXf3_47_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, 0x4
 mov ecx, reg_a3
 int 0x80
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_569: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 jmp PIXf3_47_21
PIXf3_48_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_580: mov dword [reg_b3], 0x13f
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 jmp PIXf3_48_21
PIXf3_49_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_589: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 jmp PIXf3_49_21
PIXf3_50_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x25a
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_599: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov edi, 0x259
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_600: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f3
BBf3_601: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 jmp PIXf3_50_21
PIXf3_51_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
 and dword [reg_sp3], 0xffffff
 mov edi, 0xc4
 mov dword [reg_d3], eax
 add dword [reg_b3], 0x2
 mov ecx, dword [reg_d3]
 mov dword [reg_sp3], eax
 call PCJMP_f3
 mov dword [mem3 + 4*ecx], eax
 mov eax, 1
 mov eax, dword [reg_sp3]
 mov eax, dword [reg_sp3]
 mov ecx, dword [reg_b3]
 mov eax, 1
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov dword [reg_d3], eax
 mov dword [reg_d3], eax
 mov eax, dword [reg_bp3]
 call PCJMP_f3
 cmp dword [reg_a3], 0x0
 mov dword [reg_bp3], eax
 jmp PIXf3_51_21
PIXf3_0_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffffd0
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcf
 and dword [reg_b3], 0xffffff
 mov esi, 1
 jmp PIX_END_f3
PIXf3_1_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffcc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov esi, 2
 jmp PIX_END_f3
PIXf3_2_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov esi, 3
 jmp PIX_END_f3
PIXf3_3_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov esi, 4
 jmp PIX_END_f3
PIXf3_4_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 mov esi, 5
 jmp PIX_END_f3
PIXf3_5_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_41: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 sub dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xfffffe
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov esi, 6
 jmp PIX_END_f3
PIXf3_6_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x1
 mov edi, 0x36
 mov eax, 1
 call PCJMP_f3
BBf3_53: mov dword [reg_a3], 0x0
BBf3_54: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffb
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov esi, 7
 jmp PIX_END_f3
PIXf3_7_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x46
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_69: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 mov esi, 8
 jmp PIX_END_f3
PIXf3_8_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov esi, 9
 jmp PIX_END_f3
PIXf3_9_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_102: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov esi, 10
 jmp PIX_END_f3
PIXf3_10_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 mov esi, 11
 jmp PIX_END_f3
PIXf3_11_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 mov esi, 12
 jmp PIX_END_f3
PIXf3_12_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
BBf3_147: mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 mov esi, 13
 jmp PIX_END_f3
PIXf3_13_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov dword [reg_b3], 0x1
 mov edi, 0xa1
 cmp dword [reg_a3], 0x0
 setne al
 call PCJMP_f3
BBf3_160: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov esi, 14
 jmp PIX_END_f3
PIXf3_14_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
BBf3_173: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov esi, 15
 jmp PIX_END_f3
PIXf3_15_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x46
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 setbe al
 movzx eax, al
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 cmp dword [reg_b3], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b3], eax
 mov esi, 16
 jmp PIX_END_f3
PIXf3_16_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0xc7
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov esi, 17
 jmp PIX_END_f3
PIXf3_17_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_215: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov esi, 18
 jmp PIX_END_f3
PIXf3_18_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov esi, 19
 jmp PIX_END_f3
PIXf3_19_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 mov esi, 20
 jmp PIX_END_f3
PIXf3_20_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f3
BBf3_262: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x10c
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_263: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov esi, 21
 jmp PIX_END_f3
PIXf3_21_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
BBf3_278: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 mov esi, 22
 jmp PIX_END_f3
PIXf3_22_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_291: mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_292: mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_bp3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov esi, 23
 jmp PIX_END_f3
PIXf3_23_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x12d
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f3
BBf3_301: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 mov esi, 24
 jmp PIX_END_f3
PIXf3_24_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x138
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f3
BBf3_312: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x2
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov esi, 25
 jmp PIX_END_f3
PIXf3_25_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_322: mov edi, 0x144
 mov eax, 1
 call PCJMP_f3
BBf3_323: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f3
BBf3_324: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffc
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 mov esi, 26
 jmp PIX_END_f3
PIXf3_26_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_sp3], 0xffffff
 mov edi, 0x147
 mov eax, 1
 call PCJMP_f3
BBf3_332: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov esi, 27
 jmp PIX_END_f3
PIXf3_27_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov esi, 28
 jmp PIX_END_f3
PIXf3_28_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x155
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov esi, 29
 jmp PIX_END_f3
PIXf3_29_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
BBf3_349: mov eax, dword [reg_bp3]
 mov esi, 30
 jmp PIX_END_f3
PIXf3_30_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov esi, 31
 jmp PIX_END_f3
PIXf3_31_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 call PCJMP_f3
BBf3_382: mov edi, 0x181
 mov eax, 1
 call PCJMP_f3
BBf3_383: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov esi, 32
 jmp PIX_END_f3
PIXf3_32_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov esi, 33
 jmp PIX_END_f3
PIXf3_33_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x191
 mov eax, 1
 call PCJMP_f3
BBf3_413: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov esi, 34
 jmp PIX_END_f3
PIXf3_34_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 mov esi, 35
 jmp PIX_END_f3
PIXf3_35_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1bf
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_446: mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov esi, 36
 jmp PIX_END_f3
PIXf3_36_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 cmp dword [reg_a3], eax
 sete  al
 movzx eax, al
 mov dword [reg_a3], eax
 mov edi, 0x1c9
 cmp dword [reg_a3], 0x0
 sete  al
 call PCJMP_f3
BBf3_456: mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov esi, 37
 jmp PIX_END_f3
PIXf3_37_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 add dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov esi, 38
 jmp PIX_END_f3
PIXf3_38_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov esi, 39
 jmp PIX_END_f3
PIXf3_39_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 sub dword [reg_sp3], 0x26
 and dword [reg_sp3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_sp3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov esi, 40
 jmp PIX_END_f3
PIXf3_40_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov esi, 41
 jmp PIX_END_f3
PIXf3_41_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x5
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x203
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 mov esi, 42
 jmp PIX_END_f3
PIXf3_42_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_c3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_c3]
 mov dword [reg_a3], eax
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_a3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 mov esi, 43
 jmp PIX_END_f3
PIXf3_43_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_b3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_a3]
 mov esi, 44
 jmp PIX_END_f3
PIXf3_44_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x219
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f3
BBf3_537: mov eax, dword [reg_b3]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x4
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov esi, 45
 jmp PIX_END_f3
PIXf3_45_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x100
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_a3], eax
 add dword [reg_a3], 0xffff00
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov esi, 46
 jmp PIX_END_f3
PIXf3_46_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x4
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x3
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov esi, 47
 jmp PIX_END_f3
PIXf3_47_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 add dword [reg_a3], 0x1
 and dword [reg_a3], 0xffffff
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffd
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, 0x235
 mov eax, 1
 call PCJMP_f3
BBf3_570: mov eax, dword [reg_bp3]
 mov esi, 48
 jmp PIX_END_f3
PIXf3_48_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov dword [reg_a3], 0x1
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_b3]
 sub dword [reg_a3], eax
 and dword [reg_a3], 0xffffff
 mov dword [reg_b3], 0x13f
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_b3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xffffff
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov esi, 49
 jmp PIX_END_f3
PIXf3_49_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0x2
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov dword [reg_d3], eax
 add dword [reg_d3], 0xffffff
 and dword [reg_d3], 0xffffff
 mov eax, dword [reg_a3]
 mov ecx, dword [reg_d3]
 mov dword [mem3 + 4*ecx], eax
 mov eax, dword [reg_d3]
 mov dword [reg_sp3], eax
 mov eax, 0x4
 mov ecx, reg_a3
 int 0x80
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_bp3]
 mov esi, 50
 jmp PIX_END_f3
PIXf3_50_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov eax, dword [reg_bp3]
 mov dword [reg_sp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov eax, dword [reg_a3]
 mov dword [reg_bp3], eax
 mov eax, dword [reg_sp3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_sp3], 0xffffff
 mov edi, dword [reg_a3]
 mov eax, 1
 call PCJMP_f3
BBf3_602: mov eax, dword [reg_bp3]
 mov dword [reg_b3], eax
 add dword [reg_b3], 0xfffffe
 and dword [reg_b3], 0xffffff
 mov eax, dword [reg_b3]
 mov eax, dword [mem3 + 4*eax]
 mov dword [reg_a3], eax
 mov eax, dword [reg_sp3]
 mov esi, 51
 jmp PIX_END_f3
PIXf3_51_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem3]
 mov dword [reg_b3], eax
 mov eax, dword [reg_sp3]
 call PCJMP_f3
 add dword [reg_sp3], 0x1
 mov eax, 1
 mov dword [reg_d3], eax
 mov eax, dword [reg_d3]
 mov dword [reg_b3], eax
 call PCJMP_f3
 mov dword [reg_a3], 0x0
 mov eax, dword [reg_a3]
 and dword [reg_b3], 0xffffff
 mov dword [reg_a3], eax
 sete  al
 call PCJMP_f3
 mov edi, 0x9d
 mov dword [reg_b3], eax
 and dword [reg_b3], 0xffffff
 mov dword [reg_b3], eax
 add dword [reg_sp3], 0x1
 and dword [reg_d3], 0xffffff
 call PCJMP_f3
 and dword [reg_b3], 0xffffff
 mov eax, dword [mem3 + 4*eax]
 mov esi, 52
 jmp PIX_END_f3
PIX_PAD_f3_0: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_1
PIX_PAD_f3_1: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_2
PIX_PAD_f3_2: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_3
PIX_PAD_f3_3: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_4
PIX_PAD_f3_4: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_5
PIX_PAD_f3_5: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_6
PIX_PAD_f3_6: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_7
PIX_PAD_f3_7: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_8
PIX_PAD_f3_8: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_9
PIX_PAD_f3_9: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_10
PIX_PAD_f3_10: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_11
PIX_PAD_f3_11: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_12
PIX_PAD_f3_12: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_13
PIX_PAD_f3_13: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_14
PIX_PAD_f3_14: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_15
PIX_PAD_f3_15: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_16
PIX_PAD_f3_16: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_17
PIX_PAD_f3_17: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_18
PIX_PAD_f3_18: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_19
PIX_PAD_f3_19: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_20
PIX_PAD_f3_20: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f3_21
PIX_PAD_f3_21: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_END_f3
PIX_END_f3:
jmp PIX_START_f3
PIX_TABLE_f3:
 dd PIXf3_0_0
 dd PIXf3_1_0
 dd PIXf3_2_0
 dd PIXf3_3_0
 dd PIXf3_4_0
 dd PIXf3_5_0
 dd PIXf3_6_0
 dd PIXf3_7_0
 dd PIXf3_8_0
 dd PIXf3_9_0
 dd PIXf3_10_0
 dd PIXf3_11_0
 dd PIXf3_12_0
 dd PIXf3_13_0
 dd PIXf3_14_0
 dd PIXf3_15_0
 dd PIXf3_16_0
 dd PIXf3_17_0
 dd PIXf3_18_0
 dd PIXf3_19_0
 dd PIXf3_20_0
 dd PIXf3_21_0
 dd PIXf3_22_0
 dd PIXf3_23_0
 dd PIXf3_24_0
 dd PIXf3_25_0
 dd PIXf3_26_0
 dd PIXf3_27_0
 dd PIXf3_28_0
 dd PIXf3_29_0
 dd PIXf3_30_0
 dd PIXf3_31_0
 dd PIXf3_32_0
 dd PIXf3_33_0
 dd PIXf3_34_0
 dd PIXf3_35_0
 dd PIXf3_36_0
 dd PIXf3_37_0
 dd PIXf3_38_0
 dd PIXf3_39_0
 dd PIXf3_40_0
 dd PIXf3_41_0
 dd PIXf3_42_0
 dd PIXf3_43_0
 dd PIXf3_44_0
 dd PIXf3_45_0
 dd PIXf3_46_0
 dd PIXf3_47_0
 dd PIXf3_48_0
 dd PIXf3_49_0
 dd PIXf3_50_0
 dd PIXf3_51_0
 dd PIX_PAD_f3_0
JMP_TABLE_f3:
 dd BBf3_0 + 0xabad1dea
 dd BBf3_1 + 0xabad1dea
 dd BBf3_2 + 0xabad1dea
 dd BBf3_3 + 0xabad1dea
 dd BBf3_4 + 0xabad1dea
 dd BBf3_5 + 0xabad1dea
 dd BBf3_6 + 0xabad1dea
 dd BBf3_7 + 0xabad1dea
 dd BBf3_8 + 0xabad1dea
 dd BBf3_9 + 0xabad1dea
 dd BBf3_10 + 0xabad1dea
 dd BBf3_11 + 0xabad1dea
 dd BBf3_12 + 0xabad1dea
 dd BBf3_13 + 0xabad1dea
 dd BBf3_14 + 0xabad1dea
 dd BBf3_15 + 0xabad1dea
 dd BBf3_16 + 0xabad1dea
 dd BBf3_17 + 0xabad1dea
 dd BBf3_18 + 0xabad1dea
 dd BBf3_19 + 0xabad1dea
 dd BBf3_20 + 0xabad1dea
 dd BBf3_21 + 0xabad1dea
 dd BBf3_22 + 0xabad1dea
 dd BBf3_23 + 0xabad1dea
 dd BBf3_24 + 0xabad1dea
 dd BBf3_25 + 0xabad1dea
 dd BBf3_26 + 0xabad1dea
 dd BBf3_27 + 0xabad1dea
 dd BBf3_28 + 0xabad1dea
 dd BBf3_29 + 0xabad1dea
 dd BBf3_30 + 0xabad1dea
 dd BBf3_31 + 0xabad1dea
 dd BBf3_32 + 0xabad1dea
 dd BBf3_33 + 0xabad1dea
 dd BBf3_34 + 0xabad1dea
 dd BBf3_35 + 0xabad1dea
 dd BBf3_36 + 0xabad1dea
 dd BBf3_37 + 0xabad1dea
 dd BBf3_38 + 0xabad1dea
 dd BBf3_39 + 0xabad1dea
 dd BBf3_40 + 0xabad1dea
 dd BBf3_41 + 0xabad1dea
 dd BBf3_42 + 0xabad1dea
 dd BBf3_43 + 0xabad1dea
 dd BBf3_44 + 0xabad1dea
 dd BBf3_45 + 0xabad1dea
 dd BBf3_46 + 0xabad1dea
 dd BBf3_47 + 0xabad1dea
 dd BBf3_48 + 0xabad1dea
 dd BBf3_49 + 0xabad1dea
 dd BBf3_50 + 0xabad1dea
 dd BBf3_51 + 0xabad1dea
 dd BBf3_52 + 0xabad1dea
 dd BBf3_53 + 0xabad1dea
 dd BBf3_54 + 0xabad1dea
 dd BBf3_55 + 0xabad1dea
 dd BBf3_56 + 0xabad1dea
 dd BBf3_57 + 0xabad1dea
 dd BBf3_58 + 0xabad1dea
 dd BBf3_59 + 0xabad1dea
 dd BBf3_60 + 0xabad1dea
 dd BBf3_61 + 0xabad1dea
 dd BBf3_62 + 0xabad1dea
 dd BBf3_63 + 0xabad1dea
 dd BBf3_64 + 0xabad1dea
 dd BBf3_65 + 0xabad1dea
 dd BBf3_66 + 0xabad1dea
 dd BBf3_67 + 0xabad1dea
 dd BBf3_68 + 0xabad1dea
 dd BBf3_69 + 0xabad1dea
 dd BBf3_70 + 0xabad1dea
 dd BBf3_71 + 0xabad1dea
 dd BBf3_72 + 0xabad1dea
 dd BBf3_73 + 0xabad1dea
 dd BBf3_74 + 0xabad1dea
 dd BBf3_75 + 0xabad1dea
 dd BBf3_76 + 0xabad1dea
 dd BBf3_77 + 0xabad1dea
 dd BBf3_78 + 0xabad1dea
 dd BBf3_79 + 0xabad1dea
 dd BBf3_80 + 0xabad1dea
 dd BBf3_81 + 0xabad1dea
 dd BBf3_82 + 0xabad1dea
 dd BBf3_83 + 0xabad1dea
 dd BBf3_84 + 0xabad1dea
 dd BBf3_85 + 0xabad1dea
 dd BBf3_86 + 0xabad1dea
 dd BBf3_87 + 0xabad1dea
 dd BBf3_88 + 0xabad1dea
 dd BBf3_89 + 0xabad1dea
 dd BBf3_90 + 0xabad1dea
 dd BBf3_91 + 0xabad1dea
 dd BBf3_92 + 0xabad1dea
 dd BBf3_93 + 0xabad1dea
 dd BBf3_94 + 0xabad1dea
 dd BBf3_95 + 0xabad1dea
 dd BBf3_96 + 0xabad1dea
 dd BBf3_97 + 0xabad1dea
 dd BBf3_98 + 0xabad1dea
 dd BBf3_99 + 0xabad1dea
 dd BBf3_100 + 0xabad1dea
 dd BBf3_101 + 0xabad1dea
 dd BBf3_102 + 0xabad1dea
 dd BBf3_103 + 0xabad1dea
 dd BBf3_104 + 0xabad1dea
 dd BBf3_105 + 0xabad1dea
 dd BBf3_106 + 0xabad1dea
 dd BBf3_107 + 0xabad1dea
 dd BBf3_108 + 0xabad1dea
 dd BBf3_109 + 0xabad1dea
 dd BBf3_110 + 0xabad1dea
 dd BBf3_111 + 0xabad1dea
 dd BBf3_112 + 0xabad1dea
 dd BBf3_113 + 0xabad1dea
 dd BBf3_114 + 0xabad1dea
 dd BBf3_115 + 0xabad1dea
 dd BBf3_116 + 0xabad1dea
 dd BBf3_117 + 0xabad1dea
 dd BBf3_118 + 0xabad1dea
 dd BBf3_119 + 0xabad1dea
 dd BBf3_120 + 0xabad1dea
 dd BBf3_121 + 0xabad1dea
 dd BBf3_122 + 0xabad1dea
 dd BBf3_123 + 0xabad1dea
 dd BBf3_124 + 0xabad1dea
 dd BBf3_125 + 0xabad1dea
 dd BBf3_126 + 0xabad1dea
 dd BBf3_127 + 0xabad1dea
 dd BBf3_128 + 0xabad1dea
 dd BBf3_129 + 0xabad1dea
 dd BBf3_130 + 0xabad1dea
 dd BBf3_131 + 0xabad1dea
 dd BBf3_132 + 0xabad1dea
 dd BBf3_133 + 0xabad1dea
 dd BBf3_134 + 0xabad1dea
 dd BBf3_135 + 0xabad1dea
 dd BBf3_136 + 0xabad1dea
 dd BBf3_137 + 0xabad1dea
 dd BBf3_138 + 0xabad1dea
 dd BBf3_139 + 0xabad1dea
 dd BBf3_140 + 0xabad1dea
 dd BBf3_141 + 0xabad1dea
 dd BBf3_142 + 0xabad1dea
 dd BBf3_143 + 0xabad1dea
 dd BBf3_144 + 0xabad1dea
 dd BBf3_145 + 0xabad1dea
 dd BBf3_146 + 0xabad1dea
 dd BBf3_147 + 0xabad1dea
 dd BBf3_148 + 0xabad1dea
 dd BBf3_149 + 0xabad1dea
 dd BBf3_150 + 0xabad1dea
 dd BBf3_151 + 0xabad1dea
 dd BBf3_152 + 0xabad1dea
 dd BBf3_153 + 0xabad1dea
 dd BBf3_154 + 0xabad1dea
 dd BBf3_155 + 0xabad1dea
 dd BBf3_156 + 0xabad1dea
 dd BBf3_157 + 0xabad1dea
 dd BBf3_158 + 0xabad1dea
 dd BBf3_159 + 0xabad1dea
 dd BBf3_160 + 0xabad1dea
 dd BBf3_161 + 0xabad1dea
 dd BBf3_162 + 0xabad1dea
 dd BBf3_163 + 0xabad1dea
 dd BBf3_164 + 0xabad1dea
 dd BBf3_165 + 0xabad1dea
 dd BBf3_166 + 0xabad1dea
 dd BBf3_167 + 0xabad1dea
 dd BBf3_168 + 0xabad1dea
 dd BBf3_169 + 0xabad1dea
 dd BBf3_170 + 0xabad1dea
 dd BBf3_171 + 0xabad1dea
 dd BBf3_172 + 0xabad1dea
 dd BBf3_173 + 0xabad1dea
 dd BBf3_174 + 0xabad1dea
 dd BBf3_175 + 0xabad1dea
 dd BBf3_176 + 0xabad1dea
 dd BBf3_177 + 0xabad1dea
 dd BBf3_178 + 0xabad1dea
 dd BBf3_179 + 0xabad1dea
 dd BBf3_180 + 0xabad1dea
 dd BBf3_181 + 0xabad1dea
 dd BBf3_182 + 0xabad1dea
 dd BBf3_183 + 0xabad1dea
 dd BBf3_184 + 0xabad1dea
 dd BBf3_185 + 0xabad1dea
 dd BBf3_186 + 0xabad1dea
 dd BBf3_187 + 0xabad1dea
 dd BBf3_188 + 0xabad1dea
 dd BBf3_189 + 0xabad1dea
 dd BBf3_190 + 0xabad1dea
 dd BBf3_191 + 0xabad1dea
 dd BBf3_192 + 0xabad1dea
 dd BBf3_193 + 0xabad1dea
 dd BBf3_194 + 0xabad1dea
 dd BBf3_195 + 0xabad1dea
 dd BBf3_196 + 0xabad1dea
 dd BBf3_197 + 0xabad1dea
 dd BBf3_198 + 0xabad1dea
 dd BBf3_199 + 0xabad1dea
 dd BBf3_200 + 0xabad1dea
 dd BBf3_201 + 0xabad1dea
 dd BBf3_202 + 0xabad1dea
 dd BBf3_203 + 0xabad1dea
 dd BBf3_204 + 0xabad1dea
 dd BBf3_205 + 0xabad1dea
 dd BBf3_206 + 0xabad1dea
 dd BBf3_207 + 0xabad1dea
 dd BBf3_208 + 0xabad1dea
 dd BBf3_209 + 0xabad1dea
 dd BBf3_210 + 0xabad1dea
 dd BBf3_211 + 0xabad1dea
 dd BBf3_212 + 0xabad1dea
 dd BBf3_213 + 0xabad1dea
 dd BBf3_214 + 0xabad1dea
 dd BBf3_215 + 0xabad1dea
 dd BBf3_216 + 0xabad1dea
 dd BBf3_217 + 0xabad1dea
 dd BBf3_218 + 0xabad1dea
 dd BBf3_219 + 0xabad1dea
 dd BBf3_220 + 0xabad1dea
 dd BBf3_221 + 0xabad1dea
 dd BBf3_222 + 0xabad1dea
 dd BBf3_223 + 0xabad1dea
 dd BBf3_224 + 0xabad1dea
 dd BBf3_225 + 0xabad1dea
 dd BBf3_226 + 0xabad1dea
 dd BBf3_227 + 0xabad1dea
 dd BBf3_228 + 0xabad1dea
 dd BBf3_229 + 0xabad1dea
 dd BBf3_230 + 0xabad1dea
 dd BBf3_231 + 0xabad1dea
 dd BBf3_232 + 0xabad1dea
 dd BBf3_233 + 0xabad1dea
 dd BBf3_234 + 0xabad1dea
 dd BBf3_235 + 0xabad1dea
 dd BBf3_236 + 0xabad1dea
 dd BBf3_237 + 0xabad1dea
 dd BBf3_238 + 0xabad1dea
 dd BBf3_239 + 0xabad1dea
 dd BBf3_240 + 0xabad1dea
 dd BBf3_241 + 0xabad1dea
 dd BBf3_242 + 0xabad1dea
 dd BBf3_243 + 0xabad1dea
 dd BBf3_244 + 0xabad1dea
 dd BBf3_245 + 0xabad1dea
 dd BBf3_246 + 0xabad1dea
 dd BBf3_247 + 0xabad1dea
 dd BBf3_248 + 0xabad1dea
 dd BBf3_249 + 0xabad1dea
 dd BBf3_250 + 0xabad1dea
 dd BBf3_251 + 0xabad1dea
 dd BBf3_252 + 0xabad1dea
 dd BBf3_253 + 0xabad1dea
 dd BBf3_254 + 0xabad1dea
 dd BBf3_255 + 0xabad1dea
 dd BBf3_256 + 0xabad1dea
 dd BBf3_257 + 0xabad1dea
 dd BBf3_258 + 0xabad1dea
 dd BBf3_259 + 0xabad1dea
 dd BBf3_260 + 0xabad1dea
 dd BBf3_261 + 0xabad1dea
 dd BBf3_262 + 0xabad1dea
 dd BBf3_263 + 0xabad1dea
 dd BBf3_264 + 0xabad1dea
 dd BBf3_265 + 0xabad1dea
 dd BBf3_266 + 0xabad1dea
 dd BBf3_267 + 0xabad1dea
 dd BBf3_268 + 0xabad1dea
 dd BBf3_269 + 0xabad1dea
 dd BBf3_270 + 0xabad1dea
 dd BBf3_271 + 0xabad1dea
 dd BBf3_272 + 0xabad1dea
 dd BBf3_273 + 0xabad1dea
 dd BBf3_274 + 0xabad1dea
 dd BBf3_275 + 0xabad1dea
 dd BBf3_276 + 0xabad1dea
 dd BBf3_277 + 0xabad1dea
 dd BBf3_278 + 0xabad1dea
 dd BBf3_279 + 0xabad1dea
 dd BBf3_280 + 0xabad1dea
 dd BBf3_281 + 0xabad1dea
 dd BBf3_282 + 0xabad1dea
 dd BBf3_283 + 0xabad1dea
 dd BBf3_284 + 0xabad1dea
 dd BBf3_285 + 0xabad1dea
 dd BBf3_286 + 0xabad1dea
 dd BBf3_287 + 0xabad1dea
 dd BBf3_288 + 0xabad1dea
 dd BBf3_289 + 0xabad1dea
 dd BBf3_290 + 0xabad1dea
 dd BBf3_291 + 0xabad1dea
 dd BBf3_292 + 0xabad1dea
 dd BBf3_293 + 0xabad1dea
 dd BBf3_294 + 0xabad1dea
 dd BBf3_295 + 0xabad1dea
 dd BBf3_296 + 0xabad1dea
 dd BBf3_297 + 0xabad1dea
 dd BBf3_298 + 0xabad1dea
 dd BBf3_299 + 0xabad1dea
 dd BBf3_300 + 0xabad1dea
 dd BBf3_301 + 0xabad1dea
 dd BBf3_302 + 0xabad1dea
 dd BBf3_303 + 0xabad1dea
 dd BBf3_304 + 0xabad1dea
 dd BBf3_305 + 0xabad1dea
 dd BBf3_306 + 0xabad1dea
 dd BBf3_307 + 0xabad1dea
 dd BBf3_308 + 0xabad1dea
 dd BBf3_309 + 0xabad1dea
 dd BBf3_310 + 0xabad1dea
 dd BBf3_311 + 0xabad1dea
 dd BBf3_312 + 0xabad1dea
 dd BBf3_313 + 0xabad1dea
 dd BBf3_314 + 0xabad1dea
 dd BBf3_315 + 0xabad1dea
 dd BBf3_316 + 0xabad1dea
 dd BBf3_317 + 0xabad1dea
 dd BBf3_318 + 0xabad1dea
 dd BBf3_319 + 0xabad1dea
 dd BBf3_320 + 0xabad1dea
 dd BBf3_321 + 0xabad1dea
 dd BBf3_322 + 0xabad1dea
 dd BBf3_323 + 0xabad1dea
 dd BBf3_324 + 0xabad1dea
 dd BBf3_325 + 0xabad1dea
 dd BBf3_326 + 0xabad1dea
 dd BBf3_327 + 0xabad1dea
 dd BBf3_328 + 0xabad1dea
 dd BBf3_329 + 0xabad1dea
 dd BBf3_330 + 0xabad1dea
 dd BBf3_331 + 0xabad1dea
 dd BBf3_332 + 0xabad1dea
 dd BBf3_333 + 0xabad1dea
 dd BBf3_334 + 0xabad1dea
 dd BBf3_335 + 0xabad1dea
 dd BBf3_336 + 0xabad1dea
 dd BBf3_337 + 0xabad1dea
 dd BBf3_338 + 0xabad1dea
 dd BBf3_339 + 0xabad1dea
 dd BBf3_340 + 0xabad1dea
 dd BBf3_341 + 0xabad1dea
 dd BBf3_342 + 0xabad1dea
 dd BBf3_343 + 0xabad1dea
 dd BBf3_344 + 0xabad1dea
 dd BBf3_345 + 0xabad1dea
 dd BBf3_346 + 0xabad1dea
 dd BBf3_347 + 0xabad1dea
 dd BBf3_348 + 0xabad1dea
 dd BBf3_349 + 0xabad1dea
 dd BBf3_350 + 0xabad1dea
 dd BBf3_351 + 0xabad1dea
 dd BBf3_352 + 0xabad1dea
 dd BBf3_353 + 0xabad1dea
 dd BBf3_354 + 0xabad1dea
 dd BBf3_355 + 0xabad1dea
 dd BBf3_356 + 0xabad1dea
 dd BBf3_357 + 0xabad1dea
 dd BBf3_358 + 0xabad1dea
 dd BBf3_359 + 0xabad1dea
 dd BBf3_360 + 0xabad1dea
 dd BBf3_361 + 0xabad1dea
 dd BBf3_362 + 0xabad1dea
 dd BBf3_363 + 0xabad1dea
 dd BBf3_364 + 0xabad1dea
 dd BBf3_365 + 0xabad1dea
 dd BBf3_366 + 0xabad1dea
 dd BBf3_367 + 0xabad1dea
 dd BBf3_368 + 0xabad1dea
 dd BBf3_369 + 0xabad1dea
 dd BBf3_370 + 0xabad1dea
 dd BBf3_371 + 0xabad1dea
 dd BBf3_372 + 0xabad1dea
 dd BBf3_373 + 0xabad1dea
 dd BBf3_374 + 0xabad1dea
 dd BBf3_375 + 0xabad1dea
 dd BBf3_376 + 0xabad1dea
 dd BBf3_377 + 0xabad1dea
 dd BBf3_378 + 0xabad1dea
 dd BBf3_379 + 0xabad1dea
 dd BBf3_380 + 0xabad1dea
 dd BBf3_381 + 0xabad1dea
 dd BBf3_382 + 0xabad1dea
 dd BBf3_383 + 0xabad1dea
 dd BBf3_384 + 0xabad1dea
 dd BBf3_385 + 0xabad1dea
 dd BBf3_386 + 0xabad1dea
 dd BBf3_387 + 0xabad1dea
 dd BBf3_388 + 0xabad1dea
 dd BBf3_389 + 0xabad1dea
 dd BBf3_390 + 0xabad1dea
 dd BBf3_391 + 0xabad1dea
 dd BBf3_392 + 0xabad1dea
 dd BBf3_393 + 0xabad1dea
 dd BBf3_394 + 0xabad1dea
 dd BBf3_395 + 0xabad1dea
 dd BBf3_396 + 0xabad1dea
 dd BBf3_397 + 0xabad1dea
 dd BBf3_398 + 0xabad1dea
 dd BBf3_399 + 0xabad1dea
 dd BBf3_400 + 0xabad1dea
 dd BBf3_401 + 0xabad1dea
 dd BBf3_402 + 0xabad1dea
 dd BBf3_403 + 0xabad1dea
 dd BBf3_404 + 0xabad1dea
 dd BBf3_405 + 0xabad1dea
 dd BBf3_406 + 0xabad1dea
 dd BBf3_407 + 0xabad1dea
 dd BBf3_408 + 0xabad1dea
 dd BBf3_409 + 0xabad1dea
 dd BBf3_410 + 0xabad1dea
 dd BBf3_411 + 0xabad1dea
 dd BBf3_412 + 0xabad1dea
 dd BBf3_413 + 0xabad1dea
 dd BBf3_414 + 0xabad1dea
 dd BBf3_415 + 0xabad1dea
 dd BBf3_416 + 0xabad1dea
 dd BBf3_417 + 0xabad1dea
 dd BBf3_418 + 0xabad1dea
 dd BBf3_419 + 0xabad1dea
 dd BBf3_420 + 0xabad1dea
 dd BBf3_421 + 0xabad1dea
 dd BBf3_422 + 0xabad1dea
 dd BBf3_423 + 0xabad1dea
 dd BBf3_424 + 0xabad1dea
 dd BBf3_425 + 0xabad1dea
 dd BBf3_426 + 0xabad1dea
 dd BBf3_427 + 0xabad1dea
 dd BBf3_428 + 0xabad1dea
 dd BBf3_429 + 0xabad1dea
 dd BBf3_430 + 0xabad1dea
 dd BBf3_431 + 0xabad1dea
 dd BBf3_432 + 0xabad1dea
 dd BBf3_433 + 0xabad1dea
 dd BBf3_434 + 0xabad1dea
 dd BBf3_435 + 0xabad1dea
 dd BBf3_436 + 0xabad1dea
 dd BBf3_437 + 0xabad1dea
 dd BBf3_438 + 0xabad1dea
 dd BBf3_439 + 0xabad1dea
 dd BBf3_440 + 0xabad1dea
 dd BBf3_441 + 0xabad1dea
 dd BBf3_442 + 0xabad1dea
 dd BBf3_443 + 0xabad1dea
 dd BBf3_444 + 0xabad1dea
 dd BBf3_445 + 0xabad1dea
 dd BBf3_446 + 0xabad1dea
 dd BBf3_447 + 0xabad1dea
 dd BBf3_448 + 0xabad1dea
 dd BBf3_449 + 0xabad1dea
 dd BBf3_450 + 0xabad1dea
 dd BBf3_451 + 0xabad1dea
 dd BBf3_452 + 0xabad1dea
 dd BBf3_453 + 0xabad1dea
 dd BBf3_454 + 0xabad1dea
 dd BBf3_455 + 0xabad1dea
 dd BBf3_456 + 0xabad1dea
 dd BBf3_457 + 0xabad1dea
 dd BBf3_458 + 0xabad1dea
 dd BBf3_459 + 0xabad1dea
 dd BBf3_460 + 0xabad1dea
 dd BBf3_461 + 0xabad1dea
 dd BBf3_462 + 0xabad1dea
 dd BBf3_463 + 0xabad1dea
 dd BBf3_464 + 0xabad1dea
 dd BBf3_465 + 0xabad1dea
 dd BBf3_466 + 0xabad1dea
 dd BBf3_467 + 0xabad1dea
 dd BBf3_468 + 0xabad1dea
 dd BBf3_469 + 0xabad1dea
 dd BBf3_470 + 0xabad1dea
 dd BBf3_471 + 0xabad1dea
 dd BBf3_472 + 0xabad1dea
 dd BBf3_473 + 0xabad1dea
 dd BBf3_474 + 0xabad1dea
 dd BBf3_475 + 0xabad1dea
 dd BBf3_476 + 0xabad1dea
 dd BBf3_477 + 0xabad1dea
 dd BBf3_478 + 0xabad1dea
 dd BBf3_479 + 0xabad1dea
 dd BBf3_480 + 0xabad1dea
 dd BBf3_481 + 0xabad1dea
 dd BBf3_482 + 0xabad1dea
 dd BBf3_483 + 0xabad1dea
 dd BBf3_484 + 0xabad1dea
 dd BBf3_485 + 0xabad1dea
 dd BBf3_486 + 0xabad1dea
 dd BBf3_487 + 0xabad1dea
 dd BBf3_488 + 0xabad1dea
 dd BBf3_489 + 0xabad1dea
 dd BBf3_490 + 0xabad1dea
 dd BBf3_491 + 0xabad1dea
 dd BBf3_492 + 0xabad1dea
 dd BBf3_493 + 0xabad1dea
 dd BBf3_494 + 0xabad1dea
 dd BBf3_495 + 0xabad1dea
 dd BBf3_496 + 0xabad1dea
 dd BBf3_497 + 0xabad1dea
 dd BBf3_498 + 0xabad1dea
 dd BBf3_499 + 0xabad1dea
 dd BBf3_500 + 0xabad1dea
 dd BBf3_501 + 0xabad1dea
 dd BBf3_502 + 0xabad1dea
 dd BBf3_503 + 0xabad1dea
 dd BBf3_504 + 0xabad1dea
 dd BBf3_505 + 0xabad1dea
 dd BBf3_506 + 0xabad1dea
 dd BBf3_507 + 0xabad1dea
 dd BBf3_508 + 0xabad1dea
 dd BBf3_509 + 0xabad1dea
 dd BBf3_510 + 0xabad1dea
 dd BBf3_511 + 0xabad1dea
 dd BBf3_512 + 0xabad1dea
 dd BBf3_513 + 0xabad1dea
 dd BBf3_514 + 0xabad1dea
 dd BBf3_515 + 0xabad1dea
 dd BBf3_516 + 0xabad1dea
 dd BBf3_517 + 0xabad1dea
 dd BBf3_518 + 0xabad1dea
 dd BBf3_519 + 0xabad1dea
 dd BBf3_520 + 0xabad1dea
 dd BBf3_521 + 0xabad1dea
 dd BBf3_522 + 0xabad1dea
 dd BBf3_523 + 0xabad1dea
 dd BBf3_524 + 0xabad1dea
 dd BBf3_525 + 0xabad1dea
 dd BBf3_526 + 0xabad1dea
 dd BBf3_527 + 0xabad1dea
 dd BBf3_528 + 0xabad1dea
 dd BBf3_529 + 0xabad1dea
 dd BBf3_530 + 0xabad1dea
 dd BBf3_531 + 0xabad1dea
 dd BBf3_532 + 0xabad1dea
 dd BBf3_533 + 0xabad1dea
 dd BBf3_534 + 0xabad1dea
 dd BBf3_535 + 0xabad1dea
 dd BBf3_536 + 0xabad1dea
 dd BBf3_537 + 0xabad1dea
 dd BBf3_538 + 0xabad1dea
 dd BBf3_539 + 0xabad1dea
 dd BBf3_540 + 0xabad1dea
 dd BBf3_541 + 0xabad1dea
 dd BBf3_542 + 0xabad1dea
 dd BBf3_543 + 0xabad1dea
 dd BBf3_544 + 0xabad1dea
 dd BBf3_545 + 0xabad1dea
 dd BBf3_546 + 0xabad1dea
 dd BBf3_547 + 0xabad1dea
 dd BBf3_548 + 0xabad1dea
 dd BBf3_549 + 0xabad1dea
 dd BBf3_550 + 0xabad1dea
 dd BBf3_551 + 0xabad1dea
 dd BBf3_552 + 0xabad1dea
 dd BBf3_553 + 0xabad1dea
 dd BBf3_554 + 0xabad1dea
 dd BBf3_555 + 0xabad1dea
 dd BBf3_556 + 0xabad1dea
 dd BBf3_557 + 0xabad1dea
 dd BBf3_558 + 0xabad1dea
 dd BBf3_559 + 0xabad1dea
 dd BBf3_560 + 0xabad1dea
 dd BBf3_561 + 0xabad1dea
 dd BBf3_562 + 0xabad1dea
 dd BBf3_563 + 0xabad1dea
 dd BBf3_564 + 0xabad1dea
 dd BBf3_565 + 0xabad1dea
 dd BBf3_566 + 0xabad1dea
 dd BBf3_567 + 0xabad1dea
 dd BBf3_568 + 0xabad1dea
 dd BBf3_569 + 0xabad1dea
 dd BBf3_570 + 0xabad1dea
 dd BBf3_571 + 0xabad1dea
 dd BBf3_572 + 0xabad1dea
 dd BBf3_573 + 0xabad1dea
 dd BBf3_574 + 0xabad1dea
 dd BBf3_575 + 0xabad1dea
 dd BBf3_576 + 0xabad1dea
 dd BBf3_577 + 0xabad1dea
 dd BBf3_578 + 0xabad1dea
 dd BBf3_579 + 0xabad1dea
 dd BBf3_580 + 0xabad1dea
 dd BBf3_581 + 0xabad1dea
 dd BBf3_582 + 0xabad1dea
 dd BBf3_583 + 0xabad1dea
 dd BBf3_584 + 0xabad1dea
 dd BBf3_585 + 0xabad1dea
 dd BBf3_586 + 0xabad1dea
 dd BBf3_587 + 0xabad1dea
 dd BBf3_588 + 0xabad1dea
 dd BBf3_589 + 0xabad1dea
 dd BBf3_590 + 0xabad1dea
 dd BBf3_591 + 0xabad1dea
 dd BBf3_592 + 0xabad1dea
 dd BBf3_593 + 0xabad1dea
 dd BBf3_594 + 0xabad1dea
 dd BBf3_595 + 0xabad1dea
 dd BBf3_596 + 0xabad1dea
 dd BBf3_597 + 0xabad1dea
 dd BBf3_598 + 0xabad1dea
 dd BBf3_599 + 0xabad1dea
 dd BBf3_600 + 0xabad1dea
 dd BBf3_601 + 0xabad1dea
 dd BBf3_602 + 0xabad1dea
 dd BBf3_603 + 0xabad1dea
 dd BBf3_604 + 0xabad1dea
 dd BBf3_605 + 0xabad1dea
 dd BBf3_606 + 0xabad1dea
 dd BBf3_607 + 0xabad1dea
 dd BBf3_608 + 0xabad1dea
 dd BBf3_609 + 0xabad1dea
 dd BBf3_610 + 0xabad1dea
; ----- End of func 0 -----

func_4:
 PCJMP_f4:
  cmp eax, 1
  je _PCJMP_f4
  ret
 _PCJMP_f4:
  pop eax
  mov eax, [JMP_TABLE_f4 + 4*edi]
  sub eax, 0xabad1dea
  jz PIX_START_f4
  jmp eax
PIX_START_f4:
 mov esi, [PIX_TABLE_f4 + 4*esi]
 jmp esi
PIXf4_0_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_0: mov edi, 0x261
 mov eax, 1
 call PCJMP_f4
BBf4_1: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x34
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_0_1
PIXf4_1_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_1_1
PIXf4_2_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x16
 mov eax, 1
 call PCJMP_f4
BBf4_28: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcb
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 jmp PIXf4_2_1
PIXf4_3_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_3_1
PIXf4_4_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_77: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_4_1
PIXf4_5_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_102: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 jmp PIXf4_5_1
PIXf4_6_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_6_1
PIXf4_7_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
BBf4_137: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_7_1
PIXf4_8_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov edi, 0x98
 mov eax, 1
 call PCJMP_f4
BBf4_151: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_8_1
PIXf4_9_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_172: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x39
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_9_1
PIXf4_10_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f4
BBf4_199: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_b4], 0x1
 mov edi, 0xca
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_200: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_10_1
PIXf4_11_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_220: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_11_1
PIXf4_12_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_12_1
PIXf4_13_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x10f
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_270: mov edi, 0x117
 mov eax, 1
 call PCJMP_f4
BBf4_271: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 jmp PIXf4_13_1
PIXf4_14_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 jmp PIXf4_14_1
PIXf4_15_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_298: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x12e
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_299: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_15_1
PIXf4_16_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f4
BBf4_311: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 jmp PIXf4_16_1
PIXf4_17_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_322: mov edi, 0x144
 mov eax, 1
 call PCJMP_f4
BBf4_323: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f4
BBf4_324: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_17_1
PIXf4_18_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_18_1
PIXf4_19_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_353: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_19_1
PIXf4_20_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_376: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_20_1
PIXf4_21_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_395: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_21_1
PIXf4_22_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_414: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 jmp PIXf4_22_1
PIXf4_23_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_439: mov edi, 0x1b2
 mov eax, 1
 call PCJMP_f4
BBf4_440: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_23_1
PIXf4_24_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_454: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_24_1
PIXf4_25_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_25_1
PIXf4_26_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1e7
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_487: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0xa
 jmp PIXf4_26_1
PIXf4_27_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_27_1
PIXf4_28_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20f
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x168
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_28_1
PIXf4_29_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x4
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_29_1
PIXf4_30_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x229
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_30_1
PIXf4_31_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 jmp PIXf4_31_1
PIXf4_32_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_32_1
PIXf4_0_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffd0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 jmp PIXf4_0_2
PIXf4_1_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
BBf4_11: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_1_2
PIXf4_2_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_29: mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffcd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_2_2
PIXf4_3_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_3_2
PIXf4_4_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_78: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 jmp PIXf4_4_2
PIXf4_5_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x5e
 mov eax, 1
 call PCJMP_f4
BBf4_103: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_5_2
PIXf4_6_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_114: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_6_2
PIXf4_7_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_7_2
PIXf4_8_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x61
 mov eax, dword [reg_a4]
 jmp PIXf4_8_2
PIXf4_9_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_173: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_9_2
PIXf4_10_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xc9
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f4
BBf4_201: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_10_2
PIXf4_11_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_221: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 jmp PIXf4_11_2
PIXf4_12_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_12_2
PIXf4_13_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x111
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_272: mov edi, 0x116
 mov eax, 1
 call PCJMP_f4
BBf4_273: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_13_2
PIXf4_14_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_14_2
PIXf4_15_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x3
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_15_2
PIXf4_16_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_16_2
PIXf4_17_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x146
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_325: mov edi, 0x152
 mov eax, 1
 call PCJMP_f4
BBf4_326: mov dword [reg_a4], 0x0
 jmp PIXf4_17_2
PIXf4_18_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_18_2
PIXf4_19_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x163
 cmp dword [reg_a4], 0x0
 jmp PIXf4_19_2
PIXf4_20_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_20_2
PIXf4_21_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x18d
 cmp dword [reg_a4], 0x0
 jmp PIXf4_21_2
PIXf4_22_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_415: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
BBf4_416: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x1a2
 jmp PIXf4_22_2
PIXf4_23_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1ba
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_441: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_23_2
PIXf4_24_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_24_2
PIXf4_25_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_25_2
PIXf4_26_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, 0x4
 mov ecx, reg_a4
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_26_2
PIXf4_27_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_27_2
PIXf4_28_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_527: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffda
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 cmp dword [reg_a4], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x214
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_28_2
PIXf4_29_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_29_2
PIXf4_30_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f4
BBf4_553: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_30_2
PIXf4_31_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x244
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_575: mov dword [reg_b4], 0x140
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x241
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_576: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_31_2
PIXf4_32_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x25a
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_599: mov eax, dword [reg_bp4]
 jmp PIXf4_32_2
PIXf4_0_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_0_3
PIXf4_1_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xd
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_12: mov edi, 0xe
 mov eax, 1
 call PCJMP_f4
BBf4_13: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_1_3
PIXf4_2_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_2_3
PIXf4_3_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x32
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 jmp PIXf4_3_3
PIXf4_4_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sub dword [reg_sp4], 0x5
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_79: mov eax, dword [reg_bp4]
 jmp PIXf4_4_3
PIXf4_5_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_3
PIXf4_6_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x6a
 mov eax, 1
 call PCJMP_f4
BBf4_115: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_6_3
PIXf4_7_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x8a
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f4
BBf4_138: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 jmp PIXf4_7_3
PIXf4_8_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
BBf4_152: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_8_3
PIXf4_9_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_174: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_175: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_9_3
PIXf4_10_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_10_3
PIXf4_11_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_222: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_11_3
PIXf4_12_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x2
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_12_3
PIXf4_13_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_13_3
PIXf4_14_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_14_3
PIXf4_15_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_15_3
PIXf4_16_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_16_3
PIXf4_17_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_17_3
PIXf4_18_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_18_3
PIXf4_19_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_19_3
PIXf4_20_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_20_3
PIXf4_21_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_21_3
PIXf4_22_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_22_3
PIXf4_23_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_23_3
PIXf4_24_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_24_3
PIXf4_25_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_25_3
PIXf4_26_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_488: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x26
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_26_3
PIXf4_27_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x203
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x88
 mov eax, 1
 jmp PIXf4_27_3
PIXf4_28_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_528: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_28_3
PIXf4_29_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_29_3
PIXf4_30_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_554: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_30_3
PIXf4_31_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_31_3
PIXf4_32_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x259
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_600: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f4
BBf4_601: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 jmp PIXf4_32_3
PIXf4_0_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_2: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_0_4
PIXf4_1_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x9
 mov eax, 1
 call PCJMP_f4
BBf4_14: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_1_4
PIXf4_2_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_2_4
PIXf4_3_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_49: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_3_4
PIXf4_4_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x18
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 jmp PIXf4_4_4
PIXf4_5_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_4
PIXf4_6_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_116: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_6_4
PIXf4_7_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_7_4
PIXf4_8_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_8_4
PIXf4_9_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_9_4
PIXf4_10_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_10_4
PIXf4_11_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x7
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_11_4
PIXf4_12_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x10
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_248: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_12_4
PIXf4_13_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_13_4
PIXf4_14_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_14_4
PIXf4_15_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_15_4
PIXf4_16_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_16_4
PIXf4_17_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_17_4
PIXf4_18_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_18_4
PIXf4_19_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sete  al
 jmp PIXf4_19_4
PIXf4_20_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_20_4
PIXf4_21_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_21_4
PIXf4_22_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_22_4
PIXf4_23_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_23_4
PIXf4_24_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_24_4
PIXf4_25_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1d2
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_465: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_25_4
PIXf4_26_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_26_4
PIXf4_27_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_515: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f4
BBf4_516: mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_27_4
PIXf4_28_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffda
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 jmp PIXf4_28_4
PIXf4_29_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x21c
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f4
BBf4_540: mov eax, dword [reg_b4]
 jmp PIXf4_29_4
PIXf4_30_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x22b
 jmp PIXf4_30_4
PIXf4_31_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_577: mov eax, 0x3
 mov ecx, reg_a4
 int 0x80
 mov edi, 0x243
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_578: mov dword [reg_a4], 0xffffff
BBf4_579: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_31_4
PIXf4_32_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_602: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_32_4
PIXf4_0_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe8
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_0_5
PIXf4_1_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_1_5
PIXf4_2_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1f
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_30: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_2_5
PIXf4_3_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x33
 mov eax, 1
 call PCJMP_f4
BBf4_50: mov dword [reg_a4], 0x0
BBf4_51: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_3_5
PIXf4_4_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x51
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_80: mov edi, 0x52
 mov eax, 1
 call PCJMP_f4
BBf4_81: mov edi, 0x5b
 mov eax, 1
 call PCJMP_f4
BBf4_82: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_4_5
PIXf4_5_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_5
PIXf4_6_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_117: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x4
 jmp PIXf4_6_5
PIXf4_7_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_7_5
PIXf4_8_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x10
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_8_5
PIXf4_9_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0xb0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f4
BBf4_176: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_b4], 0x1
 mov edi, 0xb4
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_177: mov dword [reg_a4], 0x61
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_9_5
PIXf4_10_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_10_5
PIXf4_11_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xe0
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_223: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_11_5
PIXf4_12_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xfd
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_249: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_12_5
PIXf4_13_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_13_5
PIXf4_14_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_14_5
PIXf4_15_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x12c
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f4
BBf4_300: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 jmp PIXf4_15_5
PIXf4_16_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x138
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f4
BBf4_312: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_16_5
PIXf4_17_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_327: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_17_5
PIXf4_18_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x153
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_18_5
PIXf4_19_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_354: mov edi, 0x164
 mov eax, 1
 call PCJMP_f4
BBf4_355: mov edi, 0x166
 mov eax, 1
 call PCJMP_f4
BBf4_356: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_19_5
PIXf4_20_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_20_5
PIXf4_21_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_21_5
PIXf4_22_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_417: mov edi, 0x1a3
 mov eax, 1
 call PCJMP_f4
BBf4_418: mov edi, 0x1a6
 mov eax, 1
 call PCJMP_f4
BBf4_419: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_22_5
PIXf4_23_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_23_5
PIXf4_24_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_24_5
PIXf4_25_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_25_5
PIXf4_26_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_489: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x1eb
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_490: mov edi, 0x1ec
 mov eax, 1
 call PCJMP_f4
BBf4_491: mov edi, 0x216
 jmp PIXf4_26_5
PIXf4_27_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 jmp PIXf4_27_5
PIXf4_28_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x212
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_529: mov dword [reg_a4], 0x1
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 jmp PIXf4_28_5
PIXf4_29_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_29_5
PIXf4_30_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f4
BBf4_555: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_30_5
PIXf4_31_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_31_5
PIXf4_32_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_32_5
PIXf4_0_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 jmp PIXf4_0_6
PIXf4_1_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_1_6
PIXf4_2_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe5
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_2_6
PIXf4_3_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 jmp PIXf4_3_6
PIXf4_4_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_4_6
PIXf4_5_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_6
PIXf4_6_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 jmp PIXf4_6_6
PIXf4_7_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_7_6
PIXf4_8_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x99
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f4
BBf4_153: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 jmp PIXf4_8_6
PIXf4_9_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 jmp PIXf4_9_6
PIXf4_10_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_10_6
PIXf4_11_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_224: mov eax, dword [reg_b4]
 jmp PIXf4_11_6
PIXf4_12_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xfb
 jmp PIXf4_12_6
PIXf4_13_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_13_6
PIXf4_14_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_14_6
PIXf4_15_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_15_6
PIXf4_16_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 jmp PIXf4_16_6
PIXf4_17_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x149
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_328: mov edi, 0x14a
 mov eax, 1
 call PCJMP_f4
BBf4_329: mov edi, 0x14c
 mov eax, 1
 call PCJMP_f4
BBf4_330: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 jmp PIXf4_17_6
PIXf4_18_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f4
BBf4_339: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_18_6
PIXf4_19_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 jmp PIXf4_19_6
PIXf4_20_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_20_6
PIXf4_21_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_21_6
PIXf4_22_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1a5
 jmp PIXf4_22_6
PIXf4_23_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_442: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_23_6
PIXf4_24_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_24_6
PIXf4_25_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_25_6
PIXf4_26_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_492: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x25
 mov eax, dword [reg_a4]
 jmp PIXf4_26_6
PIXf4_27_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_27_6
PIXf4_28_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_28_6
PIXf4_29_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_541: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_29_6
PIXf4_30_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_556: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 jmp PIXf4_30_6
PIXf4_31_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x140
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_31_6
PIXf4_32_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_32_6
PIXf4_0_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_0_7
PIXf4_1_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_1_7
PIXf4_2_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_2_7
PIXf4_3_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x35
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_52: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_3_7
PIXf4_4_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_4_7
PIXf4_5_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_7
PIXf4_6_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_118: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x18
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_6_7
PIXf4_7_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x8b
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_7_7
PIXf4_8_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x9b
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_154: mov edi, 0x94
 mov eax, 1
 call PCJMP_f4
BBf4_155: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_8_7
PIXf4_9_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xb3
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_178: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x66
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_9_7
PIXf4_10_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_10_7
PIXf4_11_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xe2
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_225: mov dword [reg_a4], 0x24
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_11_7
PIXf4_12_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_250: mov dword [reg_a4], 0x8
 mov edi, 0xfc
 mov eax, 1
 call PCJMP_f4
BBf4_251: mov dword [reg_a4], 0xa
BBf4_252: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_253: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x101
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_12_7
PIXf4_13_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_13_7
PIXf4_14_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_14_7
PIXf4_15_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_15_7
PIXf4_16_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_16_7
PIXf4_17_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_17_7
PIXf4_18_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x154
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f4
BBf4_340: mov eax, dword [reg_b4]
 jmp PIXf4_18_7
PIXf4_19_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_19_7
PIXf4_20_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_20_7
PIXf4_21_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_21_7
PIXf4_22_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_420: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_22_7
PIXf4_23_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_23_7
PIXf4_24_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 jmp PIXf4_24_7
PIXf4_25_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_25_7
PIXf4_26_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1f2
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_493: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 cmp dword [reg_a4], 0x0
 sete  al
 movzx eax, al
 jmp PIXf4_26_7
PIXf4_27_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_27_7
PIXf4_28_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 jmp PIXf4_28_7
PIXf4_29_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_542: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x3
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_29_7
PIXf4_30_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_557: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 jmp PIXf4_30_7
PIXf4_31_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_580: mov dword [reg_b4], 0x13f
 jmp PIXf4_31_7
PIXf4_32_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 jmp PIXf4_32_7
PIXf4_0_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 jmp PIXf4_0_8
PIXf4_1_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_15: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_1_8
PIXf4_2_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_2_8
PIXf4_3_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_3_8
PIXf4_4_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_4_8
PIXf4_5_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_8
PIXf4_6_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x78
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_119: mov edi, 0x79
 mov eax, 1
 call PCJMP_f4
BBf4_120: mov edi, 0x7f
 mov eax, 1
 call PCJMP_f4
BBf4_121: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_6_8
PIXf4_7_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f4
BBf4_139: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_7_8
PIXf4_8_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x9d
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_156: mov dword [reg_a4], 0x2d
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_8_8
PIXf4_9_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_179: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_180: mov eax, dword [reg_b4]
 jmp PIXf4_9_8
PIXf4_10_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_10_8
PIXf4_11_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_226: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0xe6
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_227: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 jmp PIXf4_11_8
PIXf4_12_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_254: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_12_8
PIXf4_13_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_13_8
PIXf4_14_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_14_8
PIXf4_15_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_15_8
PIXf4_16_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_16_8
PIXf4_17_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_17_8
PIXf4_18_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_18_8
PIXf4_19_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_19_8
PIXf4_20_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_20_8
PIXf4_21_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_21_8
PIXf4_22_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_421: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 jmp PIXf4_22_8
PIXf4_23_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_443: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_23_8
PIXf4_24_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1ca
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_455: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_24_8
PIXf4_25_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_25_8
PIXf4_26_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov edi, 0x1f1
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_494: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 jmp PIXf4_26_8
PIXf4_27_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_27_8
PIXf4_28_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_28_8
PIXf4_29_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 jmp PIXf4_29_8
PIXf4_30_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_558: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_30_8
PIXf4_31_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_31_8
PIXf4_32_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_32_8
PIXf4_0_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffce
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_0_9
PIXf4_1_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x35
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_1_9
PIXf4_2_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffcd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_2_9
PIXf4_3_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x36
 mov eax, 1
 call PCJMP_f4
BBf4_53: mov dword [reg_a4], 0x0
BBf4_54: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 jmp PIXf4_3_9
PIXf4_4_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x54
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_83: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_4_9
PIXf4_5_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_9
PIXf4_6_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_6_9
PIXf4_7_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x8d
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_140: mov edi, 0x89
 mov eax, 1
 call PCJMP_f4
BBf4_141: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_7_9
PIXf4_8_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_8_9
PIXf4_9_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xb8
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_181: mov dword [reg_a4], 0x41
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_9_9
PIXf4_10_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_10_9
PIXf4_11_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 jmp PIXf4_11_9
PIXf4_12_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x100
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_255: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_12_9
PIXf4_13_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_13_9
PIXf4_14_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_14_9
PIXf4_15_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x12d
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f4
BBf4_301: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_15_9
PIXf4_16_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_16_9
PIXf4_17_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_17_9
PIXf4_18_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_18_9
PIXf4_19_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_19_9
PIXf4_20_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_20_9
PIXf4_21_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_21_9
PIXf4_22_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x1a0
 mov eax, 1
 call PCJMP_f4
BBf4_422: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_22_9
PIXf4_23_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_23_9
PIXf4_24_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_24_9
PIXf4_25_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_25_9
PIXf4_26_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_26_9
PIXf4_27_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x205
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x92
 mov eax, 1
 jmp PIXf4_27_9
PIXf4_28_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x214
 mov eax, 1
 call PCJMP_f4
BBf4_530: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_28_9
PIXf4_29_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_29_9
PIXf4_30_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_559: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_b4], 0x13c
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_30_9
PIXf4_31_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov dword [reg_b4], 0x13f
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_31_9
PIXf4_32_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x25c
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 jmp PIXf4_32_9
PIXf4_0_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffce
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_0_10
PIXf4_1_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x11
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_16: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_1_10
PIXf4_2_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_2_10
PIXf4_3_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0x38
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_55: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_56: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x3a
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_3_10
PIXf4_4_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 jmp PIXf4_4_10
PIXf4_5_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_10
PIXf4_6_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_6_10
PIXf4_7_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_7_10
PIXf4_8_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_8_10
PIXf4_9_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xb7
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_182: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_9_10
PIXf4_10_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_10_10
PIXf4_11_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov edi, 0xe5
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_228: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 jmp PIXf4_11_10
PIXf4_12_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_12_10
PIXf4_13_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_13_10
PIXf4_14_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_14_10
PIXf4_15_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_15_10
PIXf4_16_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_16_10
PIXf4_17_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_17_10
PIXf4_18_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_18_10
PIXf4_19_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_357: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_19_10
PIXf4_20_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_20_10
PIXf4_21_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sete  al
 jmp PIXf4_21_10
PIXf4_22_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_423: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_424: mov eax, dword [reg_sp4]
 jmp PIXf4_22_10
PIXf4_23_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_23_10
PIXf4_24_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 jmp PIXf4_24_10
PIXf4_25_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_25_10
PIXf4_26_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1f0
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_495: mov dword [reg_a4], 0x1
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_26_10
PIXf4_27_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_517: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f4
BBf4_518: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 jmp PIXf4_27_10
PIXf4_28_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_28_10
PIXf4_29_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x21f
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x218
 mov eax, 1
 call PCJMP_f4
BBf4_543: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_29_10
PIXf4_30_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_560: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 jmp PIXf4_30_10
PIXf4_31_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_581: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_31_10
PIXf4_32_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_603: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f4
BBf4_604: mov edi, 0x25e
 mov eax, 1
 call PCJMP_f4
BBf4_605: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f4
BBf4_606: mov edi, 0x254
 mov eax, 1
 call PCJMP_f4
BBf4_607: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 jmp PIXf4_32_10
PIXf4_0_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0x4
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_3: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffce
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_0_11
PIXf4_1_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_1_11
PIXf4_2_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_2_11
PIXf4_3_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_57: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_3_11
PIXf4_4_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x55
 mov eax, 1
 call PCJMP_f4
BBf4_84: mov dword [reg_a4], 0x0
BBf4_85: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 jmp PIXf4_4_11
PIXf4_5_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_104: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_5_11
PIXf4_6_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_6_11
PIXf4_7_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_142: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 jmp PIXf4_7_11
PIXf4_8_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
BBf4_157: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 jmp PIXf4_8_11
PIXf4_9_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x46
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
 jmp PIXf4_9_11
PIXf4_10_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_202: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_10_11
PIXf4_11_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_229: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 jmp PIXf4_11_11
PIXf4_12_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 jmp PIXf4_12_11
PIXf4_13_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x114
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_274: mov dword [reg_a4], 0x1
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_13_11
PIXf4_14_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x11f
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f4
BBf4_287: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_14_11
PIXf4_15_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_15_11
PIXf4_16_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_16_11
PIXf4_17_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_17_11
PIXf4_18_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_18_11
PIXf4_19_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_19_11
PIXf4_20_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x174
 mov eax, 1
 jmp PIXf4_20_11
PIXf4_21_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_396: mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_397: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 jmp PIXf4_21_11
PIXf4_22_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_22_11
PIXf4_23_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_23_11
PIXf4_24_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x1c9
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_456: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_457: mov edi, 0x1cb
 jmp PIXf4_24_11
PIXf4_25_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_466: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_25_11
PIXf4_26_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_26_11
PIXf4_27_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f4
BBf4_519: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 jmp PIXf4_27_11
PIXf4_28_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 jmp PIXf4_28_11
PIXf4_29_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_29_11
PIXf4_30_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_561: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_30_11
PIXf4_31_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_582: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_31_11
PIXf4_32_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_32_11
PIXf4_0_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 jmp PIXf4_0_12
PIXf4_1_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_17: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_1_12
PIXf4_2_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_31: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_2_12
PIXf4_3_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_58: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_3_12
PIXf4_4_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_4_12
PIXf4_5_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_105: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 jmp PIXf4_5_12
PIXf4_6_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_6_12
PIXf4_7_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_143: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x20
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_7_12
PIXf4_8_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_158: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_159: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_8_12
PIXf4_9_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_183: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_184: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_9_12
PIXf4_10_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_203: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_204: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_10_12
PIXf4_11_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_230: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_11_12
PIXf4_12_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_256: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_12_12
PIXf4_13_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_13_12
PIXf4_14_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_288: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_14_12
PIXf4_15_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_15_12
PIXf4_16_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x139
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f4
BBf4_313: mov eax, dword [reg_b4]
 jmp PIXf4_16_12
PIXf4_17_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_17_12
PIXf4_18_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x155
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f4
BBf4_341: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_18_12
PIXf4_19_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x161
 mov eax, 1
 call PCJMP_f4
BBf4_358: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_19_12
PIXf4_20_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_377: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 jmp PIXf4_20_12
PIXf4_21_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_21_12
PIXf4_22_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1a9
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x168
 mov eax, 1
 call PCJMP_f4
BBf4_425: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_22_12
PIXf4_23_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_23_12
PIXf4_24_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_458: mov edi, 0x1cc
 mov eax, 1
 call PCJMP_f4
BBf4_459: mov edi, 0x1c6
 mov eax, 1
 call PCJMP_f4
BBf4_460: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_24_12
PIXf4_25_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_25_12
PIXf4_26_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_26_12
PIXf4_27_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_27_12
PIXf4_28_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x213
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f4
BBf4_531: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 jmp PIXf4_28_12
PIXf4_29_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_544: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_545: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 jmp PIXf4_29_12
PIXf4_30_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_562: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_563: mov eax, dword [reg_sp4]
 jmp PIXf4_30_12
PIXf4_31_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x247
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f4
BBf4_583: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_31_12
PIXf4_32_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 jmp PIXf4_32_12
PIXf4_0_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_4: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x6
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_5: mov edi, 0x8
 mov eax, 1
 call PCJMP_f4
BBf4_6: mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffd0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_0_13
PIXf4_1_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x13
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_18: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_1_13
PIXf4_2_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x21
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_32: mov edi, 0x22
 mov eax, 1
 jmp PIXf4_2_13
PIXf4_3_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x2d
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_3_13
PIXf4_4_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x57
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_86: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_4_13
PIXf4_5_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_106: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_5_13
PIXf4_6_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_6_13
PIXf4_7_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 jmp PIXf4_7_13
PIXf4_8_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xc
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_8_13
PIXf4_9_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_185: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_186: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_9_13
PIXf4_10_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xcd
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_10_13
PIXf4_11_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_231: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_11_13
PIXf4_12_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffff9
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_257: mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_12_13
PIXf4_13_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x113
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f4
BBf4_275: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 jmp PIXf4_13_13
PIXf4_14_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_289: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_14_13
PIXf4_15_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_15_13
PIXf4_16_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_16_13
PIXf4_17_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_17_13
PIXf4_18_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_18_13
PIXf4_19_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_359: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_360: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_19_13
PIXf4_20_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_378: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_379: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_20_13
PIXf4_21_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_21_13
PIXf4_22_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 jmp PIXf4_22_13
PIXf4_23_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_23_13
PIXf4_24_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_24_13
PIXf4_25_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1d4
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_467: mov edi, 0x1d6
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_25_13
PIXf4_26_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_26_13
PIXf4_27_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 jmp PIXf4_27_13
PIXf4_28_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
BBf4_532: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffda
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_28_13
PIXf4_29_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x101
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_29_13
PIXf4_30_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_30_13
PIXf4_31_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_584: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 jmp PIXf4_31_13
PIXf4_32_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_32_13
PIXf4_0_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 jmp PIXf4_0_14
PIXf4_1_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_19: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 jmp PIXf4_1_14
PIXf4_2_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_33: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_2_14
PIXf4_3_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_59: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 jmp PIXf4_3_14
PIXf4_4_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_4_14
PIXf4_5_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x18
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x6c
 jmp PIXf4_5_14
PIXf4_6_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x7b
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_122: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_6_14
PIXf4_7_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_7_14
PIXf4_8_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xa1
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_160: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_8_14
PIXf4_9_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x41
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_9_14
PIXf4_10_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f4
BBf4_205: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_b4], 0x1
 mov edi, 0xd1
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_206: mov dword [reg_a4], 0x20
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_10_14
PIXf4_11_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 jmp PIXf4_11_14
PIXf4_12_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_258: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x103
 jmp PIXf4_12_14
PIXf4_13_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_13_14
PIXf4_14_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_14_14
PIXf4_15_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_15_14
PIXf4_16_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_314: mov dword [reg_a4], 0x8000
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_16_14
PIXf4_17_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_17_14
PIXf4_18_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_18_14
PIXf4_19_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_361: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_19_14
PIXf4_20_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_380: mov eax, dword [reg_bp4]
 jmp PIXf4_20_14
PIXf4_21_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x184
 mov eax, 1
 call PCJMP_f4
BBf4_398: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_21_14
PIXf4_22_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1aa
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_22_14
PIXf4_23_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_444: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_23_14
PIXf4_24_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_24_14
PIXf4_25_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_468: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_25_14
PIXf4_26_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x1f1
 mov eax, 1
 call PCJMP_f4
BBf4_496: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_26_14
PIXf4_27_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_27_14
PIXf4_28_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_533: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_28_14
PIXf4_29_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x100
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_29_14
PIXf4_30_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_30_14
PIXf4_31_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_585: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_b4], 0x13f
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_31_14
PIXf4_32_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_608: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_32_14
PIXf4_0_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_0_15
PIXf4_1_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 jmp PIXf4_1_15
PIXf4_2_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x1d
 mov eax, 1
 call PCJMP_f4
BBf4_34: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_2_15
PIXf4_3_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_60: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_61: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_3_15
PIXf4_4_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x58
 mov eax, 1
 call PCJMP_f4
BBf4_87: mov dword [reg_a4], 0x0
BBf4_88: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_4_15
PIXf4_5_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_107: mov edi, 0x6d
 mov eax, 1
 call PCJMP_f4
BBf4_108: mov edi, 0x73
 mov eax, 1
 call PCJMP_f4
BBf4_109: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_5_15
PIXf4_6_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_6_15
PIXf4_7_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_7_15
PIXf4_8_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_161: mov eax, dword [reg_b4]
 jmp PIXf4_8_15
PIXf4_9_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xbc
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_187: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_9_15
PIXf4_10_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xd0
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 jmp PIXf4_10_15
PIXf4_11_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xe8
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_11_15
PIXf4_12_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f4
BBf4_259: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x105
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_260: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_12_15
PIXf4_13_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x116
 jmp PIXf4_13_15
PIXf4_14_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x122
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_14_15
PIXf4_15_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x12f
 mov eax, 1
 call PCJMP_f4
BBf4_302: mov edi, 0x130
 mov eax, 1
 jmp PIXf4_15_15
PIXf4_16_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_16_15
PIXf4_17_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_17_15
PIXf4_18_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_18_15
PIXf4_19_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_19_15
PIXf4_20_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x17e
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_381: mov edi, 0x17f
 mov eax, 1
 call PCJMP_f4
BBf4_382: mov edi, 0x181
 mov eax, 1
 call PCJMP_f4
BBf4_383: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 jmp PIXf4_20_15
PIXf4_21_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_399: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_400: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_21_15
PIXf4_22_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f4
BBf4_426: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_22_15
PIXf4_23_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_23_15
PIXf4_24_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_24_15
PIXf4_25_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1d6
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_469: mov edi, 0x1d0
 mov eax, 1
 call PCJMP_f4
BBf4_470: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 jmp PIXf4_25_15
PIXf4_26_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_26_15
PIXf4_27_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 jmp PIXf4_27_15
PIXf4_28_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x1e9
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_28_15
PIXf4_29_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffff00
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x222
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_29_15
PIXf4_30_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_30_15
PIXf4_31_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_31_15
PIXf4_32_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_609: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x141
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_32_15
PIXf4_0_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffd0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 jmp PIXf4_0_16
PIXf4_1_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov edi, 0x15
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_20: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_1_16
PIXf4_2_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_35: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 jmp PIXf4_2_16
PIXf4_3_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x5
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 jmp PIXf4_3_16
PIXf4_4_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x5a
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_4_16
PIXf4_5_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 jmp PIXf4_5_16
PIXf4_6_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x7c
 mov eax, 1
 call PCJMP_f4
BBf4_123: mov dword [reg_a4], 0x0
BBf4_124: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_6_16
PIXf4_7_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x90
 jmp PIXf4_7_16
PIXf4_8_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xa3
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_162: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xd
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_8_16
PIXf4_9_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x5a
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 jmp PIXf4_9_16
PIXf4_10_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_207: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x7f
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_10_16
PIXf4_11_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_232: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0xea
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_233: mov edi, 0xe7
 mov eax, 1
 call PCJMP_f4
BBf4_234: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_11_16
PIXf4_12_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 jmp PIXf4_12_16
PIXf4_13_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_276: mov dword [reg_a4], 0x1
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_13_16
PIXf4_14_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f4
BBf4_290: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 jmp PIXf4_14_16
PIXf4_15_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_303: mov edi, 0x128
 mov eax, 1
 call PCJMP_f4
BBf4_304: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_15_16
PIXf4_16_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov dword [reg_a4], 0x13b
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, dword [reg_c4]
 mov eax, 1
 call PCJMP_f4
BBf4_315: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_16_16
PIXf4_17_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_17_16
PIXf4_18_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x156
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x24
 mov eax, 1
 jmp PIXf4_18_16
PIXf4_19_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_19_16
PIXf4_20_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_20_16
PIXf4_21_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_401: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_21_16
PIXf4_22_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_22_16
PIXf4_23_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1c1
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_23_16
PIXf4_24_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 sub dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_24_16
PIXf4_25_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_471: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_25_16
PIXf4_26_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_26_16
PIXf4_27_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_27_16
PIXf4_28_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_534: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_28_16
PIXf4_29_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f4
BBf4_546: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffeff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_29_16
PIXf4_30_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x234
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f4
BBf4_564: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 jmp PIXf4_30_16
PIXf4_31_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x24b
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_586: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_31_16
PIXf4_32_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x262
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x225
 mov eax, 1
 call PCJMP_f4
BBf4_610: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, ebx
 mov ebx, 0x0
 jmp PIXf4_32_16
PIXf4_0_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 jmp PIXf4_0_17
PIXf4_1_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_21: mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_1_17
PIXf4_2_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_36: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_2_17
PIXf4_3_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_62: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x18
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_3_17
PIXf4_4_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_89: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_4_17
PIXf4_5_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_5_17
PIXf4_6_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x7e
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_125: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_6_17
PIXf4_7_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f4
BBf4_144: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_7_17
PIXf4_8_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_163: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xa5
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_164: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_8_17
PIXf4_9_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
BBf4_188: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_189: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_9_17
PIXf4_10_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_208: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_209: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_10_17
PIXf4_11_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x2d
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xec
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_235: mov dword [reg_a4], 0x1
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_11_17
PIXf4_12_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f4
BBf4_261: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x106
 mov eax, dword [reg_sp4]
 jmp PIXf4_12_17
PIXf4_13_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_13_17
PIXf4_14_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_291: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_292: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_14_17
PIXf4_15_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_305: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_306: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_15_17
PIXf4_16_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x13d
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_316: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_16_17
PIXf4_17_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_17_17
PIXf4_18_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_342: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_18_17
PIXf4_19_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x16b
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_362: mov edi, 0x16c
 mov eax, 1
 call PCJMP_f4
BBf4_363: mov edi, 0x16d
 mov eax, 1
 call PCJMP_f4
BBf4_364: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_19_17
PIXf4_20_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_384: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_20_17
PIXf4_21_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0x193
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_402: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 jmp PIXf4_21_17
PIXf4_22_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x1ab
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f4
BBf4_427: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_22_17
PIXf4_23_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_445: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_23_17
PIXf4_24_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 jmp PIXf4_24_17
PIXf4_25_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_472: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
BBf4_473: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_25_17
PIXf4_26_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_497: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 jmp PIXf4_26_17
PIXf4_27_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 jmp PIXf4_27_17
PIXf4_28_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_28_17
PIXf4_29_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffff00
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffeff
 jmp PIXf4_29_17
PIXf4_30_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_565: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_30_17
PIXf4_31_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x13f
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_587: mov dword [reg_a4], 0x0
 jmp PIXf4_31_17
PIXf4_32_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 int 0x80
BBf4_611: nop
 and dword [reg_d4], 0xffffff
 mov dword [reg_b4], eax
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 call PCJMP_f4
 mov eax, dword [mem + 4*eax]
 add dword [reg_b4], 0x2
 mov dword [reg_sp4], eax
 add dword [reg_sp4], 0x2
 mov edi, dword [reg_a4]
 mov eax, 1
 mov eax, dword [reg_a4]
 call PCJMP_f4
 cmp dword [reg_a4], 0x0
 mov dword [reg_a4], eax
 mov dword [reg_sp4], eax
 mov dword [reg_b4], eax
 mov dword [reg_a4], eax
 mov eax, dword [mem + 4*eax]
 mov ecx, dword [reg_d4]
 setb  al
 add dword [reg_sp4], 0x1
 mov eax, dword [mem + 4*eax]
 sete  al
 jmp PIXf4_32_17
PIXf4_0_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_0_18
PIXf4_1_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_22: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe5
 and dword [reg_a4], 0xffffff
 jmp PIXf4_1_18
PIXf4_2_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x26
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_37: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_2_18
PIXf4_3_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x40
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_63: mov edi, 0x41
 mov eax, 1
 call PCJMP_f4
BBf4_64: mov edi, 0x4c
 mov eax, 1
 call PCJMP_f4
BBf4_65: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_3_18
PIXf4_4_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_90: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_4_18
PIXf4_5_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_5_18
PIXf4_6_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 jmp PIXf4_6_18
PIXf4_7_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x91
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_145: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_7_18
PIXf4_8_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x9
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 jmp PIXf4_8_18
PIXf4_9_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_190: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 jmp PIXf4_9_18
PIXf4_10_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_210: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_10_18
PIXf4_11_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_11_18
PIXf4_12_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f4
BBf4_262: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x10c
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_263: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_12_18
PIXf4_13_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x115
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f4
BBf4_277: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_13_18
PIXf4_14_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_14_18
PIXf4_15_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_15_18
PIXf4_16_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_16_18
PIXf4_17_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_331: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_17_18
PIXf4_18_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x157
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f4
BBf4_343: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_18_18
PIXf4_19_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x169
 mov eax, 1
 call PCJMP_f4
BBf4_365: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_19_18
PIXf4_20_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_20_18
PIXf4_21_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_403: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0x195
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_404: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_21_18
PIXf4_22_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_428: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_22_18
PIXf4_23_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1bf
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_446: mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x1c0
 mov eax, 1
 call PCJMP_f4
BBf4_447: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_23_18
PIXf4_24_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_24_18
PIXf4_25_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_25_18
PIXf4_26_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_26_18
PIXf4_27_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_27_18
PIXf4_28_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_28_18
PIXf4_29_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_29_18
PIXf4_30_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 jmp PIXf4_30_18
PIXf4_31_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_31_18
PIXf4_32_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 cmp dword [reg_a4], 0x0
 mov ecx, dword [reg_d4]
 call PCJMP_f4
 mov eax, 1
 mov eax, dword [reg_bp4]
 mov eax, dword [reg_sp4]
 call PCJMP_f4
 mov eax, dword [mem + 4*eax]
 call PCJMP_f4
 mov ecx, dword [reg_d4]
 setb  al
 add dword [reg_b4], 0x2
 mov dword [reg_b4], eax
 add dword [reg_sp4], 0x1
 call PCJMP_f4
 cmp dword [reg_a4], eax
 and dword [reg_b4], 0xffffff
 mov eax, dword [mem + 4*eax]
 int 0x80
 mov eax, dword [reg_sp4]
 add dword [reg_d4], 0xffffff
 mov eax, dword [mem + 4*eax]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_32_18
PIXf4_0_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffd0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 jmp PIXf4_0_19
PIXf4_1_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_1_19
PIXf4_2_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_38: mov eax, dword [reg_bp4]
 jmp PIXf4_2_19
PIXf4_3_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_3_19
PIXf4_4_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x4f
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_4_19
PIXf4_5_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_19
PIXf4_6_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_6_19
PIXf4_7_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_7_19
PIXf4_8_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_8_19
PIXf4_9_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x61
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_9_19
PIXf4_10_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_211: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_10_19
PIXf4_11_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov edi, 0xee
 mov eax, 1
 call PCJMP_f4
BBf4_236: mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_11_19
PIXf4_12_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_12_19
PIXf4_13_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_13_19
PIXf4_14_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_14_19
PIXf4_15_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_15_19
PIXf4_16_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_16_19
PIXf4_17_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x147
 mov eax, 1
 call PCJMP_f4
BBf4_332: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 jmp PIXf4_17_19
PIXf4_18_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_344: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 jmp PIXf4_18_19
PIXf4_19_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_19_19
PIXf4_20_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_20_19
PIXf4_21_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_21_19
PIXf4_22_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_22_19
PIXf4_23_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_23_19
PIXf4_24_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_461: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_462: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_24_19
PIXf4_25_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_25_19
PIXf4_26_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov edi, 0x215
 mov eax, 1
 call PCJMP_f4
BBf4_498: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_26_19
PIXf4_27_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_27_19
PIXf4_28_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_28_19
PIXf4_29_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_29_19
PIXf4_30_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_30_19
PIXf4_31_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_588: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_31_19
PIXf4_32_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 add dword [reg_sp4], 0x1
 sete  al
 mov eax, dword [reg_b4]
 mov eax, 1
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_sp4], eax
 add dword [reg_b4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, dword [reg_a4]
 mov dword [reg_a4], eax
 call PCJMP_f4
 call PCJMP_f4
 call PCJMP_f4
 mov eax, dword [reg_bp4]
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 add dword [reg_b4], 0xffffff
 call PCJMP_f4
 add dword [reg_sp4], 0x1
 call PCJMP_f4
 mov eax, dword [reg_sp4]
 jmp PIXf4_32_19
PIXf4_0_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_0_20
PIXf4_1_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_1_20
PIXf4_2_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xfffffe
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_2_20
PIXf4_3_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 jmp PIXf4_3_20
PIXf4_4_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_91: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 jmp PIXf4_4_20
PIXf4_5_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_20
PIXf4_6_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_6_20
PIXf4_7_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_146: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 jmp PIXf4_7_20
PIXf4_8_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_8_20
PIXf4_9_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_9_20
PIXf4_10_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_212: mov eax, dword [reg_sp4]
 jmp PIXf4_10_20
PIXf4_11_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x2b
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_11_20
PIXf4_12_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_12_20
PIXf4_13_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_13_20
PIXf4_14_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_14_20
PIXf4_15_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_15_20
PIXf4_16_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_16_20
PIXf4_17_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_17_20
PIXf4_18_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_345: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_18_20
PIXf4_19_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_19_20
PIXf4_20_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_20_20
PIXf4_21_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 jmp PIXf4_21_20
PIXf4_22_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_429: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_22_20
PIXf4_23_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_23_20
PIXf4_24_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_24_20
PIXf4_25_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1e2
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_474: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_25_20
PIXf4_26_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x6c
 mov eax, dword [reg_a4]
 jmp PIXf4_26_20
PIXf4_27_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f4
BBf4_520: mov dword [reg_a4], 0x25
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_27_20
PIXf4_28_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_28_20
PIXf4_29_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 jmp PIXf4_29_20
PIXf4_30_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_30_20
PIXf4_31_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_589: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_31_20
PIXf4_32_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
 mov dword [mem + 4*ecx], eax
 mov eax, 1
 and dword [reg_sp4], 0xffffff
 and dword [reg_sp4], 0xffffff
 add dword [reg_b4], 0xffffdc
 mov dword [reg_d4], eax
 mov eax, dword [reg_sp4]
 call PCJMP_f4
 add dword [reg_b4], 0x3
 cmp dword [reg_a4], eax
 add dword [reg_d4], 0xffffff
 call PCJMP_f4
 mov dword [reg_bp4], eax
 call PCJMP_f4
 mov dword [reg_b4], eax
 call PCJMP_f4
 mov eax, 1
 mov eax, 1
 mov eax, dword [mem + 4*eax]
 call PCJMP_f4
 add dword [reg_d4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, dword [mem + 4*eax]
 mov eax, dword [reg_b4]
 jmp PIXf4_32_20
PIXf4_0_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_0_21
PIXf4_1_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_1_21
PIXf4_2_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x27
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_2_21
PIXf4_3_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_3_21
PIXf4_4_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_92: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_93: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_4_21
PIXf4_5_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_21
PIXf4_6_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_126: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 jmp PIXf4_6_21
PIXf4_7_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_7_21
PIXf4_8_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_8_21
PIXf4_9_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_9_21
PIXf4_10_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_b4], 0x148
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_10_21
PIXf4_11_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xee
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_237: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_11_21
PIXf4_12_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_12_21
PIXf4_13_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_278: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 jmp PIXf4_13_21
PIXf4_14_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x125
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f4
BBf4_293: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_14_21
PIXf4_15_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_15_21
PIXf4_16_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_16_21
PIXf4_17_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x14e
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_333: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x150
 jmp PIXf4_17_21
PIXf4_18_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_18_21
PIXf4_19_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_19_21
PIXf4_20_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_20_21
PIXf4_21_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
BBf4_405: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x197
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_406: mov edi, 0x198
 mov eax, 1
 call PCJMP_f4
BBf4_407: mov edi, 0x19d
 mov eax, 1
 call PCJMP_f4
BBf4_408: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_21_21
PIXf4_22_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 jmp PIXf4_22_21
PIXf4_23_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_23_21
PIXf4_24_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_24_21
PIXf4_25_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_475: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_25_21
PIXf4_26_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1f4
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_499: mov edi, 0x201
 mov eax, 1
 call PCJMP_f4
BBf4_500: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_26_21
PIXf4_27_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_27_21
PIXf4_28_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_28_21
PIXf4_29_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffff00
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_29_21
PIXf4_30_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_30_21
PIXf4_31_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, 0x4
 mov ecx, reg_a4
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_31_21
PIXf4_32_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 mov eax, 1
 mov ecx, dword [reg_d4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_d4], eax
 setne al
 call PCJMP_f4
 mov eax, 1
 call PCJMP_f4
 mov dword [reg_a4], eax
 mov ecx, dword [reg_d4]
 mov eax, 1
 mov eax, dword [reg_bp4]
 mov eax, dword [reg_a4]
 mov eax, dword [reg_b4]
 mov dword [reg_sp4], eax
 mov eax, dword [mem + 4*eax]
 mov eax, 1
 mov dword [reg_b4], eax
 sete  al
 cmp dword [reg_a4], 0x0
 mov eax, 1
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_d4]
 call PCJMP_f4
 jmp PIXf4_32_21
PIXf4_0_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffce
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_0_22
PIXf4_1_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffcd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_1_22
PIXf4_2_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f4
BBf4_39: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_2_22
PIXf4_3_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x43
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_66: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_3_22
PIXf4_4_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 jmp PIXf4_4_22
PIXf4_5_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_22
PIXf4_6_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_6_22
PIXf4_7_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_7_22
PIXf4_8_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_8_22
PIXf4_9_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xc0
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_191: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_9_22
PIXf4_10_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_b4], 0x148
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_10_22
PIXf4_11_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_11_22
PIXf4_12_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_12_22
PIXf4_13_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_13_22
PIXf4_14_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_14_22
PIXf4_15_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_15_22
PIXf4_16_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_16_22
PIXf4_17_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_334: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_17_22
PIXf4_18_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_18_22
PIXf4_19_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_19_22
PIXf4_20_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov edi, 0x17c
 mov eax, 1
 call PCJMP_f4
BBf4_385: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_20_22
PIXf4_21_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_21_22
PIXf4_22_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0x1af
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_430: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_22_22
PIXf4_23_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 jmp PIXf4_23_22
PIXf4_24_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_24_22
PIXf4_25_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_25_22
PIXf4_26_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x64
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1f6
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_26_22
PIXf4_27_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 jmp PIXf4_27_22
PIXf4_28_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_28_22
PIXf4_29_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_29_22
PIXf4_30_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_30_22
PIXf4_31_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_590: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_591: mov eax, dword [reg_sp4]
 jmp PIXf4_31_22
PIXf4_32_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov edi, 0x10c
 and dword [reg_d4], 0xffffff
 mov dword [reg_a4], eax
 mov dword [reg_a4], eax
 mov eax, dword [mem + 4*eax]
 mov edi, 0x64
 mov eax, 1
 mov eax, 1
 mov eax, 1
 mov eax, dword [reg_c4]
 call PCJMP_f4
 add dword [reg_b4], 0xffffff
 mov eax, dword [mem + 4*eax]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 add dword [reg_sp4], 0x1
 mov edi, dword [reg_a4]
 movzx eax, al
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 jmp PIXf4_32_22
PIXf4_0_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_7: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_0_23
PIXf4_1_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_1_23
PIXf4_2_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_40: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_2_23
PIXf4_3_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_3_23
PIXf4_4_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_94: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x18
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_4_23
PIXf4_5_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_23
PIXf4_6_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_6_23
PIXf4_7_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_7_23
PIXf4_8_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_8_23
PIXf4_9_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_9_23
PIXf4_10_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 jmp PIXf4_10_23
PIXf4_11_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_238: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_11_23
PIXf4_12_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_12_23
PIXf4_13_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_13_23
PIXf4_14_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_14_23
PIXf4_15_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_15_23
PIXf4_16_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x13e
 mov eax, 1
 call PCJMP_f4
BBf4_317: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f4
BBf4_318: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f4
BBf4_319: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_16_23
PIXf4_17_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x150
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_335: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_17_23
PIXf4_18_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_18_23
PIXf4_19_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_19_23
PIXf4_20_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_20_23
PIXf4_21_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x19a
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_409: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_21_23
PIXf4_22_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_22_23
PIXf4_23_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_23_23
PIXf4_24_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_24_23
PIXf4_25_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_25_23
PIXf4_26_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_501: mov edi, 0x202
 mov eax, 1
 call PCJMP_f4
BBf4_502: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x75
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_26_23
PIXf4_27_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_27_23
PIXf4_28_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_28_23
PIXf4_29_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x223
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_547: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffeff
 jmp PIXf4_29_23
PIXf4_30_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x237
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_566: mov edi, 0x238
 mov eax, 1
 call PCJMP_f4
BBf4_567: mov edi, 0x23a
 mov eax, 1
 call PCJMP_f4
BBf4_568: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_30_23
PIXf4_31_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_31_23
PIXf4_32_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 and dword [reg_b4], 0xffffff
 mov dword [reg_d4], eax
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 add dword [reg_sp4], 0x1
 mov dword [reg_b4], eax
 mov dword [reg_d4], eax
 sete  al
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 and dword [reg_d4], 0xffffff
 mov dword [reg_sp4], eax
 mov dword [reg_bp4], eax
 mov eax, dword [mem + 4*eax]
 add dword [reg_a4], eax
 mov eax, dword [reg_b4]
 call PCJMP_f4
 movzx eax, al
 mov dword [reg_b4], eax
 mov dword [reg_a4], eax
 add dword [reg_b4], 0xfffffe
 add dword [reg_sp4], 0x1
 mov eax, dword [reg_d4]
 mov dword [reg_b4], 0x1
 jmp PIXf4_32_23
PIXf4_0_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x2
 mov eax, 1
 call PCJMP_f4
BBf4_8: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcd
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_9: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffe8
 jmp PIXf4_0_24
PIXf4_1_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 jmp PIXf4_1_24
PIXf4_2_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_41: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xfffffe
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_2_24
PIXf4_3_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x44
 mov eax, 1
 call PCJMP_f4
BBf4_67: mov dword [reg_a4], 0x0
BBf4_68: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 jmp PIXf4_3_24
PIXf4_4_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x60
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_95: mov edi, 0x61
 mov eax, 1
 call PCJMP_f4
BBf4_96: mov edi, 0x67
 mov eax, 1
 call PCJMP_f4
BBf4_97: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_4_24
PIXf4_5_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_24
PIXf4_6_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov edi, 0x76
 mov eax, 1
 call PCJMP_f4
BBf4_127: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_6_24
PIXf4_7_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x94
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 jmp PIXf4_7_24
PIXf4_8_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_165: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xa7
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_166: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_8_24
PIXf4_9_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_9_24
PIXf4_10_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x148
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_b4], 0x148
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_10_24
PIXf4_11_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xf0
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_239: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_11_24
PIXf4_12_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_12_24
PIXf4_13_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_13_24
PIXf4_14_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_294: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_14_24
PIXf4_15_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_15_24
PIXf4_16_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_16_24
PIXf4_17_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_336: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_17_24
PIXf4_18_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_18_24
PIXf4_19_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_19_24
PIXf4_20_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_386: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_20_24
PIXf4_21_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 jmp PIXf4_21_24
PIXf4_22_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_431: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x1b1
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_432: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_22_24
PIXf4_23_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_448: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_23_24
PIXf4_24_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_24_24
PIXf4_25_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_25_24
PIXf4_26_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1f8
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_503: mov edi, 0x202
 mov eax, 1
 call PCJMP_f4
BBf4_504: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_26_24
PIXf4_27_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_27_24
PIXf4_28_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_28_24
PIXf4_29_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_548: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 jmp PIXf4_29_24
PIXf4_30_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_30_24
PIXf4_31_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, 0x4
 mov ecx, reg_a4
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_31_24
PIXf4_32_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 and dword [reg_sp4], 0xffffff
 and dword [reg_d4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, 1
 mov eax, 1
 mov eax, dword [reg_a4]
 mov eax, dword [reg_a4]
 add dword [reg_b4], 0xffffff
 mov edi, dword [reg_a4]
 add dword [reg_sp4], 0x1
 mov dword [reg_sp4], eax
 and dword [reg_b4], 0xffffff
 mov eax, 1
 mov dword [reg_a4], eax
 mov dword [reg_a4], eax
 mov dword [reg_a4], eax
 mov dword [reg_b4], eax
 mov eax, 1
 mov eax, dword [mem + 4*eax]
 mov dword [reg_d4], eax
 add dword [reg_b4], 0x4
 mov eax, dword [mem + 4*eax]
 mov dword [reg_b4], eax
 jmp PIXf4_32_24
PIXf4_0_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_0_25
PIXf4_1_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_1_25
PIXf4_2_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_2_25
PIXf4_3_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_3_25
PIXf4_4_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_4_25
PIXf4_5_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_25
PIXf4_6_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_128: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_129: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_6_25
PIXf4_7_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_147: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_7_25
PIXf4_8_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_8_25
PIXf4_9_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_9_25
PIXf4_10_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xd7
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_213: mov dword [reg_a4], 0x18
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_10_25
PIXf4_11_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x10
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_240: mov eax, dword [reg_b4]
 jmp PIXf4_11_25
PIXf4_12_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_12_25
PIXf4_13_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x102
 mov eax, 1
 call PCJMP_f4
BBf4_279: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_13_25
PIXf4_14_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_295: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 jmp PIXf4_14_25
PIXf4_15_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_15_25
PIXf4_16_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_16_25
PIXf4_17_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_17_25
PIXf4_18_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x15b
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_346: mov edi, 0x15c
 jmp PIXf4_18_25
PIXf4_19_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_19_25
PIXf4_20_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_20_25
PIXf4_21_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_410: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_21_25
PIXf4_22_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_433: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_22_25
PIXf4_23_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_23_25
PIXf4_24_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_24_25
PIXf4_25_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1dd
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_476: mov edi, 0x1de
 mov eax, 1
 call PCJMP_f4
BBf4_477: mov edi, 0x1e1
 mov eax, 1
 jmp PIXf4_25_25
PIXf4_26_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x78
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1fa
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_505: mov edi, 0x204
 mov eax, 1
 jmp PIXf4_26_25
PIXf4_27_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_27_25
PIXf4_28_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_28_25
PIXf4_29_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_549: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_29_25
PIXf4_30_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_30_25
PIXf4_31_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_592: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_593: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_31_25
PIXf4_32_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 call PCJMP_f4
 mov dword [reg_sp4], eax
 call PCJMP_f4
 mov dword [reg_b4], eax
 mov eax, dword [reg_a4]
 add dword [reg_b4], 0x2
 mov eax, 1
 add dword [reg_sp4], 0x1
 mov eax, dword [reg_a4]
 cmp dword [reg_a4], eax
 mov edi, dword [reg_a4]
 mov eax, dword [reg_bp4]
 add dword [reg_d4], 0xffffff
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov eax, dword [reg_b4]
 mov eax, dword [reg_a4]
 mov dword [reg_a4], 0x61
 mov eax, 1
 mov eax, dword [reg_sp4]
 call PCJMP_f4
 call PCJMP_f4
 mov eax, dword [reg_a4]
 call PCJMP_f4
 jmp PIXf4_32_25
PIXf4_0_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 jmp PIXf4_0_26
PIXf4_1_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_1_26
PIXf4_2_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x2a
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_2_26
PIXf4_3_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x46
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_69: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_3_26
PIXf4_4_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 jmp PIXf4_4_26
PIXf4_5_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_5_26
PIXf4_6_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_6_26
PIXf4_7_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_7_26
PIXf4_8_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_8_26
PIXf4_9_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x7a
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_192: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xc4
 cmp dword [reg_a4], 0x0
 setne al
 jmp PIXf4_9_26
PIXf4_10_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xd6
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_214: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_10_26
PIXf4_11_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xf2
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_241: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_11_26
PIXf4_12_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_12_26
PIXf4_13_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x11c
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 jmp PIXf4_13_26
PIXf4_14_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_296: mov dword [reg_a4], 0x30
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_14_26
PIXf4_15_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_307: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_308: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 jmp PIXf4_15_26
PIXf4_16_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_16_26
PIXf4_17_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_17_26
PIXf4_18_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_347: mov edi, 0x15e
 mov eax, 1
 call PCJMP_f4
BBf4_348: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_18_26
PIXf4_19_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_366: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_19_26
PIXf4_20_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_20_26
PIXf4_21_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_21_26
PIXf4_22_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_22_26
PIXf4_23_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_23_26
PIXf4_24_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_24_26
PIXf4_25_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_478: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_25_26
PIXf4_26_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_506: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x73
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_26_26
PIXf4_27_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_27_26
PIXf4_28_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_28_26
PIXf4_29_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf4_29_26
PIXf4_30_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, 0x4
 mov ecx, reg_a4
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_569: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 jmp PIXf4_30_26
PIXf4_31_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_31_26
PIXf4_32_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
 call PCJMP_f4
 mov dword [reg_sp4], eax
 mov eax, 1
 mov eax, dword [reg_sp4]
 sub dword [reg_a4], 0x1
 mov eax, dword [mem + 4*eax]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov dword [mem + 4*ecx], eax
 mov dword [mem + 4*ecx], eax
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [reg_sp4]
 add dword [reg_sp4], 0x1
 and dword [reg_d4], 0xffffff
 mov dword [reg_bp4], eax
 mov dword [reg_b4], eax
 call PCJMP_f4
 mov dword [mem + 4*ecx], eax
 and dword [reg_d4], 0xffffff
 mov eax, dword [mem + 4*eax]
 mov edi, 0x2f
 mov eax, dword [reg_a4]
 jmp PIXf4_32_26
PIXf4_0_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_0_27
PIXf4_1_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 jmp PIXf4_1_27
PIXf4_2_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_42: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_2_27
PIXf4_3_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_3_27
PIXf4_4_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_4_27
PIXf4_5_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x6f
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_110: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_5_27
PIXf4_6_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
BBf4_130: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x84
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_131: mov edi, 0x85
 jmp PIXf4_6_27
PIXf4_7_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_148: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 sub dword [reg_a4], 0x1
 jmp PIXf4_7_27
PIXf4_8_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xb
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
 jmp PIXf4_8_27
PIXf4_9_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_193: mov dword [reg_a4], 0x41
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_9_27
PIXf4_10_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_215: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_10_27
PIXf4_11_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_242: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xf6
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_243: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_11_27
PIXf4_12_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_12_27
PIXf4_13_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_280: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffa
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x11a
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_281: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_13_27
PIXf4_14_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_14_27
PIXf4_15_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x6
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 jmp PIXf4_15_27
PIXf4_16_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 jmp PIXf4_16_27
PIXf4_17_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_17_27
PIXf4_18_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 jmp PIXf4_18_27
PIXf4_19_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_367: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 jmp PIXf4_19_27
PIXf4_20_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_387: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
BBf4_388: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_20_27
PIXf4_21_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x19c
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_21_27
PIXf4_22_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 jmp PIXf4_22_27
PIXf4_23_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_23_27
PIXf4_24_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1d6
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_463: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x24
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_24_27
PIXf4_25_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1e0
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_479: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_25_27
PIXf4_26_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1fc
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_507: mov edi, 0x206
 mov eax, 1
 call PCJMP_f4
BBf4_508: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_26_27
PIXf4_27_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f4
BBf4_521: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20a
 jmp PIXf4_27_27
PIXf4_28_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_535: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_536: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_28_27
PIXf4_29_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x2
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_29_27
PIXf4_30_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x235
 mov eax, 1
 call PCJMP_f4
BBf4_570: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_30_27
PIXf4_31_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x253
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_594: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 jmp PIXf4_31_27
PIXf4_32_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_bp4], eax
 mov eax, 1
 mov eax, dword [reg_sp4]
 sete  al
 cmp dword [reg_a4], 0x0
 call PCJMP_f4
 mov eax, 1
 mov eax, dword [mem + 4*eax]
 mov eax, 1
 and dword [reg_b4], 0xffffff
 mov eax, dword [mem + 4*eax]
 mov eax, dword [reg_bp4]
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], eax
 mov eax, 1
 mov dword [reg_b4], eax
 and dword [reg_d4], 0xffffff
 call PCJMP_f4
 and dword [reg_a4], 0xffffff
 mov dword [reg_a4], eax
 mov dword [mem + 4*ecx], eax
 mov dword [reg_sp4], eax
 and dword [reg_sp4], 0xffffff
 and dword [reg_b4], 0xffffff
 jmp PIXf4_32_27
PIXf4_0_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0xb
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_10: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_0_28
PIXf4_1_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_1_28
PIXf4_2_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_43: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_44: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_2_28
PIXf4_3_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x47
 mov eax, 1
 call PCJMP_f4
BBf4_70: mov dword [reg_a4], 0x0
BBf4_71: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 jmp PIXf4_3_28
PIXf4_4_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x63
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_98: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_4_28
PIXf4_5_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_5_28
PIXf4_6_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_132: mov edi, 0x87
 mov eax, 1
 call PCJMP_f4
BBf4_133: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_6_28
PIXf4_7_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x10
 jmp PIXf4_7_28
PIXf4_8_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_167: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xa9
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_168: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20
 mov eax, dword [reg_a4]
 jmp PIXf4_8_28
PIXf4_9_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xc3
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_194: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_9_28
PIXf4_10_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_216: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 jmp PIXf4_10_28
PIXf4_11_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x78
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_11_28
PIXf4_12_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x108
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xba
 mov eax, 1
 call PCJMP_f4
BBf4_264: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x10a
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_265: mov dword [reg_a4], 0x41
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_12_28
PIXf4_13_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_13_28
PIXf4_14_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_14_28
PIXf4_15_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x136
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_309: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 jmp PIXf4_15_28
PIXf4_16_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x140
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, dword [reg_c4]
 mov eax, 1
 call PCJMP_f4
BBf4_320: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_16_28
PIXf4_17_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_17_28
PIXf4_18_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 jmp PIXf4_18_28
PIXf4_19_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_368: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 jmp PIXf4_19_28
PIXf4_20_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0x186
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_389: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 jmp PIXf4_20_28
PIXf4_21_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_411: mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_412: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 jmp PIXf4_21_28
PIXf4_22_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_434: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_22_28
PIXf4_23_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_23_28
PIXf4_24_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 jmp PIXf4_24_28
PIXf4_25_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 jmp PIXf4_25_28
PIXf4_26_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x63
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1fe
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_509: mov edi, 0x207
 mov eax, 1
 call PCJMP_f4
BBf4_510: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_26_28
PIXf4_27_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x8f
 mov eax, 1
 call PCJMP_f4
BBf4_522: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x124
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_27_28
PIXf4_28_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_28_28
PIXf4_29_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x226
 jmp PIXf4_29_28
PIXf4_30_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_571: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 jmp PIXf4_30_28
PIXf4_31_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_595: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_596: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_31_28
PIXf4_32_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 mov edi, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [mem + 4*eax]
 setb  al
 call PCJMP_f4
 call PCJMP_f4
 cmp dword [reg_a4], 0x0
 call PCJMP_f4
 and dword [reg_sp4], 0xffffff
 and dword [reg_sp4], 0xffffff
 cmp dword [reg_a4], 0x0
 mov eax, dword [mem + 4*eax]
 mov eax, 1
 mov dword [reg_a4], eax
 mov dword [reg_b4], eax
 call PCJMP_f4
 mov eax, dword [reg_sp4]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], 0x1
 mov dword [reg_b4], 0x1
 mov eax, 1
 call PCJMP_f4
 mov dword [reg_sp4], eax
 jmp PIXf4_32_28
PIXf4_0_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xffffcd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffd0
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_0_29
PIXf4_1_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0x18
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_23: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_1_29
PIXf4_2_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x5
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_2_29
PIXf4_3_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x49
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_72: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_73: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x4b
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_74: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_3_29
PIXf4_4_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_4_29
PIXf4_5_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x70
 mov eax, 1
 call PCJMP_f4
BBf4_111: mov dword [reg_a4], 0x0
BBf4_112: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x72
 cmp dword [reg_a4], 0x0
 sete  al
 jmp PIXf4_5_29
PIXf4_6_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, 0x4
 mov ecx, reg_a4
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_134: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 jmp PIXf4_6_29
PIXf4_7_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_7_29
PIXf4_8_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_169: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_8_29
PIXf4_9_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x5a
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_195: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 jmp PIXf4_9_29
PIXf4_10_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_217: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_10_29
PIXf4_11_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x1
 mov edi, 0xf5
 cmp dword [reg_a4], 0x0
 setne al
 call PCJMP_f4
BBf4_244: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_11_29
PIXf4_12_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov edi, 0x10b
 mov eax, 1
 call PCJMP_f4
BBf4_266: mov dword [reg_a4], 0x61
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_12_29
PIXf4_13_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov edi, 0x11b
 mov eax, 1
 call PCJMP_f4
BBf4_282: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
BBf4_283: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_13_29
PIXf4_14_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0x12a
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 jmp PIXf4_14_29
PIXf4_15_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_310: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_15_29
PIXf4_16_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x8000
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_16_29
PIXf4_17_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_337: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f4
BBf4_338: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_17_29
PIXf4_18_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_349: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_18_29
PIXf4_19_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x172
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_369: mov edi, 0x173
 mov eax, 1
 call PCJMP_f4
BBf4_370: mov edi, 0x174
 mov eax, 1
 call PCJMP_f4
BBf4_371: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_19_29
PIXf4_20_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_390: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x188
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_391: mov edi, 0x189
 mov eax, 1
 call PCJMP_f4
BBf4_392: mov edi, 0x18e
 mov eax, 1
 call PCJMP_f4
BBf4_393: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_20_29
PIXf4_21_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_21_29
PIXf4_22_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 jmp PIXf4_22_29
PIXf4_23_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_449: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_23_29
PIXf4_24_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_464: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 jmp PIXf4_24_29
PIXf4_25_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_25_29
PIXf4_26_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xffffdb
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x25
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 jmp PIXf4_26_29
PIXf4_27_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20b
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_523: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_27_29
PIXf4_28_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x100
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_28_29
PIXf4_29_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f4
BBf4_550: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_29_29
PIXf4_30_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_572: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_30_29
PIXf4_31_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_31_29
PIXf4_32_28: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 mov eax, dword [reg_bp4]
 mov eax, dword [reg_b4]
 add dword [reg_b4], 0xffffff
 call PCJMP_f4
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], eax
 mov ecx, dword [reg_d4]
 add dword [reg_sp4], 0x1
 and dword [reg_b4], 0xffffff
 call PCJMP_f4
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 call PCJMP_f4
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 call PCJMP_f4
 call PCJMP_f4
 sete  al
 mov eax, dword [reg_a4]
 mov eax, dword [reg_b4]
 mov eax, 1
 mov dword [reg_bp4], eax
 mov dword [reg_a4], eax
 call PCJMP_f4
 jmp PIXf4_32_29
PIXf4_0_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcf
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_0_30
PIXf4_1_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_1_30
PIXf4_2_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_45: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x18
 mov eax, dword [reg_a4]
 jmp PIXf4_2_30
PIXf4_3_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_3_30
PIXf4_4_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x1
 mov edi, 0x64
 mov eax, 1
 call PCJMP_f4
BBf4_99: mov dword [reg_a4], 0x0
BBf4_100: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 jmp PIXf4_4_30
PIXf4_5_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f4
BBf4_113: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_5_30
PIXf4_6_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x82
 mov eax, 1
 call PCJMP_f4
BBf4_135: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_6_30
PIXf4_7_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x95
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f4
BBf4_149: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 jmp PIXf4_7_30
PIXf4_8_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_170: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_8_30
PIXf4_9_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_196: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_197: mov eax, dword [reg_bp4]
 jmp PIXf4_9_30
PIXf4_10_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_10_30
PIXf4_11_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x58
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 jmp PIXf4_11_30
PIXf4_12_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
BBf4_267: mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_12_30
PIXf4_13_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_13_30
PIXf4_14_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_297: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_14_30
PIXf4_15_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_15_30
PIXf4_16_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x142
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_321: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 jmp PIXf4_16_30
PIXf4_17_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_17_30
PIXf4_18_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x159
 mov eax, 1
 call PCJMP_f4
BBf4_350: mov eax, dword [reg_bp4]
 jmp PIXf4_18_30
PIXf4_19_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x170
 mov eax, 1
 call PCJMP_f4
BBf4_372: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 jmp PIXf4_19_30
PIXf4_20_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 jmp PIXf4_20_30
PIXf4_21_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 jmp PIXf4_21_30
PIXf4_22_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 jmp PIXf4_22_30
PIXf4_23_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setne al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1c3
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_450: mov edi, 0x1bc
 mov eax, 1
 call PCJMP_f4
BBf4_451: mov edi, 0x1bb
 mov eax, 1
 call PCJMP_f4
BBf4_452: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_23_30
PIXf4_24_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_24_30
PIXf4_25_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_480: mov edi, 0x1db
 mov eax, 1
 call PCJMP_f4
BBf4_481: mov edi, 0x1e3
 mov eax, 1
 call PCJMP_f4
BBf4_482: mov edi, 0x1e4
 mov eax, 1
 call PCJMP_f4
BBf4_483: mov edi, 0x1d9
 mov eax, 1
 call PCJMP_f4
BBf4_484: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_25_30
PIXf4_26_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x200
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_511: mov edi, 0x208
 mov eax, 1
 call PCJMP_f4
BBf4_512: mov edi, 0x209
 mov eax, 1
 call PCJMP_f4
BBf4_513: mov edi, 0x1f2
 mov eax, 1
 call PCJMP_f4
BBf4_514: mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0xffffdd
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_26_30
PIXf4_27_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20c
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_524: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_27_30
PIXf4_28_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x219
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_28_30
PIXf4_29_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_551: mov eax, dword [reg_bp4]
 jmp PIXf4_29_30
PIXf4_30_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x23d
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_573: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 jmp PIXf4_30_30
PIXf4_31_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x25d
 jmp PIXf4_31_30
PIXf4_32_29: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d4], eax
 add dword [reg_sp4], 0x1
 mov eax, dword [reg_sp4]
 mov dword [reg_a4], 0x46
 mov eax, dword [reg_a4]
 mov dword [reg_a4], eax
 mov dword [reg_a4], eax
 mov eax, dword [mem + 4*eax]
 mov dword [reg_bp4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_d4], 0xffffff
 mov eax, 1
 mov eax, dword [reg_b4]
 add dword [reg_sp4], 0x1
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_d4]
 mov eax, dword [reg_sp4]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [mem + 4*eax]
 mov eax, dword [reg_d4]
 mov dword [reg_a4], eax
 and dword [reg_sp4], 0xffffff
 mov eax, dword [mem + 4*eax]
 add dword [reg_sp4], 0x1
 mov eax, dword [reg_d4]
 jmp PIXf4_32_30
PIXf4_0_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 jmp PIXf4_0_31
PIXf4_1_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_24: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0x1a
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_25: mov edi, 0x1c
 mov eax, 1
 call PCJMP_f4
BBf4_26: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 jmp PIXf4_1_31
PIXf4_2_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x2f
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_46: mov edi, 0x30
 mov eax, 1
 call PCJMP_f4
BBf4_47: mov edi, 0x3b
 mov eax, 1
 call PCJMP_f4
BBf4_48: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x0
 jmp PIXf4_2_31
PIXf4_3_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_75: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_3_31
PIXf4_4_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 cmp dword [reg_a4], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x66
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_101: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_4_31
PIXf4_5_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_5_31
PIXf4_6_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_136: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 jmp PIXf4_6_31
PIXf4_7_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xa
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 jmp PIXf4_7_31
PIXf4_8_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_171: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_8_31
PIXf4_9_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_198: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_9_31
PIXf4_10_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xda
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f4
BBf4_218: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 jmp PIXf4_10_31
PIXf4_11_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_245: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 cmp dword [reg_b4], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b4], eax
BBf4_246: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 mov edi, 0xf8
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_247: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_11_31
PIXf4_12_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f4
BBf4_268: mov edi, 0x117
 mov eax, 1
 call PCJMP_f4
BBf4_269: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 jmp PIXf4_12_31
PIXf4_13_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
BBf4_284: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 jmp PIXf4_13_31
PIXf4_14_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_14_31
PIXf4_15_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x2
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_15_31
PIXf4_16_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_16_31
PIXf4_17_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x5
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 jmp PIXf4_17_31
PIXf4_18_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
 jmp PIXf4_18_31
PIXf4_19_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov edi, 0x176
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_373: mov edi, 0x177
 mov eax, 1
 call PCJMP_f4
BBf4_374: mov edi, 0x179
 mov eax, 1
 call PCJMP_f4
BBf4_375: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_19_31
PIXf4_20_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setb  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x18b
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_394: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 jmp PIXf4_20_31
PIXf4_21_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 jmp PIXf4_21_31
PIXf4_22_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x1b4
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_435: mov edi, 0x1b5
 mov eax, 1
 call PCJMP_f4
BBf4_436: mov edi, 0x1b8
 mov eax, 1
 call PCJMP_f4
BBf4_437: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 jmp PIXf4_22_31
PIXf4_23_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_453: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x3
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x0
 jmp PIXf4_23_31
PIXf4_24_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 jmp PIXf4_24_31
PIXf4_25_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_485: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 jmp PIXf4_25_31
PIXf4_26_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 jmp PIXf4_26_31
PIXf4_27_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x129
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x20d
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f4
BBf4_525: mov eax, dword [reg_b4]
 jmp PIXf4_27_31
PIXf4_28_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f4
BBf4_537: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x4
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 jmp PIXf4_28_31
PIXf4_29_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_552: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 jmp PIXf4_29_31
PIXf4_30_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_574: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 jmp PIXf4_30_31
PIXf4_31_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_597: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x256
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 jmp PIXf4_31_31
PIXf4_32_30: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 mov dword [reg_b4], eax
 mov dword [mem + 4*ecx], eax
 mov dword [reg_sp4], eax
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 add dword [reg_sp4], 0x1
 add dword [reg_sp4], 0x1
 mov eax, dword [mem + 4*eax]
 mov dword [reg_b4], eax
 call PCJMP_f4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [mem + 4*ecx], eax
 mov eax, 1
 call PCJMP_f4
 mov edi, 0x9b
 mov eax, dword [reg_a4]
 mov eax, 1
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov eax, dword [mem + 4*eax]
 mov eax, 1
 mov dword [reg_a4], eax
 sete  al
 jmp PIXf4_32_31
PIXf4_0_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffcd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov esi, 1
 jmp PIX_END_f4
PIXf4_1_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
BBf4_27: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 mov esi, 2
 jmp PIX_END_f4
PIXf4_2_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov esi, 3
 jmp PIX_END_f4
PIXf4_3_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 add dword [reg_a4], 0x1
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x3e
 mov eax, 1
 call PCJMP_f4
BBf4_76: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov esi, 4
 jmp PIX_END_f4
PIXf4_4_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 add dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov esi, 5
 jmp PIX_END_f4
PIXf4_5_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 mov esi, 6
 jmp PIX_END_f4
PIXf4_6_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x3
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_a4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 mov esi, 7
 jmp PIX_END_f4
PIXf4_7_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x97
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_150: mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x30
 mov eax, dword [reg_a4]
 mov esi, 8
 jmp PIX_END_f4
PIXf4_8_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov dword [reg_b4], 0x0
 mov edi, 0xad
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
 mov esi, 9
 jmp PIX_END_f4
PIXf4_9_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xc7
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov esi, 10
 jmp PIX_END_f4
PIXf4_10_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x2
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0xdb
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f4
BBf4_219: mov eax, dword [reg_b4]
 mov esi, 11
 jmp PIX_END_f4
PIXf4_11_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 mov esi, 12
 jmp PIX_END_f4
PIXf4_12_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 setbe al
 movzx eax, al
 mov dword [reg_a4], eax
 mov esi, 13
 jmp PIX_END_f4
PIXf4_13_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f4
BBf4_285: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_286: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov esi, 14
 jmp PIX_END_f4
PIXf4_14_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x39
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov esi, 15
 jmp PIX_END_f4
PIXf4_15_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x137
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov esi, 16
 jmp PIX_END_f4
PIXf4_16_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffc
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x143
 mov eax, 1
 mov esi, 17
 jmp PIX_END_f4
PIXf4_17_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x4
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov esi, 18
 jmp PIX_END_f4
PIXf4_18_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf4_351: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_352: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov esi, 19
 jmp PIX_END_f4
PIXf4_19_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_c4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov esi, 20
 jmp PIX_END_f4
PIXf4_20_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 sub dword [reg_a4], eax
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov esi, 21
 jmp PIX_END_f4
PIXf4_21_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, 0x191
 mov eax, 1
 call PCJMP_f4
BBf4_413: mov dword [reg_a4], 0x0
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov esi, 22
 jmp PIX_END_f4
PIXf4_22_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffd
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_b4]
 cmp dword [reg_a4], eax
 sete  al
 movzx eax, al
 mov dword [reg_a4], eax
 mov edi, 0x1b7
 cmp dword [reg_a4], 0x0
 sete  al
 call PCJMP_f4
BBf4_438: mov edi, 0x1b1
 mov esi, 23
 jmp PIX_END_f4
PIXf4_23_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov dword [reg_a4], 0x24
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov esi, 24
 jmp PIX_END_f4
PIXf4_24_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov esi, 25
 jmp PIX_END_f4
PIXf4_25_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_486: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0x2
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 mov esi, 26
 jmp PIX_END_f4
PIXf4_26_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_c4]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_b4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov esi, 27
 jmp PIX_END_f4
PIXf4_27_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_a4], 0x1
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
BBf4_526: mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_b4], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffdc
 and dword [reg_b4], 0xffffff
 mov esi, 28
 jmp PIX_END_f4
PIXf4_28_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_538: mov eax, dword [reg_bp4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_a4]
 mov dword [reg_bp4], eax
 mov eax, dword [reg_sp4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov edi, dword [reg_a4]
 mov eax, 1
 call PCJMP_f4
BBf4_539: mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_bp4]
 mov esi, 29
 jmp PIX_END_f4
PIXf4_29_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_a4], eax
 add dword [reg_a4], 0x3
 and dword [reg_a4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xffffff
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 mov esi, 30
 jmp PIX_END_f4
PIXf4_30_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_bp4], eax
 sub dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov dword [reg_b4], 0x13f
 mov eax, dword [reg_b4]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a4], eax
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov dword [reg_a4], 0x0
 mov eax, dword [reg_sp4]
 mov dword [reg_d4], eax
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov esi, 31
 jmp PIX_END_f4
PIXf4_31_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d4], 0xffffff
 and dword [reg_d4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_d4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d4]
 mov dword [reg_sp4], eax
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f4
BBf4_598: mov eax, dword [reg_b4]
 mov dword [reg_a4], eax
 add dword [reg_sp4], 0x1
 and dword [reg_sp4], 0xffffff
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov eax, dword [reg_a4]
 mov ecx, dword [reg_b4]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp4]
 mov dword [reg_b4], eax
 add dword [reg_b4], 0xfffffe
 and dword [reg_b4], 0xffffff
 mov esi, 32
 jmp PIX_END_f4
PIXf4_32_31: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b4], eax
 mov eax, 1
 mov eax, dword [mem + 4*eax]
 mov ecx, dword [reg_b4]
 and dword [reg_d4], 0xffffff
 sete  al
 call PCJMP_f4
 add dword [reg_sp4], 0x1
 mov dword [reg_d4], eax
 mov eax, dword [reg_b4]
 add dword [reg_b4], 0x3
 cmp dword [reg_a4], eax
 mov dword [reg_bp4], eax
 and dword [reg_b4], 0xffffff
 mov dword [reg_b4], eax
 mov eax, dword [reg_a4]
 mov dword [reg_a4], eax
 call PCJMP_f4
 mov dword [reg_sp4], eax
 mov dword [reg_b4], eax
 mov eax, dword [mem + 4*eax]
 call PCJMP_f4
 mov eax, dword [reg_sp4]
 mov esi, 33
 jmp PIX_END_f4
PIX_PAD_f4_0: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_1
PIX_PAD_f4_1: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_2
PIX_PAD_f4_2: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_3
PIX_PAD_f4_3: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_4
PIX_PAD_f4_4: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_5
PIX_PAD_f4_5: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_6
PIX_PAD_f4_6: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_7
PIX_PAD_f4_7: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_8
PIX_PAD_f4_8: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_9
PIX_PAD_f4_9: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_10
PIX_PAD_f4_10: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_11
PIX_PAD_f4_11: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_12
PIX_PAD_f4_12: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_13
PIX_PAD_f4_13: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_14
PIX_PAD_f4_14: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_15
PIX_PAD_f4_15: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_16
PIX_PAD_f4_16: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_17
PIX_PAD_f4_17: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_18
PIX_PAD_f4_18: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_19
PIX_PAD_f4_19: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_20
PIX_PAD_f4_20: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_21
PIX_PAD_f4_21: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_22
PIX_PAD_f4_22: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_23
PIX_PAD_f4_23: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_24
PIX_PAD_f4_24: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_25
PIX_PAD_f4_25: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_26
PIX_PAD_f4_26: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_27
PIX_PAD_f4_27: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_28
PIX_PAD_f4_28: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_29
PIX_PAD_f4_29: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_30
PIX_PAD_f4_30: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f4_31
PIX_PAD_f4_31: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_END_f4
PIX_END_f4:
jmp PIX_START_f4
PIX_TABLE_f4:
 dd PIXf4_0_0
 dd PIXf4_1_0
 dd PIXf4_2_0
 dd PIXf4_3_0
 dd PIXf4_4_0
 dd PIXf4_5_0
 dd PIXf4_6_0
 dd PIXf4_7_0
 dd PIXf4_8_0
 dd PIXf4_9_0
 dd PIXf4_10_0
 dd PIXf4_11_0
 dd PIXf4_12_0
 dd PIXf4_13_0
 dd PIXf4_14_0
 dd PIXf4_15_0
 dd PIXf4_16_0
 dd PIXf4_17_0
 dd PIXf4_18_0
 dd PIXf4_19_0
 dd PIXf4_20_0
 dd PIXf4_21_0
 dd PIXf4_22_0
 dd PIXf4_23_0
 dd PIXf4_24_0
 dd PIXf4_25_0
 dd PIXf4_26_0
 dd PIXf4_27_0
 dd PIXf4_28_0
 dd PIXf4_29_0
 dd PIXf4_30_0
 dd PIXf4_31_0
 dd PIXf4_32_0
 dd PIX_PAD_f4_0
JMP_TABLE_f4:
 dd BBf4_0 + 0xabad1dea
 dd BBf4_1 + 0xabad1dea
 dd BBf4_2 + 0xabad1dea
 dd BBf4_3 + 0xabad1dea
 dd BBf4_4 + 0xabad1dea
 dd BBf4_5 + 0xabad1dea
 dd BBf4_6 + 0xabad1dea
 dd BBf4_7 + 0xabad1dea
 dd BBf4_8 + 0xabad1dea
 dd BBf4_9 + 0xabad1dea
 dd BBf4_10 + 0xabad1dea
 dd BBf4_11 + 0xabad1dea
 dd BBf4_12 + 0xabad1dea
 dd BBf4_13 + 0xabad1dea
 dd BBf4_14 + 0xabad1dea
 dd BBf4_15 + 0xabad1dea
 dd BBf4_16 + 0xabad1dea
 dd BBf4_17 + 0xabad1dea
 dd BBf4_18 + 0xabad1dea
 dd BBf4_19 + 0xabad1dea
 dd BBf4_20 + 0xabad1dea
 dd BBf4_21 + 0xabad1dea
 dd BBf4_22 + 0xabad1dea
 dd BBf4_23 + 0xabad1dea
 dd BBf4_24 + 0xabad1dea
 dd BBf4_25 + 0xabad1dea
 dd BBf4_26 + 0xabad1dea
 dd BBf4_27 + 0xabad1dea
 dd BBf4_28 + 0xabad1dea
 dd BBf4_29 + 0xabad1dea
 dd BBf4_30 + 0xabad1dea
 dd BBf4_31 + 0xabad1dea
 dd BBf4_32 + 0xabad1dea
 dd BBf4_33 + 0xabad1dea
 dd BBf4_34 + 0xabad1dea
 dd BBf4_35 + 0xabad1dea
 dd BBf4_36 + 0xabad1dea
 dd BBf4_37 + 0xabad1dea
 dd BBf4_38 + 0xabad1dea
 dd BBf4_39 + 0xabad1dea
 dd BBf4_40 + 0xabad1dea
 dd BBf4_41 + 0xabad1dea
 dd BBf4_42 + 0xabad1dea
 dd BBf4_43 + 0xabad1dea
 dd BBf4_44 + 0xabad1dea
 dd BBf4_45 + 0xabad1dea
 dd BBf4_46 + 0xabad1dea
 dd BBf4_47 + 0xabad1dea
 dd BBf4_48 + 0xabad1dea
 dd BBf4_49 + 0xabad1dea
 dd BBf4_50 + 0xabad1dea
 dd BBf4_51 + 0xabad1dea
 dd BBf4_52 + 0xabad1dea
 dd BBf4_53 + 0xabad1dea
 dd BBf4_54 + 0xabad1dea
 dd BBf4_55 + 0xabad1dea
 dd BBf4_56 + 0xabad1dea
 dd BBf4_57 + 0xabad1dea
 dd BBf4_58 + 0xabad1dea
 dd BBf4_59 + 0xabad1dea
 dd BBf4_60 + 0xabad1dea
 dd BBf4_61 + 0xabad1dea
 dd BBf4_62 + 0xabad1dea
 dd BBf4_63 + 0xabad1dea
 dd BBf4_64 + 0xabad1dea
 dd BBf4_65 + 0xabad1dea
 dd BBf4_66 + 0xabad1dea
 dd BBf4_67 + 0xabad1dea
 dd BBf4_68 + 0xabad1dea
 dd BBf4_69 + 0xabad1dea
 dd BBf4_70 + 0xabad1dea
 dd BBf4_71 + 0xabad1dea
 dd BBf4_72 + 0xabad1dea
 dd BBf4_73 + 0xabad1dea
 dd BBf4_74 + 0xabad1dea
 dd BBf4_75 + 0xabad1dea
 dd BBf4_76 + 0xabad1dea
 dd BBf4_77 + 0xabad1dea
 dd BBf4_78 + 0xabad1dea
 dd BBf4_79 + 0xabad1dea
 dd BBf4_80 + 0xabad1dea
 dd BBf4_81 + 0xabad1dea
 dd BBf4_82 + 0xabad1dea
 dd BBf4_83 + 0xabad1dea
 dd BBf4_84 + 0xabad1dea
 dd BBf4_85 + 0xabad1dea
 dd BBf4_86 + 0xabad1dea
 dd BBf4_87 + 0xabad1dea
 dd BBf4_88 + 0xabad1dea
 dd BBf4_89 + 0xabad1dea
 dd BBf4_90 + 0xabad1dea
 dd BBf4_91 + 0xabad1dea
 dd BBf4_92 + 0xabad1dea
 dd BBf4_93 + 0xabad1dea
 dd BBf4_94 + 0xabad1dea
 dd BBf4_95 + 0xabad1dea
 dd BBf4_96 + 0xabad1dea
 dd BBf4_97 + 0xabad1dea
 dd BBf4_98 + 0xabad1dea
 dd BBf4_99 + 0xabad1dea
 dd BBf4_100 + 0xabad1dea
 dd BBf4_101 + 0xabad1dea
 dd BBf4_102 + 0xabad1dea
 dd BBf4_103 + 0xabad1dea
 dd BBf4_104 + 0xabad1dea
 dd BBf4_105 + 0xabad1dea
 dd BBf4_106 + 0xabad1dea
 dd BBf4_107 + 0xabad1dea
 dd BBf4_108 + 0xabad1dea
 dd BBf4_109 + 0xabad1dea
 dd BBf4_110 + 0xabad1dea
 dd BBf4_111 + 0xabad1dea
 dd BBf4_112 + 0xabad1dea
 dd BBf4_113 + 0xabad1dea
 dd BBf4_114 + 0xabad1dea
 dd BBf4_115 + 0xabad1dea
 dd BBf4_116 + 0xabad1dea
 dd BBf4_117 + 0xabad1dea
 dd BBf4_118 + 0xabad1dea
 dd BBf4_119 + 0xabad1dea
 dd BBf4_120 + 0xabad1dea
 dd BBf4_121 + 0xabad1dea
 dd BBf4_122 + 0xabad1dea
 dd BBf4_123 + 0xabad1dea
 dd BBf4_124 + 0xabad1dea
 dd BBf4_125 + 0xabad1dea
 dd BBf4_126 + 0xabad1dea
 dd BBf4_127 + 0xabad1dea
 dd BBf4_128 + 0xabad1dea
 dd BBf4_129 + 0xabad1dea
 dd BBf4_130 + 0xabad1dea
 dd BBf4_131 + 0xabad1dea
 dd BBf4_132 + 0xabad1dea
 dd BBf4_133 + 0xabad1dea
 dd BBf4_134 + 0xabad1dea
 dd BBf4_135 + 0xabad1dea
 dd BBf4_136 + 0xabad1dea
 dd BBf4_137 + 0xabad1dea
 dd BBf4_138 + 0xabad1dea
 dd BBf4_139 + 0xabad1dea
 dd BBf4_140 + 0xabad1dea
 dd BBf4_141 + 0xabad1dea
 dd BBf4_142 + 0xabad1dea
 dd BBf4_143 + 0xabad1dea
 dd BBf4_144 + 0xabad1dea
 dd BBf4_145 + 0xabad1dea
 dd BBf4_146 + 0xabad1dea
 dd BBf4_147 + 0xabad1dea
 dd BBf4_148 + 0xabad1dea
 dd BBf4_149 + 0xabad1dea
 dd BBf4_150 + 0xabad1dea
 dd BBf4_151 + 0xabad1dea
 dd BBf4_152 + 0xabad1dea
 dd BBf4_153 + 0xabad1dea
 dd BBf4_154 + 0xabad1dea
 dd BBf4_155 + 0xabad1dea
 dd BBf4_156 + 0xabad1dea
 dd BBf4_157 + 0xabad1dea
 dd BBf4_158 + 0xabad1dea
 dd BBf4_159 + 0xabad1dea
 dd BBf4_160 + 0xabad1dea
 dd BBf4_161 + 0xabad1dea
 dd BBf4_162 + 0xabad1dea
 dd BBf4_163 + 0xabad1dea
 dd BBf4_164 + 0xabad1dea
 dd BBf4_165 + 0xabad1dea
 dd BBf4_166 + 0xabad1dea
 dd BBf4_167 + 0xabad1dea
 dd BBf4_168 + 0xabad1dea
 dd BBf4_169 + 0xabad1dea
 dd BBf4_170 + 0xabad1dea
 dd BBf4_171 + 0xabad1dea
 dd BBf4_172 + 0xabad1dea
 dd BBf4_173 + 0xabad1dea
 dd BBf4_174 + 0xabad1dea
 dd BBf4_175 + 0xabad1dea
 dd BBf4_176 + 0xabad1dea
 dd BBf4_177 + 0xabad1dea
 dd BBf4_178 + 0xabad1dea
 dd BBf4_179 + 0xabad1dea
 dd BBf4_180 + 0xabad1dea
 dd BBf4_181 + 0xabad1dea
 dd BBf4_182 + 0xabad1dea
 dd BBf4_183 + 0xabad1dea
 dd BBf4_184 + 0xabad1dea
 dd BBf4_185 + 0xabad1dea
 dd BBf4_186 + 0xabad1dea
 dd BBf4_187 + 0xabad1dea
 dd BBf4_188 + 0xabad1dea
 dd BBf4_189 + 0xabad1dea
 dd BBf4_190 + 0xabad1dea
 dd BBf4_191 + 0xabad1dea
 dd BBf4_192 + 0xabad1dea
 dd BBf4_193 + 0xabad1dea
 dd BBf4_194 + 0xabad1dea
 dd BBf4_195 + 0xabad1dea
 dd BBf4_196 + 0xabad1dea
 dd BBf4_197 + 0xabad1dea
 dd BBf4_198 + 0xabad1dea
 dd BBf4_199 + 0xabad1dea
 dd BBf4_200 + 0xabad1dea
 dd BBf4_201 + 0xabad1dea
 dd BBf4_202 + 0xabad1dea
 dd BBf4_203 + 0xabad1dea
 dd BBf4_204 + 0xabad1dea
 dd BBf4_205 + 0xabad1dea
 dd BBf4_206 + 0xabad1dea
 dd BBf4_207 + 0xabad1dea
 dd BBf4_208 + 0xabad1dea
 dd BBf4_209 + 0xabad1dea
 dd BBf4_210 + 0xabad1dea
 dd BBf4_211 + 0xabad1dea
 dd BBf4_212 + 0xabad1dea
 dd BBf4_213 + 0xabad1dea
 dd BBf4_214 + 0xabad1dea
 dd BBf4_215 + 0xabad1dea
 dd BBf4_216 + 0xabad1dea
 dd BBf4_217 + 0xabad1dea
 dd BBf4_218 + 0xabad1dea
 dd BBf4_219 + 0xabad1dea
 dd BBf4_220 + 0xabad1dea
 dd BBf4_221 + 0xabad1dea
 dd BBf4_222 + 0xabad1dea
 dd BBf4_223 + 0xabad1dea
 dd BBf4_224 + 0xabad1dea
 dd BBf4_225 + 0xabad1dea
 dd BBf4_226 + 0xabad1dea
 dd BBf4_227 + 0xabad1dea
 dd BBf4_228 + 0xabad1dea
 dd BBf4_229 + 0xabad1dea
 dd BBf4_230 + 0xabad1dea
 dd BBf4_231 + 0xabad1dea
 dd BBf4_232 + 0xabad1dea
 dd BBf4_233 + 0xabad1dea
 dd BBf4_234 + 0xabad1dea
 dd BBf4_235 + 0xabad1dea
 dd BBf4_236 + 0xabad1dea
 dd BBf4_237 + 0xabad1dea
 dd BBf4_238 + 0xabad1dea
 dd BBf4_239 + 0xabad1dea
 dd BBf4_240 + 0xabad1dea
 dd BBf4_241 + 0xabad1dea
 dd BBf4_242 + 0xabad1dea
 dd BBf4_243 + 0xabad1dea
 dd BBf4_244 + 0xabad1dea
 dd BBf4_245 + 0xabad1dea
 dd BBf4_246 + 0xabad1dea
 dd BBf4_247 + 0xabad1dea
 dd BBf4_248 + 0xabad1dea
 dd BBf4_249 + 0xabad1dea
 dd BBf4_250 + 0xabad1dea
 dd BBf4_251 + 0xabad1dea
 dd BBf4_252 + 0xabad1dea
 dd BBf4_253 + 0xabad1dea
 dd BBf4_254 + 0xabad1dea
 dd BBf4_255 + 0xabad1dea
 dd BBf4_256 + 0xabad1dea
 dd BBf4_257 + 0xabad1dea
 dd BBf4_258 + 0xabad1dea
 dd BBf4_259 + 0xabad1dea
 dd BBf4_260 + 0xabad1dea
 dd BBf4_261 + 0xabad1dea
 dd BBf4_262 + 0xabad1dea
 dd BBf4_263 + 0xabad1dea
 dd BBf4_264 + 0xabad1dea
 dd BBf4_265 + 0xabad1dea
 dd BBf4_266 + 0xabad1dea
 dd BBf4_267 + 0xabad1dea
 dd BBf4_268 + 0xabad1dea
 dd BBf4_269 + 0xabad1dea
 dd BBf4_270 + 0xabad1dea
 dd BBf4_271 + 0xabad1dea
 dd BBf4_272 + 0xabad1dea
 dd BBf4_273 + 0xabad1dea
 dd BBf4_274 + 0xabad1dea
 dd BBf4_275 + 0xabad1dea
 dd BBf4_276 + 0xabad1dea
 dd BBf4_277 + 0xabad1dea
 dd BBf4_278 + 0xabad1dea
 dd BBf4_279 + 0xabad1dea
 dd BBf4_280 + 0xabad1dea
 dd BBf4_281 + 0xabad1dea
 dd BBf4_282 + 0xabad1dea
 dd BBf4_283 + 0xabad1dea
 dd BBf4_284 + 0xabad1dea
 dd BBf4_285 + 0xabad1dea
 dd BBf4_286 + 0xabad1dea
 dd BBf4_287 + 0xabad1dea
 dd BBf4_288 + 0xabad1dea
 dd BBf4_289 + 0xabad1dea
 dd BBf4_290 + 0xabad1dea
 dd BBf4_291 + 0xabad1dea
 dd BBf4_292 + 0xabad1dea
 dd BBf4_293 + 0xabad1dea
 dd BBf4_294 + 0xabad1dea
 dd BBf4_295 + 0xabad1dea
 dd BBf4_296 + 0xabad1dea
 dd BBf4_297 + 0xabad1dea
 dd BBf4_298 + 0xabad1dea
 dd BBf4_299 + 0xabad1dea
 dd BBf4_300 + 0xabad1dea
 dd BBf4_301 + 0xabad1dea
 dd BBf4_302 + 0xabad1dea
 dd BBf4_303 + 0xabad1dea
 dd BBf4_304 + 0xabad1dea
 dd BBf4_305 + 0xabad1dea
 dd BBf4_306 + 0xabad1dea
 dd BBf4_307 + 0xabad1dea
 dd BBf4_308 + 0xabad1dea
 dd BBf4_309 + 0xabad1dea
 dd BBf4_310 + 0xabad1dea
 dd BBf4_311 + 0xabad1dea
 dd BBf4_312 + 0xabad1dea
 dd BBf4_313 + 0xabad1dea
 dd BBf4_314 + 0xabad1dea
 dd BBf4_315 + 0xabad1dea
 dd BBf4_316 + 0xabad1dea
 dd BBf4_317 + 0xabad1dea
 dd BBf4_318 + 0xabad1dea
 dd BBf4_319 + 0xabad1dea
 dd BBf4_320 + 0xabad1dea
 dd BBf4_321 + 0xabad1dea
 dd BBf4_322 + 0xabad1dea
 dd BBf4_323 + 0xabad1dea
 dd BBf4_324 + 0xabad1dea
 dd BBf4_325 + 0xabad1dea
 dd BBf4_326 + 0xabad1dea
 dd BBf4_327 + 0xabad1dea
 dd BBf4_328 + 0xabad1dea
 dd BBf4_329 + 0xabad1dea
 dd BBf4_330 + 0xabad1dea
 dd BBf4_331 + 0xabad1dea
 dd BBf4_332 + 0xabad1dea
 dd BBf4_333 + 0xabad1dea
 dd BBf4_334 + 0xabad1dea
 dd BBf4_335 + 0xabad1dea
 dd BBf4_336 + 0xabad1dea
 dd BBf4_337 + 0xabad1dea
 dd BBf4_338 + 0xabad1dea
 dd BBf4_339 + 0xabad1dea
 dd BBf4_340 + 0xabad1dea
 dd BBf4_341 + 0xabad1dea
 dd BBf4_342 + 0xabad1dea
 dd BBf4_343 + 0xabad1dea
 dd BBf4_344 + 0xabad1dea
 dd BBf4_345 + 0xabad1dea
 dd BBf4_346 + 0xabad1dea
 dd BBf4_347 + 0xabad1dea
 dd BBf4_348 + 0xabad1dea
 dd BBf4_349 + 0xabad1dea
 dd BBf4_350 + 0xabad1dea
 dd BBf4_351 + 0xabad1dea
 dd BBf4_352 + 0xabad1dea
 dd BBf4_353 + 0xabad1dea
 dd BBf4_354 + 0xabad1dea
 dd BBf4_355 + 0xabad1dea
 dd BBf4_356 + 0xabad1dea
 dd BBf4_357 + 0xabad1dea
 dd BBf4_358 + 0xabad1dea
 dd BBf4_359 + 0xabad1dea
 dd BBf4_360 + 0xabad1dea
 dd BBf4_361 + 0xabad1dea
 dd BBf4_362 + 0xabad1dea
 dd BBf4_363 + 0xabad1dea
 dd BBf4_364 + 0xabad1dea
 dd BBf4_365 + 0xabad1dea
 dd BBf4_366 + 0xabad1dea
 dd BBf4_367 + 0xabad1dea
 dd BBf4_368 + 0xabad1dea
 dd BBf4_369 + 0xabad1dea
 dd BBf4_370 + 0xabad1dea
 dd BBf4_371 + 0xabad1dea
 dd BBf4_372 + 0xabad1dea
 dd BBf4_373 + 0xabad1dea
 dd BBf4_374 + 0xabad1dea
 dd BBf4_375 + 0xabad1dea
 dd BBf4_376 + 0xabad1dea
 dd BBf4_377 + 0xabad1dea
 dd BBf4_378 + 0xabad1dea
 dd BBf4_379 + 0xabad1dea
 dd BBf4_380 + 0xabad1dea
 dd BBf4_381 + 0xabad1dea
 dd BBf4_382 + 0xabad1dea
 dd BBf4_383 + 0xabad1dea
 dd BBf4_384 + 0xabad1dea
 dd BBf4_385 + 0xabad1dea
 dd BBf4_386 + 0xabad1dea
 dd BBf4_387 + 0xabad1dea
 dd BBf4_388 + 0xabad1dea
 dd BBf4_389 + 0xabad1dea
 dd BBf4_390 + 0xabad1dea
 dd BBf4_391 + 0xabad1dea
 dd BBf4_392 + 0xabad1dea
 dd BBf4_393 + 0xabad1dea
 dd BBf4_394 + 0xabad1dea
 dd BBf4_395 + 0xabad1dea
 dd BBf4_396 + 0xabad1dea
 dd BBf4_397 + 0xabad1dea
 dd BBf4_398 + 0xabad1dea
 dd BBf4_399 + 0xabad1dea
 dd BBf4_400 + 0xabad1dea
 dd BBf4_401 + 0xabad1dea
 dd BBf4_402 + 0xabad1dea
 dd BBf4_403 + 0xabad1dea
 dd BBf4_404 + 0xabad1dea
 dd BBf4_405 + 0xabad1dea
 dd BBf4_406 + 0xabad1dea
 dd BBf4_407 + 0xabad1dea
 dd BBf4_408 + 0xabad1dea
 dd BBf4_409 + 0xabad1dea
 dd BBf4_410 + 0xabad1dea
 dd BBf4_411 + 0xabad1dea
 dd BBf4_412 + 0xabad1dea
 dd BBf4_413 + 0xabad1dea
 dd BBf4_414 + 0xabad1dea
 dd BBf4_415 + 0xabad1dea
 dd BBf4_416 + 0xabad1dea
 dd BBf4_417 + 0xabad1dea
 dd BBf4_418 + 0xabad1dea
 dd BBf4_419 + 0xabad1dea
 dd BBf4_420 + 0xabad1dea
 dd BBf4_421 + 0xabad1dea
 dd BBf4_422 + 0xabad1dea
 dd BBf4_423 + 0xabad1dea
 dd BBf4_424 + 0xabad1dea
 dd BBf4_425 + 0xabad1dea
 dd BBf4_426 + 0xabad1dea
 dd BBf4_427 + 0xabad1dea
 dd BBf4_428 + 0xabad1dea
 dd BBf4_429 + 0xabad1dea
 dd BBf4_430 + 0xabad1dea
 dd BBf4_431 + 0xabad1dea
 dd BBf4_432 + 0xabad1dea
 dd BBf4_433 + 0xabad1dea
 dd BBf4_434 + 0xabad1dea
 dd BBf4_435 + 0xabad1dea
 dd BBf4_436 + 0xabad1dea
 dd BBf4_437 + 0xabad1dea
 dd BBf4_438 + 0xabad1dea
 dd BBf4_439 + 0xabad1dea
 dd BBf4_440 + 0xabad1dea
 dd BBf4_441 + 0xabad1dea
 dd BBf4_442 + 0xabad1dea
 dd BBf4_443 + 0xabad1dea
 dd BBf4_444 + 0xabad1dea
 dd BBf4_445 + 0xabad1dea
 dd BBf4_446 + 0xabad1dea
 dd BBf4_447 + 0xabad1dea
 dd BBf4_448 + 0xabad1dea
 dd BBf4_449 + 0xabad1dea
 dd BBf4_450 + 0xabad1dea
 dd BBf4_451 + 0xabad1dea
 dd BBf4_452 + 0xabad1dea
 dd BBf4_453 + 0xabad1dea
 dd BBf4_454 + 0xabad1dea
 dd BBf4_455 + 0xabad1dea
 dd BBf4_456 + 0xabad1dea
 dd BBf4_457 + 0xabad1dea
 dd BBf4_458 + 0xabad1dea
 dd BBf4_459 + 0xabad1dea
 dd BBf4_460 + 0xabad1dea
 dd BBf4_461 + 0xabad1dea
 dd BBf4_462 + 0xabad1dea
 dd BBf4_463 + 0xabad1dea
 dd BBf4_464 + 0xabad1dea
 dd BBf4_465 + 0xabad1dea
 dd BBf4_466 + 0xabad1dea
 dd BBf4_467 + 0xabad1dea
 dd BBf4_468 + 0xabad1dea
 dd BBf4_469 + 0xabad1dea
 dd BBf4_470 + 0xabad1dea
 dd BBf4_471 + 0xabad1dea
 dd BBf4_472 + 0xabad1dea
 dd BBf4_473 + 0xabad1dea
 dd BBf4_474 + 0xabad1dea
 dd BBf4_475 + 0xabad1dea
 dd BBf4_476 + 0xabad1dea
 dd BBf4_477 + 0xabad1dea
 dd BBf4_478 + 0xabad1dea
 dd BBf4_479 + 0xabad1dea
 dd BBf4_480 + 0xabad1dea
 dd BBf4_481 + 0xabad1dea
 dd BBf4_482 + 0xabad1dea
 dd BBf4_483 + 0xabad1dea
 dd BBf4_484 + 0xabad1dea
 dd BBf4_485 + 0xabad1dea
 dd BBf4_486 + 0xabad1dea
 dd BBf4_487 + 0xabad1dea
 dd BBf4_488 + 0xabad1dea
 dd BBf4_489 + 0xabad1dea
 dd BBf4_490 + 0xabad1dea
 dd BBf4_491 + 0xabad1dea
 dd BBf4_492 + 0xabad1dea
 dd BBf4_493 + 0xabad1dea
 dd BBf4_494 + 0xabad1dea
 dd BBf4_495 + 0xabad1dea
 dd BBf4_496 + 0xabad1dea
 dd BBf4_497 + 0xabad1dea
 dd BBf4_498 + 0xabad1dea
 dd BBf4_499 + 0xabad1dea
 dd BBf4_500 + 0xabad1dea
 dd BBf4_501 + 0xabad1dea
 dd BBf4_502 + 0xabad1dea
 dd BBf4_503 + 0xabad1dea
 dd BBf4_504 + 0xabad1dea
 dd BBf4_505 + 0xabad1dea
 dd BBf4_506 + 0xabad1dea
 dd BBf4_507 + 0xabad1dea
 dd BBf4_508 + 0xabad1dea
 dd BBf4_509 + 0xabad1dea
 dd BBf4_510 + 0xabad1dea
 dd BBf4_511 + 0xabad1dea
 dd BBf4_512 + 0xabad1dea
 dd BBf4_513 + 0xabad1dea
 dd BBf4_514 + 0xabad1dea
 dd BBf4_515 + 0xabad1dea
 dd BBf4_516 + 0xabad1dea
 dd BBf4_517 + 0xabad1dea
 dd BBf4_518 + 0xabad1dea
 dd BBf4_519 + 0xabad1dea
 dd BBf4_520 + 0xabad1dea
 dd BBf4_521 + 0xabad1dea
 dd BBf4_522 + 0xabad1dea
 dd BBf4_523 + 0xabad1dea
 dd BBf4_524 + 0xabad1dea
 dd BBf4_525 + 0xabad1dea
 dd BBf4_526 + 0xabad1dea
 dd BBf4_527 + 0xabad1dea
 dd BBf4_528 + 0xabad1dea
 dd BBf4_529 + 0xabad1dea
 dd BBf4_530 + 0xabad1dea
 dd BBf4_531 + 0xabad1dea
 dd BBf4_532 + 0xabad1dea
 dd BBf4_533 + 0xabad1dea
 dd BBf4_534 + 0xabad1dea
 dd BBf4_535 + 0xabad1dea
 dd BBf4_536 + 0xabad1dea
 dd BBf4_537 + 0xabad1dea
 dd BBf4_538 + 0xabad1dea
 dd BBf4_539 + 0xabad1dea
 dd BBf4_540 + 0xabad1dea
 dd BBf4_541 + 0xabad1dea
 dd BBf4_542 + 0xabad1dea
 dd BBf4_543 + 0xabad1dea
 dd BBf4_544 + 0xabad1dea
 dd BBf4_545 + 0xabad1dea
 dd BBf4_546 + 0xabad1dea
 dd BBf4_547 + 0xabad1dea
 dd BBf4_548 + 0xabad1dea
 dd BBf4_549 + 0xabad1dea
 dd BBf4_550 + 0xabad1dea
 dd BBf4_551 + 0xabad1dea
 dd BBf4_552 + 0xabad1dea
 dd BBf4_553 + 0xabad1dea
 dd BBf4_554 + 0xabad1dea
 dd BBf4_555 + 0xabad1dea
 dd BBf4_556 + 0xabad1dea
 dd BBf4_557 + 0xabad1dea
 dd BBf4_558 + 0xabad1dea
 dd BBf4_559 + 0xabad1dea
 dd BBf4_560 + 0xabad1dea
 dd BBf4_561 + 0xabad1dea
 dd BBf4_562 + 0xabad1dea
 dd BBf4_563 + 0xabad1dea
 dd BBf4_564 + 0xabad1dea
 dd BBf4_565 + 0xabad1dea
 dd BBf4_566 + 0xabad1dea
 dd BBf4_567 + 0xabad1dea
 dd BBf4_568 + 0xabad1dea
 dd BBf4_569 + 0xabad1dea
 dd BBf4_570 + 0xabad1dea
 dd BBf4_571 + 0xabad1dea
 dd BBf4_572 + 0xabad1dea
 dd BBf4_573 + 0xabad1dea
 dd BBf4_574 + 0xabad1dea
 dd BBf4_575 + 0xabad1dea
 dd BBf4_576 + 0xabad1dea
 dd BBf4_577 + 0xabad1dea
 dd BBf4_578 + 0xabad1dea
 dd BBf4_579 + 0xabad1dea
 dd BBf4_580 + 0xabad1dea
 dd BBf4_581 + 0xabad1dea
 dd BBf4_582 + 0xabad1dea
 dd BBf4_583 + 0xabad1dea
 dd BBf4_584 + 0xabad1dea
 dd BBf4_585 + 0xabad1dea
 dd BBf4_586 + 0xabad1dea
 dd BBf4_587 + 0xabad1dea
 dd BBf4_588 + 0xabad1dea
 dd BBf4_589 + 0xabad1dea
 dd BBf4_590 + 0xabad1dea
 dd BBf4_591 + 0xabad1dea
 dd BBf4_592 + 0xabad1dea
 dd BBf4_593 + 0xabad1dea
 dd BBf4_594 + 0xabad1dea
 dd BBf4_595 + 0xabad1dea
 dd BBf4_596 + 0xabad1dea
 dd BBf4_597 + 0xabad1dea
 dd BBf4_598 + 0xabad1dea
 dd BBf4_599 + 0xabad1dea
 dd BBf4_600 + 0xabad1dea
 dd BBf4_601 + 0xabad1dea
 dd BBf4_602 + 0xabad1dea
 dd BBf4_603 + 0xabad1dea
 dd BBf4_604 + 0xabad1dea
 dd BBf4_605 + 0xabad1dea
 dd BBf4_606 + 0xabad1dea
 dd BBf4_607 + 0xabad1dea
 dd BBf4_608 + 0xabad1dea
 dd BBf4_609 + 0xabad1dea
 dd BBf4_610 + 0xabad1dea
; ----- End of func 0 -----

func_5:
 PCJMP_f5:
  cmp eax, 1
  je _PCJMP_f5
  ret
 _PCJMP_f5:
  pop eax
  mov eax, [JMP_TABLE_f5 + 4*edi]
  sub eax, 0xabad1dea
  jz PIX_START_f5
  jmp eax
PIX_START_f5:
 mov esi, [PIX_TABLE_f5 + 4*esi]
 jmp esi
PIXf5_0_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_0: mov edi, 0x261
 mov eax, 1
 call PCJMP_f5
BBf5_1: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x34
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x1
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_0_1
PIXf5_1_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0xffffcd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffd0
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_1_1
PIXf5_2_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_2_1
PIXf5_3_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x27
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_3_1
PIXf5_4_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_62: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x18
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_4_1
PIXf5_5_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x57
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_86: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_5_1
PIXf5_6_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_6_1
PIXf5_7_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 jmp PIXf5_7_1
PIXf5_8_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x90
 jmp PIXf5_8_1
PIXf5_9_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_158: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_9_1
PIXf5_10_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_179: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_180: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0xb8
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_181: mov dword [reg_a], 0x41
 jmp PIXf5_10_1
PIXf5_11_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_204: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 jmp PIXf5_11_1
PIXf5_12_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 jmp PIXf5_12_1
PIXf5_13_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_13_1
PIXf5_14_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_14_1
PIXf5_15_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x122
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f5
BBf5_290: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 jmp PIXf5_15_1
PIXf5_16_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_306: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_16_1
PIXf5_17_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x13e
 mov eax, 1
 call PCJMP_f5
BBf5_317: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f5
BBf5_318: mov edi, 0x13a
 jmp PIXf5_17_1
PIXf5_18_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x150
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_335: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_18_1
PIXf5_19_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_345: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_19_1
PIXf5_20_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x169
 mov eax, 1
 call PCJMP_f5
BBf5_365: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_20_1
PIXf5_21_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_395: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_21_1
PIXf5_22_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x1a5
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_420: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_22_1
PIXf5_23_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1ba
 jmp PIXf5_23_1
PIXf5_24_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_24_1
PIXf5_25_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 jmp PIXf5_25_1
PIXf5_26_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_26_1
PIXf5_27_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
BBf5_497: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_27_1
PIXf5_28_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f5
BBf5_519: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_28_1
PIXf5_29_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_530: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_29_1
PIXf5_30_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_545: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x101
 jmp PIXf5_30_1
PIXf5_31_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_562: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_563: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_31_1
PIXf5_32_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f5
BBf5_583: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_32_1
PIXf5_33_0: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_33_1
PIXf5_0_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffd0
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 jmp PIXf5_0_2
PIXf5_1_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_1_2
PIXf5_2_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_2_2
PIXf5_3_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f5
BBf5_39: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_3_2
PIXf5_4_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x40
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_63: mov edi, 0x41
 mov eax, 1
 call PCJMP_f5
BBf5_64: mov edi, 0x4c
 mov eax, 1
 call PCJMP_f5
BBf5_65: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_4_2
PIXf5_5_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 jmp PIXf5_5_2
PIXf5_6_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_6_2
PIXf5_7_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_126: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 jmp PIXf5_7_2
PIXf5_8_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f5
BBf5_144: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_8_2
PIXf5_9_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_159: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_9_2
PIXf5_10_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 jmp PIXf5_10_2
PIXf5_11_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xcd
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_11_2
PIXf5_12_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0xe0
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_223: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 jmp PIXf5_12_2
PIXf5_13_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_13_2
PIXf5_14_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x113
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f5
BBf5_275: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_14_2
PIXf5_15_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_291: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_15_2
PIXf5_16_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_307: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_16_2
PIXf5_17_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_319: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_17_2
PIXf5_18_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_336: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_18_2
PIXf5_19_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x15b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
 jmp PIXf5_19_2
PIXf5_20_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_366: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_20_2
PIXf5_21_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x18d
 jmp PIXf5_21_2
PIXf5_22_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_421: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_22_2
PIXf5_23_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_441: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_23_2
PIXf5_24_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_24_2
PIXf5_25_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_25_2
PIXf5_26_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1dd
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_476: mov edi, 0x1de
 mov eax, 1
 call PCJMP_f5
BBf5_477: mov edi, 0x1e1
 mov eax, 1
 call PCJMP_f5
BBf5_478: mov eax, dword [reg_bp]
 jmp PIXf5_26_2
PIXf5_27_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x215
 mov eax, 1
 call PCJMP_f5
BBf5_498: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_27_2
PIXf5_28_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_28_2
PIXf5_29_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_29_2
PIXf5_30_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_30_2
PIXf5_31_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 jmp PIXf5_31_2
PIXf5_32_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_584: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 jmp PIXf5_32_2
PIXf5_33_1: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xa
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x25c
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_603: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f5
BBf5_604: mov edi, 0x25e
 mov eax, 1
 call PCJMP_f5
BBf5_605: mov edi, 0x25f
 jmp PIXf5_33_2
PIXf5_0_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_0_3
PIXf5_1_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_1_3
PIXf5_2_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcc
 jmp PIXf5_2_3
PIXf5_3_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_40: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_3_3
PIXf5_4_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_4_3
PIXf5_5_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x1
 mov edi, 0x58
 mov eax, 1
 call PCJMP_f5
BBf5_87: mov dword [reg_a], 0x0
BBf5_88: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_5_3
PIXf5_6_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x6f
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_110: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_6_3
PIXf5_7_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_7_3
PIXf5_8_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0x91
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_145: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_8_3
PIXf5_9_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xc
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 jmp PIXf5_9_3
PIXf5_10_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x0
 mov edi, 0xb7
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_182: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x46
 jmp PIXf5_10_3
PIXf5_11_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_205: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_b], 0x1
 mov edi, 0xd1
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_206: mov dword [reg_a], 0x20
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_11_3
PIXf5_12_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_224: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0xe2
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_225: mov dword [reg_a], 0x24
 jmp PIXf5_12_3
PIXf5_13_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x2
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_13_3
PIXf5_14_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_14_3
PIXf5_15_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_292: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 jmp PIXf5_15_3
PIXf5_16_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_308: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x6
 jmp PIXf5_16_3
PIXf5_17_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov dword [reg_a], 0x140
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_17_3
PIXf5_18_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 jmp PIXf5_18_3
PIXf5_19_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_346: mov edi, 0x15c
 mov eax, 1
 call PCJMP_f5
BBf5_347: mov edi, 0x15e
 mov eax, 1
 call PCJMP_f5
BBf5_348: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 jmp PIXf5_19_3
PIXf5_20_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_367: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_20_3
PIXf5_21_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_396: mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_397: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_21_3
PIXf5_22_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x1a0
 mov eax, 1
 call PCJMP_f5
BBf5_422: mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 jmp PIXf5_22_3
PIXf5_23_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_23_3
PIXf5_24_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 jmp PIXf5_24_3
PIXf5_25_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_25_3
PIXf5_26_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_26_3
PIXf5_27_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffdb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffdb
 jmp PIXf5_27_3
PIXf5_28_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_28_3
PIXf5_29_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_29_3
PIXf5_30_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x100
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffff00
 and dword [reg_a], 0xffffff
 jmp PIXf5_30_3
PIXf5_31_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_31_3
PIXf5_32_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_585: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov dword [reg_b], 0x13f
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_32_3
PIXf5_33_2: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_606: mov edi, 0x254
 mov eax, 1
 call PCJMP_f5
BBf5_607: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_33_3
PIXf5_0_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_2: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_0_4
PIXf5_1_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_1_4
PIXf5_2_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_2_4
PIXf5_3_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_41: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xfffffe
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_3_4
PIXf5_4_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 jmp PIXf5_4_4
PIXf5_5_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x5a
 cmp dword [reg_a], 0x0
 sete  al
 jmp PIXf5_5_4
PIXf5_6_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 jmp PIXf5_6_4
PIXf5_7_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov edi, 0x76
 mov eax, 1
 call PCJMP_f5
BBf5_127: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_7_4
PIXf5_8_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_146: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 jmp PIXf5_8_4
PIXf5_9_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0xa1
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_160: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xa
 mov eax, dword [reg_a]
 jmp PIXf5_9_4
PIXf5_10_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_183: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 jmp PIXf5_10_4
PIXf5_11_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x0
 mov edi, 0xd0
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_207: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_11_4
PIXf5_12_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 jmp PIXf5_12_4
PIXf5_13_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x10
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_13_4
PIXf5_14_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x116
 mov eax, 1
 call PCJMP_f5
BBf5_276: mov dword [reg_a], 0x1
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 jmp PIXf5_14_4
PIXf5_15_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_15_4
PIXf5_16_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_16_4
PIXf5_17_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, dword [reg_c]
 mov eax, 1
 call PCJMP_f5
BBf5_320: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_17_4
PIXf5_18_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_18_4
PIXf5_19_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 jmp PIXf5_19_4
PIXf5_20_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_368: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 jmp PIXf5_20_4
PIXf5_21_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_21_4
PIXf5_22_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_423: mov eax, dword [reg_bp]
 jmp PIXf5_22_4
PIXf5_23_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_442: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_23_4
PIXf5_24_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 jmp PIXf5_24_4
PIXf5_25_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_25_4
PIXf5_26_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1e0
 jmp PIXf5_26_4
PIXf5_27_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_27_4
PIXf5_28_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_28_4
PIXf5_29_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x213
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f5
BBf5_531: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
BBf5_532: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_29_4
PIXf5_30_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x222
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f5
BBf5_546: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x4
 jmp PIXf5_30_4
PIXf5_31_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x234
 mov eax, dword [reg_sp]
 jmp PIXf5_31_4
PIXf5_32_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_32_4
PIXf5_33_3: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_33_4
PIXf5_0_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffe8
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_0_5
PIXf5_1_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 jmp PIXf5_1_5
PIXf5_2_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0x18
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_23: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_2_5
PIXf5_3_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 jmp PIXf5_3_5
PIXf5_4_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_4_5
PIXf5_5_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_89: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_5_5
PIXf5_6_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x1
 mov edi, 0x70
 mov eax, 1
 call PCJMP_f5
BBf5_111: mov dword [reg_a], 0x0
BBf5_112: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x72
 cmp dword [reg_a], 0x0
 sete  al
 jmp PIXf5_6_5
PIXf5_7_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_128: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_129: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_7_5
PIXf5_8_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_8_5
PIXf5_9_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_161: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0xa3
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_162: mov eax, dword [reg_bp]
 jmp PIXf5_9_5
PIXf5_10_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_5
PIXf5_11_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x7f
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 jmp PIXf5_11_5
PIXf5_12_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_226: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov edi, 0xe6
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_227: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_12_5
PIXf5_13_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_248: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_13_5
PIXf5_14_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_14_5
PIXf5_15_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x125
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_15_5
PIXf5_16_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x136
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_309: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 jmp PIXf5_16_5
PIXf5_17_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x8000
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 jmp PIXf5_17_5
PIXf5_18_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_18_5
PIXf5_19_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 jmp PIXf5_19_5
PIXf5_20_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x172
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_369: mov edi, 0x173
 mov eax, 1
 call PCJMP_f5
BBf5_370: mov edi, 0x174
 mov eax, 1
 call PCJMP_f5
BBf5_371: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_20_5
PIXf5_21_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 jmp PIXf5_21_5
PIXf5_22_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_22_5
PIXf5_23_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_23_5
PIXf5_24_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_24_5
PIXf5_25_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 jmp PIXf5_25_5
PIXf5_26_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_479: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_26_5
PIXf5_27_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0x6c
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 jmp PIXf5_27_5
PIXf5_28_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 jmp PIXf5_28_5
PIXf5_29_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffda
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_29_5
PIXf5_30_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffeff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffff00
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_30_5
PIXf5_31_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f5
BBf5_564: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 jmp PIXf5_31_5
PIXf5_32_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x24b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_586: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x13f
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_32_5
PIXf5_33_4: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_33_5
PIXf5_0_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 jmp PIXf5_0_6
PIXf5_1_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
BBf5_11: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_1_6
PIXf5_2_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_2_6
PIXf5_3_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x2a
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x1
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_3_6
PIXf5_4_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x43
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_66: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 jmp PIXf5_4_6
PIXf5_5_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_90: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_5_6
PIXf5_6_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_6_6
PIXf5_7_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
BBf5_130: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x84
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_131: mov edi, 0x85
 jmp PIXf5_7_6
PIXf5_8_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_8_6
PIXf5_9_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xd
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 jmp PIXf5_9_6
PIXf5_10_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_6
PIXf5_11_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_b], eax
BBf5_208: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_209: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_11_6
PIXf5_12_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0xe5
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_228: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_12_6
PIXf5_13_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0xfd
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_249: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_13_6
PIXf5_14_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_14_6
PIXf5_15_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f5
BBf5_293: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_15_6
PIXf5_16_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_310: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 jmp PIXf5_16_6
PIXf5_17_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x142
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_321: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_17_6
PIXf5_18_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 jmp PIXf5_18_6
PIXf5_19_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
BBf5_349: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_19_6
PIXf5_20_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x170
 mov eax, 1
 call PCJMP_f5
BBf5_372: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 jmp PIXf5_20_6
PIXf5_21_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x184
 mov eax, 1
 call PCJMP_f5
BBf5_398: mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_21_6
PIXf5_22_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_424: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_22_6
PIXf5_23_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_23_6
PIXf5_24_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 jmp PIXf5_24_6
PIXf5_25_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 jmp PIXf5_25_6
PIXf5_26_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_26_6
PIXf5_27_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x1f4
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_499: mov edi, 0x201
 mov eax, 1
 call PCJMP_f5
BBf5_500: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffdb
 jmp PIXf5_27_6
PIXf5_28_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 jmp PIXf5_28_6
PIXf5_29_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_533: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_29_6
PIXf5_30_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffeff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_30_6
PIXf5_31_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_565: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_31_6
PIXf5_32_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_587: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_32_6
PIXf5_33_5: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_33_6
PIXf5_0_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_0_7
PIXf5_1_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0xd
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_12: mov edi, 0xe
 mov eax, 1
 call PCJMP_f5
BBf5_13: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_1_7
PIXf5_2_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_24: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov edi, 0x1a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_25: mov edi, 0x1c
 mov eax, 1
 call PCJMP_f5
BBf5_26: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_2_7
PIXf5_3_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_42: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_3_7
PIXf5_4_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_4_7
PIXf5_5_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x4f
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_5_7
PIXf5_6_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_6_7
PIXf5_7_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_7_7
PIXf5_8_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_8_7
PIXf5_9_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_163: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0xa5
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_164: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_9_7
PIXf5_10_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
BBf5_184: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_185: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_10_7
PIXf5_11_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_210: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_211: mov eax, dword [reg_sp]
 jmp PIXf5_11_7
PIXf5_12_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_12_7
PIXf5_13_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x30
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0xfb
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_250: mov dword [reg_a], 0x8
 mov edi, 0xfc
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_13_7
PIXf5_14_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x115
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f5
BBf5_277: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_14_7
PIXf5_15_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_294: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_295: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_15_7
PIXf5_16_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 jmp PIXf5_16_7
PIXf5_17_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 jmp PIXf5_17_7
PIXf5_18_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
BBf5_337: mov edi, 0x13a
 mov eax, 1
 call PCJMP_f5
BBf5_338: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_18_7
PIXf5_19_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x159
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_19_7
PIXf5_20_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x176
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_373: mov edi, 0x177
 mov eax, 1
 call PCJMP_f5
BBf5_374: mov edi, 0x179
 mov eax, 1
 call PCJMP_f5
BBf5_375: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_20_7
PIXf5_21_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_399: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_400: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_21_7
PIXf5_22_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 jmp PIXf5_22_7
PIXf5_23_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 jmp PIXf5_23_7
PIXf5_24_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 jmp PIXf5_24_7
PIXf5_25_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 jmp PIXf5_25_7
PIXf5_26_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_26_7
PIXf5_27_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_27_7
PIXf5_28_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_28_7
PIXf5_29_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x1e9
 mov eax, 1
 call PCJMP_f5
BBf5_534: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_29_7
PIXf5_30_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_30_7
PIXf5_31_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x237
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_566: mov edi, 0x238
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_31_7
PIXf5_32_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_32_7
PIXf5_33_6: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_608: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_33_7
PIXf5_0_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 jmp PIXf5_0_8
PIXf5_1_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x9
 mov eax, 1
 call PCJMP_f5
BBf5_14: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_1_8
PIXf5_2_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_27: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 jmp PIXf5_2_8
PIXf5_3_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_43: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_44: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_3_8
PIXf5_4_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x1
 mov edi, 0x44
 mov eax, 1
 call PCJMP_f5
BBf5_67: mov dword [reg_a], 0x0
BBf5_68: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 jmp PIXf5_4_8
PIXf5_5_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_91: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 jmp PIXf5_5_8
PIXf5_6_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_113: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_6_8
PIXf5_7_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_7_8
PIXf5_8_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x94
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
 jmp PIXf5_8_8
PIXf5_9_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_8
PIXf5_10_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_186: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 jmp PIXf5_10_8
PIXf5_11_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_11_8
PIXf5_12_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
BBf5_229: mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 jmp PIXf5_12_8
PIXf5_13_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_251: mov dword [reg_a], 0xa
BBf5_252: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_253: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x101
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_254: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_13_8
PIXf5_14_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_14_8
PIXf5_15_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 jmp PIXf5_15_8
PIXf5_16_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x2
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_16_8
PIXf5_17_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x143
 mov eax, 1
 call PCJMP_f5
BBf5_322: mov edi, 0x144
 mov eax, 1
 call PCJMP_f5
BBf5_323: mov edi, 0x13f
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_17_8
PIXf5_18_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_18_8
PIXf5_19_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_350: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 jmp PIXf5_19_8
PIXf5_20_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_20_8
PIXf5_21_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_401: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_21_8
PIXf5_22_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1a9
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_22_8
PIXf5_23_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_23_8
PIXf5_24_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x1ca
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_455: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_24_8
PIXf5_25_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_25_8
PIXf5_26_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_26_8
PIXf5_27_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x64
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1f6
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_501: mov edi, 0x202
 mov eax, 1
 call PCJMP_f5
BBf5_502: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffdb
 jmp PIXf5_27_8
PIXf5_28_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f5
BBf5_520: mov dword [reg_a], 0x25
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_28_8
PIXf5_29_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_29_8
PIXf5_30_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffff00
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x223
 mov eax, dword [reg_sp]
 jmp PIXf5_30_8
PIXf5_31_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_567: mov edi, 0x23a
 mov eax, 1
 call PCJMP_f5
BBf5_568: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_31_8
PIXf5_32_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_588: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_589: mov eax, dword [reg_sp]
 jmp PIXf5_32_8
PIXf5_33_7: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_609: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov dword [reg_a], 0x141
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x262
 jmp PIXf5_33_8
PIXf5_0_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffce
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 jmp PIXf5_0_9
PIXf5_1_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_1_9
PIXf5_2_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x16
 mov eax, 1
 call PCJMP_f5
BBf5_28: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcb
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 jmp PIXf5_2_9
PIXf5_3_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x5
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_3_9
PIXf5_4_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 jmp PIXf5_4_9
PIXf5_5_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_92: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_93: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_5_9
PIXf5_6_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_6_9
PIXf5_7_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_132: mov edi, 0x87
 mov eax, 1
 call PCJMP_f5
BBf5_133: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_7_9
PIXf5_8_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_147: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_8_9
PIXf5_9_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x9
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 jmp PIXf5_9_9
PIXf5_10_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0x41
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_10_9
PIXf5_11_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_212: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_11_9
PIXf5_12_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_230: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_231: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 jmp PIXf5_12_9
PIXf5_13_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffff9
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x100
 cmp dword [reg_a], 0x0
 sete  al
 jmp PIXf5_13_9
PIXf5_14_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_14_9
PIXf5_15_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_296: mov dword [reg_a], 0x30
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_15_9
PIXf5_16_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x137
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x24
 mov eax, 1
 jmp PIXf5_16_9
PIXf5_17_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_324: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_17_9
PIXf5_18_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_18_9
PIXf5_19_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_351: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_352: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_19_9
PIXf5_20_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
BBf5_376: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_20_9
PIXf5_21_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0x193
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_402: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_21_9
PIXf5_22_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x168
 mov eax, 1
 call PCJMP_f5
BBf5_425: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_22_9
PIXf5_23_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_443: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 jmp PIXf5_23_9
PIXf5_24_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_24_9
PIXf5_25_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1d2
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_465: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_25_9
PIXf5_26_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_480: mov edi, 0x1db
 mov eax, 1
 call PCJMP_f5
BBf5_481: mov edi, 0x1e3
 jmp PIXf5_26_9
PIXf5_27_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x75
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 jmp PIXf5_27_9
PIXf5_28_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_28_9
PIXf5_29_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_29_9
PIXf5_30_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_547: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffeff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_30_9
PIXf5_31_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_31_9
PIXf5_32_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_32_9
PIXf5_33_8: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x225
 mov eax, 1
 call PCJMP_f5
BBf5_610: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
BBf5_611: nop
 call PCJMP_f5
 call PCJMP_f5
 add dword [reg_b], 0x2
 mov eax, 1
 mov eax, 1
 jmp PIXf5_33_9
PIXf5_0_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffce
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_0_10
PIXf5_1_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_1_10
PIXf5_2_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_29: mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffcd
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_2_10
PIXf5_3_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_45: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x18
 mov eax, dword [reg_a]
 jmp PIXf5_3_10
PIXf5_4_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x46
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_69: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_4_10
PIXf5_5_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 jmp PIXf5_5_10
PIXf5_6_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_6_10
PIXf5_7_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, 0x4
 mov ecx, reg_a
 int 0x80
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
BBf5_134: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 jmp PIXf5_7_10
PIXf5_8_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_148: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 sub dword [reg_a], 0x1
 jmp PIXf5_8_10
PIXf5_9_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
BBf5_165: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0xa7
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_166: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xb
 jmp PIXf5_9_10
PIXf5_10_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x0
 mov edi, 0xbc
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_187: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_10_10
PIXf5_11_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov dword [reg_b], 0x148
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_b], 0x148
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_11_10
PIXf5_12_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_12_10
PIXf5_13_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_255: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffff9
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_13_10
PIXf5_14_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_278: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_14_10
PIXf5_15_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_15_10
PIXf5_16_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_311: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_16_10
PIXf5_17_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x146
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_325: mov edi, 0x152
 mov eax, 1
 call PCJMP_f5
BBf5_326: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 jmp PIXf5_17_10
PIXf5_18_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 jmp PIXf5_18_10
PIXf5_19_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_353: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_19_10
PIXf5_20_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_20_10
PIXf5_21_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_403: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x0
 mov edi, 0x195
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_404: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_21_10
PIXf5_22_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 jmp PIXf5_22_10
PIXf5_23_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_23_10
PIXf5_24_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 jmp PIXf5_24_10
PIXf5_25_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_25_10
PIXf5_26_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_482: mov edi, 0x1e4
 mov eax, 1
 call PCJMP_f5
BBf5_483: mov edi, 0x1d9
 mov eax, 1
 call PCJMP_f5
BBf5_484: mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_26_10
PIXf5_27_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov edi, 0x1f8
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_503: mov edi, 0x202
 mov eax, 1
 call PCJMP_f5
BBf5_504: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffdb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x78
 jmp PIXf5_27_10
PIXf5_28_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 jmp PIXf5_28_10
PIXf5_29_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_29_10
PIXf5_30_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_548: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 jmp PIXf5_30_10
PIXf5_31_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, 0x4
 mov ecx, reg_a
 int 0x80
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_31_10
PIXf5_32_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, 0x4
 mov ecx, reg_a
 int 0x80
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_32_10
PIXf5_33_9: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], eax
 mov dword [reg_b], eax
 mov eax, 1
 call PCJMP_f5
 and dword [reg_b], 0xffffff
 call PCJMP_f5
 cmp dword [reg_a], 0x0
 and dword [reg_sp], 0xffffff
 call PCJMP_f5
 add dword [reg_d], 0xffffff
 cmp dword [reg_a], 0x0
 mov eax, dword [reg_b]
 mov eax, 1
 mov dword [reg_b], eax
 mov dword [reg_sp], eax
 mov eax, dword [mem + 4*eax]
 add dword [reg_sp], 0x1
 mov eax, dword [reg_a]
 mov eax, dword [reg_sp]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov dword [reg_b], eax
 mov ecx, dword [reg_b]
 jmp PIXf5_33_10
PIXf5_0_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0x4
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_3: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffce
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_0_11
PIXf5_1_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_1_11
PIXf5_2_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_2_11
PIXf5_3_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x2f
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_46: mov edi, 0x30
 mov eax, 1
 call PCJMP_f5
BBf5_47: mov edi, 0x3b
 mov eax, 1
 call PCJMP_f5
BBf5_48: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov dword [reg_a], 0x0
 jmp PIXf5_3_11
PIXf5_4_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_4_11
PIXf5_5_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_94: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x18
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_5_11
PIXf5_6_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_6_11
PIXf5_7_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x82
 mov eax, 1
 call PCJMP_f5
BBf5_135: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_7_11
PIXf5_8_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x10
 jmp PIXf5_8_11
PIXf5_9_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_167: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0xa9
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
 jmp PIXf5_9_11
PIXf5_10_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0x5a
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_188: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 jmp PIXf5_10_11
PIXf5_11_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_11_11
PIXf5_12_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_12_11
PIXf5_13_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffff9
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_13_11
PIXf5_14_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_14_11
PIXf5_15_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_15_11
PIXf5_16_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x138
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_16_11
PIXf5_17_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_327: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_17_11
PIXf5_18_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_18_11
PIXf5_19_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x163
 jmp PIXf5_19_11
PIXf5_20_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x174
 jmp PIXf5_20_11
PIXf5_21_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 jmp PIXf5_21_11
PIXf5_22_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1aa
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f5
BBf5_426: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_22_11
PIXf5_23_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_444: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_23_11
PIXf5_24_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x1c9
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_456: mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_457: mov edi, 0x1cb
 jmp PIXf5_24_11
PIXf5_25_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_25_11
PIXf5_26_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_485: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_486: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 jmp PIXf5_26_11
PIXf5_27_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1fa
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_505: mov edi, 0x204
 mov eax, 1
 call PCJMP_f5
BBf5_506: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffdb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_27_11
PIXf5_28_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 jmp PIXf5_28_11
PIXf5_29_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_535: mov eax, dword [reg_bp]
 jmp PIXf5_29_11
PIXf5_30_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_549: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0x2
 and dword [reg_a], 0xffffff
 jmp PIXf5_30_11
PIXf5_31_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_569: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_31_11
PIXf5_32_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_590: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_591: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_32_11
PIXf5_33_10: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 mov eax, dword [mem + 4*eax]
 add dword [reg_b], 0xffffda
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 call PCJMP_f5
 mov dword [reg_b], eax
 mov dword [reg_d], eax
 mov eax, dword [reg_a]
 and dword [reg_sp], 0xffffff
 add dword [reg_d], 0xffffff
 mov eax, 1
 mov eax, dword [reg_sp]
 mov dword [reg_sp], eax
 mov dword [reg_a], eax
 mov eax, dword [mem + 4*eax]
 mov eax, dword [reg_sp]
 mov eax, dword [reg_b]
 mov eax, 1
 add dword [reg_d], 0xffffff
 mov dword [mem + 4*ecx], eax
 mov dword [reg_d], eax
 mov eax, dword [mem + 4*eax]
 mov dword [mem + 4*ecx], eax
 call PCJMP_f5
 jmp PIXf5_33_11
PIXf5_0_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 jmp PIXf5_0_12
PIXf5_1_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_15: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 jmp PIXf5_1_12
PIXf5_2_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_2_12
PIXf5_3_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_3_12
PIXf5_4_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x1
 mov edi, 0x47
 mov eax, 1
 call PCJMP_f5
BBf5_70: mov dword [reg_a], 0x0
BBf5_71: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 jmp PIXf5_4_12
PIXf5_5_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x60
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_95: mov edi, 0x61
 mov eax, 1
 call PCJMP_f5
BBf5_96: mov edi, 0x67
 mov eax, 1
 call PCJMP_f5
BBf5_97: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_5_12
PIXf5_6_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_114: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_6_12
PIXf5_7_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_136: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_7_12
PIXf5_8_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_8_12
PIXf5_9_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_168: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x20
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_9_12
PIXf5_10_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_189: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_10_12
PIXf5_11_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x148
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_b], 0x148
 mov eax, dword [reg_b]
 jmp PIXf5_11_12
PIXf5_12_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xe8
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x9f
 mov eax, 1
 call PCJMP_f5
BBf5_232: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0xea
 cmp dword [reg_a], 0x0
 sete  al
 jmp PIXf5_12_12
PIXf5_13_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 jmp PIXf5_13_12
PIXf5_14_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x102
 mov eax, 1
 call PCJMP_f5
BBf5_279: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_14_12
PIXf5_15_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x0
 mov edi, 0x12a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_297: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_15_12
PIXf5_16_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f5
BBf5_312: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 jmp PIXf5_16_12
PIXf5_17_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x149
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_328: mov edi, 0x14a
 mov eax, 1
 call PCJMP_f5
BBf5_329: mov edi, 0x14c
 mov eax, 1
 call PCJMP_f5
BBf5_330: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 jmp PIXf5_17_12
PIXf5_18_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_18_12
PIXf5_19_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_354: mov edi, 0x164
 mov eax, 1
 call PCJMP_f5
BBf5_355: mov edi, 0x166
 mov eax, 1
 call PCJMP_f5
BBf5_356: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_19_12
PIXf5_20_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_377: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_20_12
PIXf5_21_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_b], eax
BBf5_405: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov edi, 0x197
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_406: mov edi, 0x198
 mov eax, 1
 call PCJMP_f5
BBf5_407: mov edi, 0x19d
 mov eax, 1
 call PCJMP_f5
BBf5_408: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_21_12
PIXf5_22_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_22_12
PIXf5_23_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 jmp PIXf5_23_12
PIXf5_24_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_458: mov edi, 0x1cc
 mov eax, 1
 call PCJMP_f5
BBf5_459: mov edi, 0x1c6
 mov eax, 1
 call PCJMP_f5
BBf5_460: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_24_12
PIXf5_25_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_25_12
PIXf5_26_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1e7
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_26_12
PIXf5_27_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x73
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1fc
 cmp dword [reg_a], 0x0
 sete  al
 jmp PIXf5_27_12
PIXf5_28_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_28_12
PIXf5_29_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_536: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_29_12
PIXf5_30_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_30_12
PIXf5_31_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x235
 mov eax, 1
 call PCJMP_f5
BBf5_570: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_31_12
PIXf5_32_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, 0x4
 mov ecx, reg_a
 int 0x80
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_32_12
PIXf5_33_11: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov eax, dword [reg_a]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 call PCJMP_f5
 mov eax, 1
 and dword [reg_sp], 0xffffff
 add dword [reg_d], 0xffffff
 mov eax, dword [reg_d]
 mov eax, dword [reg_a]
 sete  al
 and dword [reg_b], 0xffffff
 add dword [reg_sp], 0x1
 mov eax, 1
 call PCJMP_f5
 and dword [reg_b], 0xffffff
 and dword [reg_sp], 0xffffff
 mov dword [reg_b], 0x1
 call PCJMP_f5
 mov dword [reg_a], 0x219
 add dword [reg_sp], 0x1
 mov dword [mem + 4*ecx], eax
 cmp dword [reg_a], 0x0
 mov ecx, dword [reg_d]
 jmp PIXf5_33_12
PIXf5_0_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_b], eax
BBf5_4: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov edi, 0x6
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_5: mov edi, 0x8
 mov eax, 1
 call PCJMP_f5
BBf5_6: mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffd0
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_0_13
PIXf5_1_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x35
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_1_13
PIXf5_2_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1f
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_30: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_2_13
PIXf5_3_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_3_13
PIXf5_4_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x49
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_72: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_73: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov edi, 0x4b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_74: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_4_13
PIXf5_5_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_5_13
PIXf5_6_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x6a
 mov eax, 1
 call PCJMP_f5
BBf5_115: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_6_13
PIXf5_7_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_7_13
PIXf5_8_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0x95
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f5
BBf5_149: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_8_13
PIXf5_9_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_169: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_9_13
PIXf5_10_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_190: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov dword [reg_a], 0x61
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_10_13
PIXf5_11_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_11_13
PIXf5_12_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_233: mov edi, 0xe7
 mov eax, 1
 call PCJMP_f5
BBf5_234: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x2d
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_12_13
PIXf5_13_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
BBf5_256: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffff9
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_13_13
PIXf5_14_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x11c
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_280: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_14_13
PIXf5_15_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_15_13
PIXf5_16_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_16_13
PIXf5_17_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_17_13
PIXf5_18_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x153
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_18_13
PIXf5_19_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 jmp PIXf5_19_13
PIXf5_20_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_378: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_379: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 jmp PIXf5_20_13
PIXf5_21_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_21_13
PIXf5_22_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1ab
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_22_13
PIXf5_23_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_23_13
PIXf5_24_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_24_13
PIXf5_25_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a]
 jmp PIXf5_25_13
PIXf5_26_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_487: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0xa
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, 0x4
 jmp PIXf5_26_13
PIXf5_27_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_507: mov edi, 0x206
 mov eax, 1
 call PCJMP_f5
BBf5_508: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffdb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x63
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_27_13
PIXf5_28_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 jmp PIXf5_28_13
PIXf5_29_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_29_13
PIXf5_30_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x226
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_30_13
PIXf5_31_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_571: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 jmp PIXf5_31_13
PIXf5_32_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_592: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_32_13
PIXf5_33_12: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 mov eax, dword [reg_bp]
 mov eax, 1
 mov dword [reg_b], eax
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 mov edi, 0x9d
 mov ecx, dword [reg_b]
 sete  al
 and dword [reg_b], 0xffffff
 add dword [reg_sp], 0x1
 mov dword [reg_b], eax
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [mem + 4*eax]
 mov eax, 1
 add dword [reg_sp], 0x1
 mov dword [reg_a], eax
 mov dword [reg_b], eax
 mov eax, 1
 add dword [reg_b], 0x4
 mov eax, 1
 mov eax, dword [mem + 4*eax]
 mov eax, 1
 jmp PIXf5_33_13
PIXf5_0_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 jmp PIXf5_0_14
PIXf5_1_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x11
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_16: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 jmp PIXf5_1_14
PIXf5_2_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffe5
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_2_14
PIXf5_3_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_3_14
PIXf5_4_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_4_14
PIXf5_5_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 jmp PIXf5_5_14
PIXf5_6_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_116: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_6_14
PIXf5_7_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
BBf5_137: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_7_14
PIXf5_8_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xa
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 jmp PIXf5_8_14
PIXf5_9_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_14
PIXf5_10_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x0
 mov edi, 0xc0
 cmp dword [reg_a], 0x0
 sete  al
 jmp PIXf5_10_14
PIXf5_11_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_11_14
PIXf5_12_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0xec
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_235: mov dword [reg_a], 0x1
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_12_14
PIXf5_13_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffff9
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_257: mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 jmp PIXf5_13_14
PIXf5_14_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x11a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_281: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_14_14
PIXf5_15_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_15_14
PIXf5_16_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_16_14
PIXf5_17_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_17_14
PIXf5_18_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f5
BBf5_339: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 jmp PIXf5_18_14
PIXf5_19_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_19_14
PIXf5_20_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_20_14
PIXf5_21_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x19a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_409: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 jmp PIXf5_21_14
PIXf5_22_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x17b
 mov eax, 1
 call PCJMP_f5
BBf5_427: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 jmp PIXf5_22_14
PIXf5_23_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1c1
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_445: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_23_14
PIXf5_24_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_24_14
PIXf5_25_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 jmp PIXf5_25_14
PIXf5_26_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, reg_a
 int 0x80
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_488: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_26_14
PIXf5_27_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1fe
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_509: mov edi, 0x207
 mov eax, 1
 call PCJMP_f5
BBf5_510: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffdb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_27_14
PIXf5_28_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f5
BBf5_521: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 jmp PIXf5_28_14
PIXf5_29_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x100
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_29_14
PIXf5_30_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f5
BBf5_550: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_30_14
PIXf5_31_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_572: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_31_14
PIXf5_32_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_593: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_32_14
PIXf5_33_13: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov dword [reg_a], eax
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 call PCJMP_f5
 mov ebx, 0x0
 mov eax, dword [reg_d]
 mov dword [reg_b], eax
 mov eax, 1
 mov dword [reg_a], eax
 call PCJMP_f5
 mov dword [mem + 4*ecx], eax
 mov eax, dword [mem + 4*eax]
 mov eax, 1
 mov eax, dword [mem + 4*eax]
 mov eax, dword [reg_sp]
 add dword [reg_sp], 0x1
 mov eax, dword [mem + 4*eax]
 mov eax, 1
 mov eax, dword [reg_d]
 mov eax, dword [reg_d]
 add dword [reg_sp], 0x1
 mov eax, 1
 mov dword [reg_b], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_33_14
PIXf5_0_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_0_15
PIXf5_1_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_1_15
PIXf5_2_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_2_15
PIXf5_3_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x32
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
 jmp PIXf5_3_15
PIXf5_4_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_75: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_4_15
PIXf5_5_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_5_15
PIXf5_6_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_117: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x4
 jmp PIXf5_6_15
PIXf5_7_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xa
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_7_15
PIXf5_8_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_8_15
PIXf5_9_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_170: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_171: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_9_15
PIXf5_10_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_191: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x7a
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_10_15
PIXf5_11_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0xd7
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_213: mov dword [reg_a], 0x18
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xd6
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_11_15
PIXf5_12_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_12_15
PIXf5_13_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
BBf5_258: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x103
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_13_15
PIXf5_14_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 jmp PIXf5_14_15
PIXf5_15_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x39
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_15_15
PIXf5_16_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_16_15
PIXf5_17_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_17_15
PIXf5_18_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x154
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_18_15
PIXf5_19_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_19_15
PIXf5_20_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_380: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x17e
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_381: mov edi, 0x17f
 mov eax, 1
 call PCJMP_f5
BBf5_382: mov edi, 0x181
 mov eax, 1
 call PCJMP_f5
BBf5_383: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 jmp PIXf5_20_15
PIXf5_21_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_21_15
PIXf5_22_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_428: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_22_15
PIXf5_23_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1bf
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_446: mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_23_15
PIXf5_24_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_24_15
PIXf5_25_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_25_15
PIXf5_26_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x26
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_26_15
PIXf5_27_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x25
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x200
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_511: mov edi, 0x208
 jmp PIXf5_27_15
PIXf5_28_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x20a
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_28_15
PIXf5_29_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x219
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f5
BBf5_537: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 jmp PIXf5_29_15
PIXf5_30_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_551: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_30_15
PIXf5_31_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x23d
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_573: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_31_15
PIXf5_32_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 jmp PIXf5_32_15
PIXf5_33_14: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_d], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 movzx eax, al
 mov eax, dword [reg_sp]
 and dword [reg_sp], 0xffffff
 mov eax, dword [mem + 4*eax]
 mov eax, 1
 add dword [reg_sp], 0x1
 add dword [reg_sp], 0x1
 mov eax, dword [reg_a]
 mov eax, dword [mem + 4*eax]
 mov eax, dword [reg_a]
 mov dword [reg_sp], eax
 mov dword [reg_d], eax
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov dword [mem + 4*ecx], eax
 and dword [reg_sp], 0xffffff
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_33_15
PIXf5_0_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffd0
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcf
 jmp PIXf5_0_16
PIXf5_1_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_17: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_1_16
PIXf5_2_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_2_16
PIXf5_3_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_49: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_3_16
PIXf5_4_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x3e
 mov eax, 1
 call PCJMP_f5
BBf5_76: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 jmp PIXf5_4_16
PIXf5_5_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x63
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_98: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 jmp PIXf5_5_16
PIXf5_6_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 jmp PIXf5_6_16
PIXf5_7_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x8a
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x29
 mov eax, 1
 call PCJMP_f5
BBf5_138: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 jmp PIXf5_7_16
PIXf5_8_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 setb  al
 jmp PIXf5_8_16
PIXf5_9_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov dword [reg_a], 0x30
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_9_16
PIXf5_10_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_16
PIXf5_11_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_214: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x1
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp], 0x1
 jmp PIXf5_11_16
PIXf5_12_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0xee
 mov eax, 1
 call PCJMP_f5
BBf5_236: mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_12_16
PIXf5_13_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f5
BBf5_259: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x105
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_260: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_13_16
PIXf5_14_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov edi, 0x11b
 mov eax, 1
 call PCJMP_f5
BBf5_282: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
BBf5_283: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_14_16
PIXf5_15_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_298: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov edi, 0x12e
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_299: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_15_16
PIXf5_16_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 jmp PIXf5_16_16
PIXf5_17_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_17_16
PIXf5_18_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_340: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_18_16
PIXf5_19_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_19_16
PIXf5_20_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_20_16
PIXf5_21_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_410: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_21_16
PIXf5_22_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_429: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_22_16
PIXf5_23_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x1c0
 mov eax, 1
 call PCJMP_f5
BBf5_447: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_23_16
PIXf5_24_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_24_16
PIXf5_25_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_466: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_25_16
PIXf5_26_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_489: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_26_16
PIXf5_27_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_512: mov edi, 0x209
 mov eax, 1
 call PCJMP_f5
BBf5_513: mov edi, 0x1f2
 mov eax, 1
 call PCJMP_f5
BBf5_514: mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_27_16
PIXf5_28_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x8f
 mov eax, 1
 call PCJMP_f5
BBf5_522: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x124
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x20b
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_28_16
PIXf5_29_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_538: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_29_16
PIXf5_30_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_552: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0x3
 jmp PIXf5_30_16
PIXf5_31_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_574: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_31_16
PIXf5_32_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x253
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_594: mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 jmp PIXf5_32_16
PIXf5_33_15: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
 and dword [reg_d], 0xffffff
 add dword [reg_d], 0xffffff
 call PCJMP_f5
 and dword [reg_a], 0xffffff
 mov dword [reg_sp], eax
 mov dword [reg_b], eax
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov dword [reg_c], eax
 mov dword [reg_sp], eax
 mov dword [reg_d], eax
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_d]
 add dword [reg_sp], 0x1
 and dword [reg_b], 0xffffff
 mov eax, 1
 mov dword [reg_a], eax
 mov eax, dword [mem + 4*eax]
 mov dword [mem + 4*ecx], eax
 mov ecx, dword [reg_b]
 and dword [reg_b], 0xffffff
 mov dword [reg_b], eax
 mov dword [mem + 4*ecx], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_33_16
PIXf5_0_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 jmp PIXf5_0_17
PIXf5_1_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x13
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_18: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 jmp PIXf5_1_17
PIXf5_2_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffcd
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_2_17
PIXf5_3_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x1
 mov edi, 0x33
 mov eax, 1
 call PCJMP_f5
BBf5_50: mov dword [reg_a], 0x0
BBf5_51: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_3_17
PIXf5_4_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_77: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_4_17
PIXf5_5_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_5_17
PIXf5_6_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_118: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x18
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_6_17
PIXf5_7_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x30
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_7_17
PIXf5_8_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x97
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_150: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x30
 mov eax, dword [reg_a]
 jmp PIXf5_8_17
PIXf5_9_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x0
 mov edi, 0xad
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_172: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_9_17
PIXf5_10_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_17
PIXf5_11_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
BBf5_215: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 jmp PIXf5_11_17
PIXf5_12_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x2b
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 jmp PIXf5_12_17
PIXf5_13_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x30
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_13_17
PIXf5_14_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
BBf5_284: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_14_17
PIXf5_15_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x3
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_15_17
PIXf5_16_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_16_17
PIXf5_17_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_17_17
PIXf5_18_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_18_17
PIXf5_19_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
BBf5_357: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 jmp PIXf5_19_17
PIXf5_20_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
BBf5_384: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_20_17
PIXf5_21_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x19c
 cmp dword [reg_a], 0x0
 sete  al
 jmp PIXf5_21_17
PIXf5_22_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x0
 mov edi, 0x1af
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_430: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 jmp PIXf5_22_17
PIXf5_23_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_23_17
PIXf5_24_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 jmp PIXf5_24_17
PIXf5_25_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_25_17
PIXf5_26_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x1eb
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_490: mov edi, 0x1ec
 mov eax, 1
 call PCJMP_f5
BBf5_491: mov edi, 0x216
 mov eax, 1
 call PCJMP_f5
BBf5_492: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 jmp PIXf5_26_17
PIXf5_27_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x20
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_27_17
PIXf5_28_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_523: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_28_17
PIXf5_29_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_539: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x2
 jmp PIXf5_29_17
PIXf5_30_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_30_17
PIXf5_31_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], 0x13f
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 jmp PIXf5_31_17
PIXf5_32_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_595: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_596: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_32_17
PIXf5_33_16: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 and dword [reg_d], 0xffffff
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 mov dword [reg_a], eax
 mov eax, 1
 add dword [reg_b], 0xfffffe
 add dword [reg_sp], 0x1
 mov dword [reg_b], eax
 mov dword [reg_b], eax
 mov eax, 1
 mov ecx, dword [reg_d]
 mov dword [reg_b], eax
 and dword [reg_sp], 0xffffff
 cmp dword [reg_a], 0x0
 mov dword [reg_a], eax
 mov dword [reg_d], eax
 and dword [reg_sp], 0xffffff
 mov eax, 1
 mov eax, dword [reg_a]
 mov eax, 1
 mov eax, 1
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 and dword [reg_d], 0xffffff
 jmp PIXf5_33_17
PIXf5_0_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_0_18
PIXf5_1_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_19: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 jmp PIXf5_1_18
PIXf5_2_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_2_18
PIXf5_3_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 jmp PIXf5_3_18
PIXf5_4_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_78: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 jmp PIXf5_4_18
PIXf5_5_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x1
 mov edi, 0x64
 mov eax, 1
 call PCJMP_f5
BBf5_99: mov dword [reg_a], 0x0
BBf5_100: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_5_18
PIXf5_6_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x78
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_119: mov edi, 0x79
 mov eax, 1
 call PCJMP_f5
BBf5_120: mov edi, 0x7f
 mov eax, 1
 call PCJMP_f5
BBf5_121: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_6_18
PIXf5_7_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_7_18
PIXf5_8_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov edi, 0x98
 mov eax, 1
 call PCJMP_f5
BBf5_151: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_8_18
PIXf5_9_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x39
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 jmp PIXf5_9_18
PIXf5_10_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_192: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0xc4
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_193: mov dword [reg_a], 0x41
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_10_18
PIXf5_11_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_216: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_217: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 jmp PIXf5_11_18
PIXf5_12_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0xee
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_237: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 jmp PIXf5_12_18
PIXf5_13_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_261: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x106
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_13_18
PIXf5_14_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_285: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_14_18
PIXf5_15_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x12c
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f5
BBf5_300: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_15_18
PIXf5_16_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x139
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f5
BBf5_313: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_16_18
PIXf5_17_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_17_18
PIXf5_18_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_18_18
PIXf5_19_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_19_18
PIXf5_20_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 jmp PIXf5_20_18
PIXf5_21_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_411: mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_412: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 jmp PIXf5_21_18
PIXf5_22_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_22_18
PIXf5_23_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_23_18
PIXf5_24_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_24_18
PIXf5_25_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1d4
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_467: mov edi, 0x1d6
 mov eax, 1
 call PCJMP_f5
BBf5_468: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_25_18
PIXf5_26_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x25
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 jmp PIXf5_26_18
PIXf5_27_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_27_18
PIXf5_28_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x20c
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_524: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x129
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_28_18
PIXf5_29_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0x4
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_29_18
PIXf5_30_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x229
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_30_18
PIXf5_31_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x244
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
 jmp PIXf5_31_18
PIXf5_32_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_32_18
PIXf5_33_17: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov dword [reg_a], eax
 mov dword [reg_sp], eax
 mov dword [reg_a], eax
 and dword [reg_sp], 0xffffff
 and dword [reg_d], 0xffffff
 mov dword [reg_sp], eax
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 call PCJMP_f5
 mov eax, dword [reg_a]
 call PCJMP_f5
 mov eax, 1
 cmp dword [reg_a], 0x0
 mov eax, 1
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [reg_a]
 mov edi, 0x1eb
 mov eax, dword [reg_bp]
 and dword [reg_b], 0xffffff
 mov ecx, dword [reg_d]
 mov eax, dword [reg_a]
 jmp PIXf5_33_18
PIXf5_0_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffd0
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 jmp PIXf5_0_19
PIXf5_1_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 jmp PIXf5_1_19
PIXf5_2_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_2_19
PIXf5_3_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x35
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_52: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_3_19
PIXf5_4_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sub dword [reg_sp], 0x5
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_79: mov eax, dword [reg_bp]
 jmp PIXf5_4_19
PIXf5_5_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 cmp dword [reg_a], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x66
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_101: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_5_19
PIXf5_6_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_6_19
PIXf5_7_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xa
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_7_19
PIXf5_8_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xa
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x61
 mov eax, dword [reg_a]
 jmp PIXf5_8_19
PIXf5_9_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_b], eax
BBf5_173: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_174: mov eax, dword [reg_bp]
 jmp PIXf5_9_19
PIXf5_10_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x0
 mov edi, 0xc3
 jmp PIXf5_10_19
PIXf5_11_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 jmp PIXf5_11_19
PIXf5_12_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_238: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_12_19
PIXf5_13_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f5
BBf5_262: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x10c
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_263: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_13_19
PIXf5_14_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_286: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_14_19
PIXf5_15_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_15_19
PIXf5_16_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_314: mov dword [reg_a], 0x8000
 jmp PIXf5_16_19
PIXf5_17_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 jmp PIXf5_17_19
PIXf5_18_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_18_19
PIXf5_19_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov edi, 0x161
 mov eax, 1
 call PCJMP_f5
BBf5_358: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_19_19
PIXf5_20_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_20_19
PIXf5_21_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_21_19
PIXf5_22_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_431: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov edi, 0x1b1
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
 jmp PIXf5_22_19
PIXf5_23_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
BBf5_448: mov eax, dword [reg_bp]
 jmp PIXf5_23_19
PIXf5_24_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_461: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_462: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_24_19
PIXf5_25_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 jmp PIXf5_25_19
PIXf5_26_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov edi, 0x1f2
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_493: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 cmp dword [reg_a], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1f1
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_494: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_26_19
PIXf5_27_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_27_19
PIXf5_28_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x20d
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x81
 mov eax, 1
 call PCJMP_f5
BBf5_525: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x1
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_28_19
PIXf5_29_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 jmp PIXf5_29_19
PIXf5_30_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f5
BBf5_553: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_554: mov eax, dword [reg_sp]
 jmp PIXf5_30_19
PIXf5_31_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_575: mov dword [reg_b], 0x140
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x241
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_576: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_31_19
PIXf5_32_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x25d
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_597: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_32_19
PIXf5_33_18: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
 mov eax, dword [reg_a]
 setbe al
 mov eax, dword [reg_sp]
 mov dword [reg_a], 0x1
 mov edi, 0x6
 mov eax, 1
 mov eax, dword [mem + 4*eax]
 mov eax, dword [reg_a]
 and dword [reg_sp], 0xffffff
 call PCJMP_f5
 call PCJMP_f5
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_b], 0xffffff
 mov eax, 1
 mov eax, dword [mem + 4*eax]
 mov eax, 1
 mov dword [reg_a], eax
 mov dword [reg_b], eax
 mov dword [reg_sp], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 add dword [reg_sp], 0x2
 jmp PIXf5_33_19
PIXf5_0_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_0_20
PIXf5_1_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov edi, 0x15
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_20: mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_1_20
PIXf5_2_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_31: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_2_20
PIXf5_3_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_3_20
PIXf5_4_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x18
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 jmp PIXf5_4_20
PIXf5_5_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 jmp PIXf5_5_20
PIXf5_6_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_6_20
PIXf5_7_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x8b
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_7_20
PIXf5_8_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
BBf5_152: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_8_20
PIXf5_9_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_175: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_9_20
PIXf5_10_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_194: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x5a
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_10_20
PIXf5_11_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_11_20
PIXf5_12_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 jmp PIXf5_12_20
PIXf5_13_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x108
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_13_20
PIXf5_14_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_14_20
PIXf5_15_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x12d
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_15_20
PIXf5_16_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_16_20
PIXf5_17_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_17_20
PIXf5_18_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x155
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f5
BBf5_341: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 jmp PIXf5_18_20
PIXf5_19_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_359: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_360: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_19_20
PIXf5_20_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x17c
 mov eax, 1
 call PCJMP_f5
BBf5_385: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_20_20
PIXf5_21_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_21_20
PIXf5_22_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_432: mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_433: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_22_20
PIXf5_23_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_23_20
PIXf5_24_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_24_20
PIXf5_25_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1d6
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_469: mov edi, 0x1d0
 mov eax, 1
 call PCJMP_f5
BBf5_470: mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_25_20
PIXf5_26_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_26_20
PIXf5_27_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_27_20
PIXf5_28_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, ebx
 mov ebx, 0x0
 int 0x80
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
BBf5_526: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_28_20
PIXf5_29_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_29_20
PIXf5_30_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_30_20
PIXf5_31_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_577: mov eax, 0x3
 mov ecx, reg_a
 jmp PIXf5_31_20
PIXf5_32_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x256
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_32_20
PIXf5_33_19: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_d]
 mov eax, 1
 mov eax, dword [mem + 4*eax]
 mov dword [reg_b], eax
 add dword [reg_d], 0xffffff
 call PCJMP_f5
 call PCJMP_f5
 sete  al
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, 1
 mov dword [reg_sp], eax
 mov eax, dword [mem + 4*eax]
 sete  al
 add dword [reg_sp], 0x1
 mov dword [reg_sp], eax
 and dword [reg_sp], 0xffffff
 cmp dword [reg_a], eax
 mov eax, 1
 mov eax, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a]
 and dword [reg_d], 0xffffff
 jmp PIXf5_33_20
PIXf5_0_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 jmp PIXf5_0_21
PIXf5_1_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_21: mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_1_21
PIXf5_2_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x21
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_32: mov edi, 0x22
 mov eax, 1
 jmp PIXf5_2_21
PIXf5_3_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x1
 mov edi, 0x36
 mov eax, 1
 call PCJMP_f5
BBf5_53: mov dword [reg_a], 0x0
BBf5_54: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 jmp PIXf5_3_21
PIXf5_4_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x51
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_80: mov edi, 0x52
 mov eax, 1
 call PCJMP_f5
BBf5_81: mov edi, 0x5b
 mov eax, 1
 call PCJMP_f5
BBf5_82: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_4_21
PIXf5_5_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_102: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 jmp PIXf5_5_21
PIXf5_6_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_6_21
PIXf5_7_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_7_21
PIXf5_8_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_8_21
PIXf5_9_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_21
PIXf5_10_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_195: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_196: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_10_21
PIXf5_11_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xda
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xf
 mov eax, 1
 call PCJMP_f5
BBf5_218: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_11_21
PIXf5_12_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0xf0
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_239: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x10
 mov eax, dword [reg_a]
 jmp PIXf5_12_21
PIXf5_13_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xba
 mov eax, 1
 call PCJMP_f5
BBf5_264: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x10a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_265: mov dword [reg_a], 0x41
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_13_21
PIXf5_14_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_14_21
PIXf5_15_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x69
 mov eax, 1
 call PCJMP_f5
BBf5_301: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 jmp PIXf5_15_21
PIXf5_16_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_21
PIXf5_17_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_17_21
PIXf5_18_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_18_21
PIXf5_19_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_19_21
PIXf5_20_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 jmp PIXf5_20_21
PIXf5_21_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 jmp PIXf5_21_21
PIXf5_22_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_22_21
PIXf5_23_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 jmp PIXf5_23_21
PIXf5_24_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_24_21
PIXf5_25_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_471: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_25_21
PIXf5_26_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 jmp PIXf5_26_21
PIXf5_27_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x203
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x88
 mov eax, 1
 call PCJMP_f5
BBf5_515: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_27_21
PIXf5_28_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x20f
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x168
 mov eax, 1
 call PCJMP_f5
BBf5_527: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffda
 jmp PIXf5_28_21
PIXf5_29_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x21c
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x1e8
 mov eax, 1
 call PCJMP_f5
BBf5_540: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 jmp PIXf5_29_21
PIXf5_30_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x22b
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_30_21
PIXf5_31_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 int 0x80
 mov edi, 0x243
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_578: mov dword [reg_a], 0xffffff
BBf5_579: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_31_21
PIXf5_32_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x23e
 mov eax, 1
 call PCJMP_f5
BBf5_598: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_32_21
PIXf5_33_20: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 mov dword [reg_bp], eax
 mov dword [mem + 4*ecx], eax
 mov eax, 1
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov edi, 0x12e
 mov dword [reg_sp], eax
 call PCJMP_f5
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 and dword [reg_b], 0xffffff
 mov eax, dword [mem + 4*eax]
 mov dword [mem + 4*ecx], eax
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 add dword [reg_d], 0xffffff
 sete  al
 mov ecx, dword [reg_b]
 mov dword [reg_b], eax
 add dword [reg_sp], 0x1
 mov eax, dword [reg_sp]
 mov eax, 1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_33_21
PIXf5_0_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffce
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_0_22
PIXf5_1_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_22: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffe5
 and dword [reg_a], 0xffffff
 jmp PIXf5_1_22
PIXf5_2_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_33: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 jmp PIXf5_2_22
PIXf5_3_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x0
 mov edi, 0x38
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_55: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_56: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov edi, 0x3a
 cmp dword [reg_a], 0x0
 sete  al
 jmp PIXf5_3_22
PIXf5_4_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_4_22
PIXf5_5_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x5e
 mov eax, 1
 call PCJMP_f5
BBf5_103: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_5_22
PIXf5_6_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_6_22
PIXf5_7_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f5
BBf5_139: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_7_22
PIXf5_8_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_8_22
PIXf5_9_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_22
PIXf5_10_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_10_22
PIXf5_11_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_11_22
PIXf5_12_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_240: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x0
 mov edi, 0xf2
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_241: mov eax, dword [reg_bp]
 jmp PIXf5_12_22
PIXf5_13_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0xa
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov edi, 0x10b
 mov eax, 1
 call PCJMP_f5
BBf5_266: mov dword [reg_a], 0x61
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xa
 jmp PIXf5_13_22
PIXf5_14_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_14_22
PIXf5_15_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_15_22
PIXf5_16_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_22
PIXf5_17_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_17_22
PIXf5_18_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_18_22
PIXf5_19_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_19_22
PIXf5_20_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_386: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_20_22
PIXf5_21_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_21_22
PIXf5_22_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_22_22
PIXf5_23_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_449: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_23_22
PIXf5_24_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_24_22
PIXf5_25_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_25_22
PIXf5_26_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x1f0
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_495: mov dword [reg_a], 0x1
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 jmp PIXf5_26_22
PIXf5_27_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f5
BBf5_516: mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffdd
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_27_22
PIXf5_28_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 cmp dword [reg_a], 0x0
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x214
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_528: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_28_22
PIXf5_29_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_29_22
PIXf5_30_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x221
 mov eax, 1
 call PCJMP_f5
BBf5_555: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_30_22
PIXf5_31_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 jmp PIXf5_31_22
PIXf5_32_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 jmp PIXf5_32_22
PIXf5_33_21: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 call PCJMP_f5
 call PCJMP_f5
 mov dword [reg_sp], eax
 add dword [reg_sp], 0x1
 mov ecx, dword [reg_d]
 mov eax, dword [reg_a]
 and dword [reg_d], 0xffffff
 mov dword [reg_a], eax
 cmp dword [reg_a], 0x0
 call PCJMP_f5
 call PCJMP_f5
 call PCJMP_f5
 mov eax, dword [reg_d]
 mov dword [reg_b], eax
 mov edi, dword [reg_a]
 mov eax, dword [mem + 4*eax]
 add dword [reg_b], 0x3
 mov eax, dword [reg_d]
 mov eax, dword [reg_bp]
 mov edi, 0x11c
 cmp dword [reg_a], 0x0
 add dword [reg_sp], 0x1
 call PCJMP_f5
 add dword [reg_d], 0xffffff
 jmp PIXf5_33_22
PIXf5_0_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_7: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_0_23
PIXf5_1_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_1_23
PIXf5_2_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x1d
 mov eax, 1
 call PCJMP_f5
BBf5_34: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_2_23
PIXf5_3_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_57: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_3_23
PIXf5_4_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_4_23
PIXf5_5_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_104: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_5_23
PIXf5_6_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_6_23
PIXf5_7_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x8d
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_140: mov edi, 0x89
 mov eax, 1
 call PCJMP_f5
BBf5_141: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_7_23
PIXf5_8_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_8_23
PIXf5_9_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_23
PIXf5_10_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_197: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_10_23
PIXf5_11_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_11_23
PIXf5_12_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x30
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 jmp PIXf5_12_23
PIXf5_13_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
BBf5_267: mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_13_23
PIXf5_14_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_14_23
PIXf5_15_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_15_23
PIXf5_16_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_23
PIXf5_17_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_17_23
PIXf5_18_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_18_23
PIXf5_19_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_19_23
PIXf5_20_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_387: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
BBf5_388: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_20_23
PIXf5_21_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_21_23
PIXf5_22_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 jmp PIXf5_22_23
PIXf5_23_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1c3
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_450: mov edi, 0x1bc
 mov eax, 1
 jmp PIXf5_23_23
PIXf5_24_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_24_23
PIXf5_25_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_472: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
BBf5_473: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_25_23
PIXf5_26_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 jmp PIXf5_26_23
PIXf5_27_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x20
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_27_23
PIXf5_28_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_28_23
PIXf5_29_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_541: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_542: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_29_23
PIXf5_30_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_556: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_557: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 jmp PIXf5_30_23
PIXf5_31_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x140
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_31_23
PIXf5_32_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x25a
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_599: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x259
 jmp PIXf5_32_23
PIXf5_33_22: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 mov eax, dword [mem + 4*eax]
 sete  al
 and dword [reg_b], 0xffffff
 mov dword [mem + 4*ecx], eax
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 add dword [reg_sp], 0x1
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov eax, 1
 mov eax, dword [reg_sp]
 mov eax, 1
 mov eax, 1
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 setne al
 mov eax, dword [reg_bp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov dword [reg_sp], eax
 and dword [reg_a], 0xffffff
 and dword [reg_sp], 0xffffff
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_33_23
PIXf5_0_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x2
 mov eax, 1
 call PCJMP_f5
BBf5_8: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcd
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_9: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffe8
 jmp PIXf5_0_24
PIXf5_1_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_1_24
PIXf5_2_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_35: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 jmp PIXf5_2_24
PIXf5_3_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_58: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_3_24
PIXf5_4_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_4_24
PIXf5_5_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_105: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 jmp PIXf5_5_24
PIXf5_6_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x7b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_122: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_6_24
PIXf5_7_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_142: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 jmp PIXf5_7_24
PIXf5_8_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x10
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_8_24
PIXf5_9_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_9_24
PIXf5_10_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_198: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_10_24
PIXf5_11_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_11_24
PIXf5_12_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_242: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x0
 mov edi, 0xf6
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_243: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_12_24
PIXf5_13_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x10d
 mov eax, 1
 call PCJMP_f5
BBf5_268: mov edi, 0x117
 mov eax, 1
 call PCJMP_f5
BBf5_269: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 jmp PIXf5_13_24
PIXf5_14_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x11f
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_14_24
PIXf5_15_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_15_24
PIXf5_16_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_16_24
PIXf5_17_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
BBf5_331: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_17_24
PIXf5_18_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_18_24
PIXf5_19_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_19_24
PIXf5_20_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov dword [reg_b], 0x1
 mov edi, 0x186
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_389: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 jmp PIXf5_20_24
PIXf5_21_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x191
 mov eax, 1
 call PCJMP_f5
BBf5_413: mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_21_24
PIXf5_22_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
BBf5_434: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 jmp PIXf5_22_24
PIXf5_23_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_451: mov edi, 0x1bb
 mov eax, 1
 call PCJMP_f5
BBf5_452: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_453: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_23_24
PIXf5_24_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_24_24
PIXf5_25_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 jmp PIXf5_25_24
PIXf5_26_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 jmp PIXf5_26_24
PIXf5_27_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_27_24
PIXf5_28_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffda
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_28_24
PIXf5_29_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0x3
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_29_24
PIXf5_30_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 jmp PIXf5_30_24
PIXf5_31_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_580: mov dword [reg_b], 0x13f
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 jmp PIXf5_31_24
PIXf5_32_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_600: mov edi, 0x25f
 mov eax, 1
 call PCJMP_f5
BBf5_601: mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 jmp PIXf5_32_24
PIXf5_33_23: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
 mov eax, dword [reg_a]
 add dword [reg_a], 0x1
 mov dword [reg_b], eax
 mov dword [reg_b], eax
 add dword [reg_d], 0xffffff
 mov dword [mem + 4*ecx], eax
 mov eax, dword [mem + 4*eax]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], eax
 mov dword [reg_b], eax
 and dword [reg_a], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, 1
 mov dword [mem + 4*ecx], eax
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 call PCJMP_f5
 and dword [reg_sp], 0xffffff
 mov dword [reg_b], eax
 jmp PIXf5_33_24
PIXf5_0_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcf
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_0_25
PIXf5_1_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_1_25
PIXf5_2_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_36: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_2_25
PIXf5_3_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x2d
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_3_25
PIXf5_4_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x54
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_83: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_4_25
PIXf5_5_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_106: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_5_25
PIXf5_6_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_6_25
PIXf5_7_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_143: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x20
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffe0
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 jmp PIXf5_7_25
PIXf5_8_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x99
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x24
 mov eax, 1
 call PCJMP_f5
BBf5_153: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 jmp PIXf5_8_25
PIXf5_9_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xb0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 jmp PIXf5_9_25
PIXf5_10_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xc7
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xbe
 mov eax, 1
 call PCJMP_f5
BBf5_199: mov eax, dword [reg_b]
 jmp PIXf5_10_25
PIXf5_11_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xdb
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xd4
 mov eax, 1
 call PCJMP_f5
BBf5_219: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 jmp PIXf5_11_25
PIXf5_12_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x78
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 jmp PIXf5_12_25
PIXf5_13_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x10f
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_270: mov edi, 0x117
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_13_25
PIXf5_14_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xde
 mov eax, 1
 call PCJMP_f5
BBf5_287: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_14_25
PIXf5_15_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_15_25
PIXf5_16_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 jmp PIXf5_16_25
PIXf5_17_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x147
 mov eax, 1
 call PCJMP_f5
BBf5_332: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 jmp PIXf5_17_25
PIXf5_18_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x156
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x24
 jmp PIXf5_18_25
PIXf5_19_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_361: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_19_25
PIXf5_20_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_b], eax
BBf5_390: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov edi, 0x188
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_391: mov edi, 0x189
 mov eax, 1
 call PCJMP_f5
BBf5_392: mov edi, 0x18e
 mov eax, 1
 call PCJMP_f5
BBf5_393: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 jmp PIXf5_20_25
PIXf5_21_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_414: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 jmp PIXf5_21_25
PIXf5_22_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_22_25
PIXf5_23_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov dword [reg_a], 0x24
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_23_25
PIXf5_24_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1d6
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_463: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov dword [reg_a], 0x24
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_24_25
PIXf5_25_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_25_25
PIXf5_26_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x1f1
 mov eax, 1
 call PCJMP_f5
BBf5_496: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_26_25
PIXf5_27_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_27_25
PIXf5_28_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x212
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_529: mov dword [reg_a], 0x1
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_28_25
PIXf5_29_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_29_25
PIXf5_30_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_558: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_559: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_30_25
PIXf5_31_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov dword [reg_b], 0x13f
 jmp PIXf5_31_25
PIXf5_32_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_602: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_32_25
PIXf5_33_24: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_sp], eax
 mov dword [reg_b], eax
 mov eax, dword [reg_a]
 call PCJMP_f5
 mov eax, 1
 mov ecx, dword [reg_d]
 add dword [reg_sp], 0x1
 mov eax, dword [reg_bp]
 mov eax, 1
 and dword [reg_sp], 0xffffff
 mov ecx, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [reg_sp]
 add dword [reg_sp], 0x1
 mov dword [reg_a], eax
 mov eax, 1
 mov dword [reg_a], eax
 mov dword [reg_sp], eax
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov eax, dword [reg_sp]
 mov dword [reg_sp], eax
 jmp PIXf5_33_25
PIXf5_0_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 jmp PIXf5_0_26
PIXf5_1_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_a], eax
 add dword [reg_a], 0xffffcd
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_1_26
PIXf5_2_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x26
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_37: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_2_26
PIXf5_3_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_59: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 jmp PIXf5_3_26
PIXf5_4_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 jmp PIXf5_4_26
PIXf5_5_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x18
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x6c
 jmp PIXf5_5_26
PIXf5_6_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x1
 mov edi, 0x7c
 mov eax, 1
 call PCJMP_f5
BBf5_123: mov dword [reg_a], 0x0
BBf5_124: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_6_26
PIXf5_7_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x20
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 jmp PIXf5_7_26
PIXf5_8_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x9b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_154: mov edi, 0x94
 mov eax, 1
 call PCJMP_f5
BBf5_155: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x9d
 cmp dword [reg_a], 0x0
 sete  al
 jmp PIXf5_8_26
PIXf5_9_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f5
BBf5_176: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_b], 0x1
 mov edi, 0xb4
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_177: mov dword [reg_a], 0x61
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_9_26
PIXf5_10_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov dword [reg_b], 0x1
 mov edi, 0xca
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_200: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0xc9
 jmp PIXf5_10_26
PIXf5_11_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_220: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_11_26
PIXf5_12_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], 0x1
 mov edi, 0xf5
 cmp dword [reg_a], 0x0
 setne al
 call PCJMP_f5
BBf5_244: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_12_26
PIXf5_13_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_271: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_13_26
PIXf5_14_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_288: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_289: mov eax, dword [reg_sp]
 jmp PIXf5_14_26
PIXf5_15_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x30
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_15_26
PIXf5_16_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], 0x13b
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, dword [reg_c]
 mov eax, 1
 call PCJMP_f5
BBf5_315: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_16_26
PIXf5_17_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_17_26
PIXf5_18_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_342: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_18_26
PIXf5_19_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_19_26
PIXf5_20_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_20_26
PIXf5_21_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_415: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
BBf5_416: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_21_26
PIXf5_22_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1b4
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_435: mov edi, 0x1b5
 mov eax, 1
 call PCJMP_f5
BBf5_436: mov edi, 0x1b8
 mov eax, 1
 call PCJMP_f5
 jmp PIXf5_22_26
PIXf5_23_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 jmp PIXf5_23_26
PIXf5_24_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 jmp PIXf5_24_26
PIXf5_25_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 jmp PIXf5_25_26
PIXf5_26_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 jmp PIXf5_26_26
PIXf5_27_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_27_26
PIXf5_28_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_28_26
PIXf5_29_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x21f
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_29_26
PIXf5_30_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov dword [reg_b], 0x13c
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 jmp PIXf5_30_26
PIXf5_31_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_31_26
PIXf5_32_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_32_26
PIXf5_33_25: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_sp]
 add dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_a], eax
 mov dword [reg_a], eax
 mov dword [reg_d], eax
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_sp]
 mov eax, 1
 and dword [reg_a], 0xffffff
 add dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov dword [reg_d], eax
 mov eax, dword [reg_b]
 mov eax, dword [reg_d]
 call PCJMP_f5
 mov eax, dword [mem + 4*eax]
 movzx eax, al
 mov eax, 1
 cmp dword [reg_b], 0x0
 add dword [reg_d], 0xffffff
 mov eax, 1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_33_26
PIXf5_0_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffcc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 jmp PIXf5_0_27
PIXf5_1_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_1_27
PIXf5_2_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_38: mov eax, dword [reg_bp]
 jmp PIXf5_2_27
PIXf5_3_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_60: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_61: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_3_27
PIXf5_4_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x1
 mov edi, 0x55
 mov eax, 1
 call PCJMP_f5
BBf5_84: mov dword [reg_a], 0x0
BBf5_85: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 jmp PIXf5_4_27
PIXf5_5_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_107: mov edi, 0x6d
 mov eax, 1
 call PCJMP_f5
BBf5_108: mov edi, 0x73
 mov eax, 1
 call PCJMP_f5
BBf5_109: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_5_27
PIXf5_6_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x7e
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_125: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_6_27
PIXf5_7_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_7_27
PIXf5_8_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 call PCJMP_f5
BBf5_156: mov dword [reg_a], 0x2d
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 sub dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_8_27
PIXf5_9_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov dword [reg_b], 0x0
 mov edi, 0xb3
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_178: mov eax, dword [reg_bp]
 jmp PIXf5_9_27
PIXf5_10_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0xab
 mov eax, 1
 call PCJMP_f5
BBf5_201: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_202: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 jmp PIXf5_10_27
PIXf5_11_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_221: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 jmp PIXf5_11_27
PIXf5_12_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x58
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 movzx eax, al
 mov dword [reg_b], eax
BBf5_245: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 cmp dword [reg_b], 0x0
 setne al
 jmp PIXf5_12_27
PIXf5_13_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x111
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_272: mov edi, 0x116
 mov eax, 1
 call PCJMP_f5
BBf5_273: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffb
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov edi, 0x114
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_274: mov dword [reg_a], 0x1
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_13_27
PIXf5_14_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 jmp PIXf5_14_27
PIXf5_15_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x12f
 mov eax, 1
 call PCJMP_f5
BBf5_302: mov edi, 0x130
 mov eax, 1
 call PCJMP_f5
BBf5_303: mov edi, 0x128
 mov eax, 1
 call PCJMP_f5
BBf5_304: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 jmp PIXf5_15_27
PIXf5_16_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x13d
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_316: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_16_27
PIXf5_17_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x14e
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_333: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_17_27
PIXf5_18_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x157
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x134
 mov eax, 1
 call PCJMP_f5
BBf5_343: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x4
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 jmp PIXf5_18_27
PIXf5_19_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 jmp PIXf5_19_27
PIXf5_20_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setb  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x18b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_394: mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 jmp PIXf5_20_27
PIXf5_21_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x1a2
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_417: mov edi, 0x1a3
 mov eax, 1
 call PCJMP_f5
BBf5_418: mov edi, 0x1a6
 mov eax, 1
 call PCJMP_f5
BBf5_419: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 jmp PIXf5_21_27
PIXf5_22_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_437: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_22_27
PIXf5_23_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_454: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 jmp PIXf5_23_27
PIXf5_24_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
BBf5_464: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_24_27
PIXf5_25_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setne al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1e2
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_474: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 jmp PIXf5_25_27
PIXf5_26_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 jmp PIXf5_26_27
PIXf5_27_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x205
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x92
 mov eax, 1
 call PCJMP_f5
BBf5_517: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x2
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 jmp PIXf5_27_27
PIXf5_28_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 jmp PIXf5_28_27
PIXf5_29_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov edi, 0x218
 mov eax, 1
 call PCJMP_f5
BBf5_543: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x3
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 jmp PIXf5_29_27
PIXf5_30_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, 1
 call PCJMP_f5
BBf5_560: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_561: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 jmp PIXf5_30_27
PIXf5_31_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_581: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_582: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 jmp PIXf5_31_27
PIXf5_32_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 jmp PIXf5_32_27
PIXf5_33_26: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 call PCJMP_f5
 mov eax, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_bp], eax
 mov eax, dword [mem + 4*eax]
 call PCJMP_f5
 mov eax, 1
 mov dword [reg_sp], eax
 mov eax, 1
 mov eax, dword [reg_bp]
 and dword [reg_sp], 0xffffff
 mov eax, 1
 mov dword [reg_a], eax
 call PCJMP_f5
 mov eax, dword [reg_a]
 call PCJMP_f5
 mov dword [reg_a], 0x0
 and dword [reg_d], 0xffffff
 cmp dword [reg_a], 0x0
 mov eax, dword [reg_a]
 add dword [reg_sp], 0x1
 mov eax, 1
 jmp PIXf5_33_27
PIXf5_0_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0xb
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_10: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 mov esi, 1
 jmp PIX_END_f5
PIXf5_1_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffd
 and dword [reg_b], 0xffffff
 mov esi, 2
 jmp PIX_END_f5
PIXf5_2_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 add dword [reg_a], 0xfffffe
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov esi, 3
 jmp PIX_END_f5
PIXf5_3_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x5
 and dword [reg_sp], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov dword [reg_a], 0x0
 mov esi, 4
 jmp PIX_END_f5
PIXf5_4_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov esi, 5
 jmp PIX_END_f5
PIXf5_5_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov esi, 6
 jmp PIX_END_f5
PIXf5_6_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov esi, 7
 jmp PIX_END_f5
PIXf5_7_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x1
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov esi, 8
 jmp PIX_END_f5
PIXf5_8_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
BBf5_157: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov esi, 9
 jmp PIX_END_f5
PIXf5_9_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x66
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 setbe al
 mov esi, 10
 jmp PIX_END_f5
PIXf5_10_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_203: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov esi, 11
 jmp PIX_END_f5
PIXf5_11_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_222: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 sub dword [reg_sp], 0x7
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 mov esi, 12
 jmp PIX_END_f5
PIXf5_12_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 movzx eax, al
 mov dword [reg_b], eax
BBf5_246: mov eax, dword [reg_b]
 mov dword [reg_a], eax
 mov edi, 0xf8
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_247: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov esi, 13
 jmp PIX_END_f5
PIXf5_13_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0xfffffa
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov esi, 14
 jmp PIX_END_f5
PIXf5_14_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov esi, 15
 jmp PIX_END_f5
PIXf5_15_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_305: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov esi, 16
 jmp PIX_END_f5
PIXf5_16_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x4
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov esi, 17
 jmp PIX_END_f5
PIXf5_17_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov edi, 0x150
 mov eax, 1
 call PCJMP_f5
BBf5_334: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov esi, 18
 jmp PIX_END_f5
PIXf5_18_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_344: mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov esi, 19
 jmp PIX_END_f5
PIXf5_19_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov edi, 0x16b
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_362: mov edi, 0x16c
 mov eax, 1
 call PCJMP_f5
BBf5_363: mov edi, 0x16d
 mov eax, 1
 call PCJMP_f5
BBf5_364: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov esi, 20
 jmp PIX_END_f5
PIXf5_20_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 sub dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 mov esi, 21
 jmp PIX_END_f5
PIXf5_21_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x3
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov esi, 22
 jmp PIX_END_f5
PIXf5_22_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 cmp dword [reg_a], eax
 sete  al
 movzx eax, al
 mov dword [reg_a], eax
 mov edi, 0x1b7
 cmp dword [reg_a], 0x0
 sete  al
 call PCJMP_f5
BBf5_438: mov edi, 0x1b1
 mov eax, 1
 call PCJMP_f5
BBf5_439: mov edi, 0x1b2
 mov eax, 1
 call PCJMP_f5
BBf5_440: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov esi, 23
 jmp PIX_END_f5
PIXf5_23_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 mov esi, 24
 jmp PIX_END_f5
PIXf5_24_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_b]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xfffffe
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov esi, 25
 jmp PIX_END_f5
PIXf5_25_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
BBf5_475: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0xffffff
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov esi, 26
 jmp PIX_END_f5
PIXf5_26_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov esi, 27
 jmp PIX_END_f5
PIXf5_27_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 add dword [reg_b], 0xffffdc
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov edi, 0x20e
 mov eax, 1
 call PCJMP_f5
BBf5_518: mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_a], 0x1
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x5
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_b]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_a]
 mov esi, 28
 jmp PIX_END_f5
PIXf5_28_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_b]
 mov ecx, dword [reg_a]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, 0x214
 mov eax, 1
 call PCJMP_f5
 mov esi, 29
 jmp PIX_END_f5
PIXf5_29_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
BBf5_544: mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov esi, 30
 jmp PIX_END_f5
PIXf5_30_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov dword [reg_a], 0x0
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_bp]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_bp], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov edi, dword [reg_a]
 mov eax, 1
 call PCJMP_f5
 mov esi, 31
 jmp PIX_END_f5
PIXf5_31_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [reg_bp]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov eax, dword [reg_sp]
 mov dword [reg_bp], eax
 mov eax, dword [reg_bp]
 mov dword [reg_b], eax
 add dword [reg_b], 0x2
 and dword [reg_b], 0xffffff
 mov eax, dword [reg_b]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_d], eax
 add dword [reg_d], 0xffffff
 and dword [reg_d], 0xffffff
 mov eax, dword [reg_a]
 mov ecx, dword [reg_d]
 mov dword [mem + 4*ecx], eax
 mov eax, dword [reg_d]
 mov dword [reg_sp], eax
 mov dword [reg_a], 0x247
 mov eax, dword [reg_sp]
 mov esi, 32
 jmp PIX_END_f5
PIXf5_32_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_b]
 add dword [reg_a], eax
 and dword [reg_a], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 add dword [reg_sp], 0x1
 and dword [reg_sp], 0xffffff
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov eax, dword [reg_c]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_c], eax
 mov eax, dword [reg_sp]
 mov eax, dword [mem + 4*eax]
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 mov dword [reg_b], eax
 mov esi, 33
 jmp PIX_END_f5
PIXf5_33_27: vfmaddsub132ps xmm0, xmm1, [ebx+edx*4+mem]
 mov dword [reg_a], eax
 mov dword [reg_d], eax
 sete  al
 setne al
 mov dword [reg_b], eax
 mov dword [reg_sp], eax
 mov dword [reg_b], eax
 mov eax, dword [reg_a]
 add dword [reg_a], 0xfffffe
 mov eax, 1
 mov dword [reg_a], eax
 mov eax, dword [reg_sp]
 mov dword [reg_b], eax
 mov dword [reg_a], eax
 mov eax, dword [reg_a]
 and dword [reg_sp], 0xffffff
 mov eax, 1
 and dword [reg_sp], 0xffffff
 mov eax, 1
 mov eax, 1
 mov eax, 1
 call PCJMP_f5
 mov eax, dword [mem + 4*eax]
 mov dword [reg_sp], eax
 mov esi, 34
 jmp PIX_END_f5
PIX_PAD_f5_0: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_1
PIX_PAD_f5_1: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_2
PIX_PAD_f5_2: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_3
PIX_PAD_f5_3: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_4
PIX_PAD_f5_4: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_5
PIX_PAD_f5_5: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_6
PIX_PAD_f5_6: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_7
PIX_PAD_f5_7: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_8
PIX_PAD_f5_8: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_9
PIX_PAD_f5_9: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_10
PIX_PAD_f5_10: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_11
PIX_PAD_f5_11: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_12
PIX_PAD_f5_12: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_13
PIX_PAD_f5_13: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_14
PIX_PAD_f5_14: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_15
PIX_PAD_f5_15: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_16
PIX_PAD_f5_16: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_17
PIX_PAD_f5_17: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_18
PIX_PAD_f5_18: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_19
PIX_PAD_f5_19: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_20
PIX_PAD_f5_20: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_21
PIX_PAD_f5_21: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_22
PIX_PAD_f5_22: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_23
PIX_PAD_f5_23: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_24
PIX_PAD_f5_24: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_25
PIX_PAD_f5_25: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_26
PIX_PAD_f5_26: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_PAD_f5_27
PIX_PAD_f5_27: nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp PIX_END_f5
PIX_END_f5:
jmp PIX_START_f5
PIX_TABLE_f5:
 dd PIXf5_0_0
 dd PIXf5_1_0
 dd PIXf5_2_0
 dd PIXf5_3_0
 dd PIXf5_4_0
 dd PIXf5_5_0
 dd PIXf5_6_0
 dd PIXf5_7_0
 dd PIXf5_8_0
 dd PIXf5_9_0
 dd PIXf5_10_0
 dd PIXf5_11_0
 dd PIXf5_12_0
 dd PIXf5_13_0
 dd PIXf5_14_0
 dd PIXf5_15_0
 dd PIXf5_16_0
 dd PIXf5_17_0
 dd PIXf5_18_0
 dd PIXf5_19_0
 dd PIXf5_20_0
 dd PIXf5_21_0
 dd PIXf5_22_0
 dd PIXf5_23_0
 dd PIXf5_24_0
 dd PIXf5_25_0
 dd PIXf5_26_0
 dd PIXf5_27_0
 dd PIXf5_28_0
 dd PIXf5_29_0
 dd PIXf5_30_0
 dd PIXf5_31_0
 dd PIXf5_32_0
 dd PIXf5_33_0
 dd PIX_PAD_f5_0
JMP_TABLE_f5:
 dd BBf5_0 + 0xabad1dea
 dd BBf5_1 + 0xabad1dea
 dd BBf5_2 + 0xabad1dea
 dd BBf5_3 + 0xabad1dea
 dd BBf5_4 + 0xabad1dea
 dd BBf5_5 + 0xabad1dea
 dd BBf5_6 + 0xabad1dea
 dd BBf5_7 + 0xabad1dea
 dd BBf5_8 + 0xabad1dea
 dd BBf5_9 + 0xabad1dea
 dd BBf5_10 + 0xabad1dea
 dd BBf5_11 + 0xabad1dea
 dd BBf5_12 + 0xabad1dea
 dd BBf5_13 + 0xabad1dea
 dd BBf5_14 + 0xabad1dea
 dd BBf5_15 + 0xabad1dea
 dd BBf5_16 + 0xabad1dea
 dd BBf5_17 + 0xabad1dea
 dd BBf5_18 + 0xabad1dea
 dd BBf5_19 + 0xabad1dea
 dd BBf5_20 + 0xabad1dea
 dd BBf5_21 + 0xabad1dea
 dd BBf5_22 + 0xabad1dea
 dd BBf5_23 + 0xabad1dea
 dd BBf5_24 + 0xabad1dea
 dd BBf5_25 + 0xabad1dea
 dd BBf5_26 + 0xabad1dea
 dd BBf5_27 + 0xabad1dea
 dd BBf5_28 + 0xabad1dea
 dd BBf5_29 + 0xabad1dea
 dd BBf5_30 + 0xabad1dea
 dd BBf5_31 + 0xabad1dea
 dd BBf5_32 + 0xabad1dea
 dd BBf5_33 + 0xabad1dea
 dd BBf5_34 + 0xabad1dea
 dd BBf5_35 + 0xabad1dea
 dd BBf5_36 + 0xabad1dea
 dd BBf5_37 + 0xabad1dea
 dd BBf5_38 + 0xabad1dea
 dd BBf5_39 + 0xabad1dea
 dd BBf5_40 + 0xabad1dea
 dd BBf5_41 + 0xabad1dea
 dd BBf5_42 + 0xabad1dea
 dd BBf5_43 + 0xabad1dea
 dd BBf5_44 + 0xabad1dea
 dd BBf5_45 + 0xabad1dea
 dd BBf5_46 + 0xabad1dea
 dd BBf5_47 + 0xabad1dea
 dd BBf5_48 + 0xabad1dea
 dd BBf5_49 + 0xabad1dea
 dd BBf5_50 + 0xabad1dea
 dd BBf5_51 + 0xabad1dea
 dd BBf5_52 + 0xabad1dea
 dd BBf5_53 + 0xabad1dea
 dd BBf5_54 + 0xabad1dea
 dd BBf5_55 + 0xabad1dea
 dd BBf5_56 + 0xabad1dea
 dd BBf5_57 + 0xabad1dea
 dd BBf5_58 + 0xabad1dea
 dd BBf5_59 + 0xabad1dea
 dd BBf5_60 + 0xabad1dea
 dd BBf5_61 + 0xabad1dea
 dd BBf5_62 + 0xabad1dea
 dd BBf5_63 + 0xabad1dea
 dd BBf5_64 + 0xabad1dea
 dd BBf5_65 + 0xabad1dea
 dd BBf5_66 + 0xabad1dea
 dd BBf5_67 + 0xabad1dea
 dd BBf5_68 + 0xabad1dea
 dd BBf5_69 + 0xabad1dea
 dd BBf5_70 + 0xabad1dea
 dd BBf5_71 + 0xabad1dea
 dd BBf5_72 + 0xabad1dea
 dd BBf5_73 + 0xabad1dea
 dd BBf5_74 + 0xabad1dea
 dd BBf5_75 + 0xabad1dea
 dd BBf5_76 + 0xabad1dea
 dd BBf5_77 + 0xabad1dea
 dd BBf5_78 + 0xabad1dea
 dd BBf5_79 + 0xabad1dea
 dd BBf5_80 + 0xabad1dea
 dd BBf5_81 + 0xabad1dea
 dd BBf5_82 + 0xabad1dea
 dd BBf5_83 + 0xabad1dea
 dd BBf5_84 + 0xabad1dea
 dd BBf5_85 + 0xabad1dea
 dd BBf5_86 + 0xabad1dea
 dd BBf5_87 + 0xabad1dea
 dd BBf5_88 + 0xabad1dea
 dd BBf5_89 + 0xabad1dea
 dd BBf5_90 + 0xabad1dea
 dd BBf5_91 + 0xabad1dea
 dd BBf5_92 + 0xabad1dea
 dd BBf5_93 + 0xabad1dea
 dd BBf5_94 + 0xabad1dea
 dd BBf5_95 + 0xabad1dea
 dd BBf5_96 + 0xabad1dea
 dd BBf5_97 + 0xabad1dea
 dd BBf5_98 + 0xabad1dea
 dd BBf5_99 + 0xabad1dea
 dd BBf5_100 + 0xabad1dea
 dd BBf5_101 + 0xabad1dea
 dd BBf5_102 + 0xabad1dea
 dd BBf5_103 + 0xabad1dea
 dd BBf5_104 + 0xabad1dea
 dd BBf5_105 + 0xabad1dea
 dd BBf5_106 + 0xabad1dea
 dd BBf5_107 + 0xabad1dea
 dd BBf5_108 + 0xabad1dea
 dd BBf5_109 + 0xabad1dea
 dd BBf5_110 + 0xabad1dea
 dd BBf5_111 + 0xabad1dea
 dd BBf5_112 + 0xabad1dea
 dd BBf5_113 + 0xabad1dea
 dd BBf5_114 + 0xabad1dea
 dd BBf5_115 + 0xabad1dea
 dd BBf5_116 + 0xabad1dea
 dd BBf5_117 + 0xabad1dea
 dd BBf5_118 + 0xabad1dea
 dd BBf5_119 + 0xabad1dea
 dd BBf5_120 + 0xabad1dea
 dd BBf5_121 + 0xabad1dea
 dd BBf5_122 + 0xabad1dea
 dd BBf5_123 + 0xabad1dea
 dd BBf5_124 + 0xabad1dea
 dd BBf5_125 + 0xabad1dea
 dd BBf5_126 + 0xabad1dea
 dd BBf5_127 + 0xabad1dea
 dd BBf5_128 + 0xabad1dea
 dd BBf5_129 + 0xabad1dea
 dd BBf5_130 + 0xabad1dea
 dd BBf5_131 + 0xabad1dea
 dd BBf5_132 + 0xabad1dea
 dd BBf5_133 + 0xabad1dea
 dd BBf5_134 + 0xabad1dea
 dd BBf5_135 + 0xabad1dea
 dd BBf5_136 + 0xabad1dea
 dd BBf5_137 + 0xabad1dea
 dd BBf5_138 + 0xabad1dea
 dd BBf5_139 + 0xabad1dea
 dd BBf5_140 + 0xabad1dea
 dd BBf5_141 + 0xabad1dea
 dd BBf5_142 + 0xabad1dea
 dd BBf5_143 + 0xabad1dea
 dd BBf5_144 + 0xabad1dea
 dd BBf5_145 + 0xabad1dea
 dd BBf5_146 + 0xabad1dea
 dd BBf5_147 + 0xabad1dea
 dd BBf5_148 + 0xabad1dea
 dd BBf5_149 + 0xabad1dea
 dd BBf5_150 + 0xabad1dea
 dd BBf5_151 + 0xabad1dea
 dd BBf5_152 + 0xabad1dea
 dd BBf5_153 + 0xabad1dea
 dd BBf5_154 + 0xabad1dea
 dd BBf5_155 + 0xabad1dea
 dd BBf5_156 + 0xabad1dea
 dd BBf5_157 + 0xabad1dea
 dd BBf5_158 + 0xabad1dea
 dd BBf5_159 + 0xabad1dea
 dd BBf5_160 + 0xabad1dea
 dd BBf5_161 + 0xabad1dea
 dd BBf5_162 + 0xabad1dea
 dd BBf5_163 + 0xabad1dea
 dd BBf5_164 + 0xabad1dea
 dd BBf5_165 + 0xabad1dea
 dd BBf5_166 + 0xabad1dea
 dd BBf5_167 + 0xabad1dea
 dd BBf5_168 + 0xabad1dea
 dd BBf5_169 + 0xabad1dea
 dd BBf5_170 + 0xabad1dea
 dd BBf5_171 + 0xabad1dea
 dd BBf5_172 + 0xabad1dea
 dd BBf5_173 + 0xabad1dea
 dd BBf5_174 + 0xabad1dea
 dd BBf5_175 + 0xabad1dea
 dd BBf5_176 + 0xabad1dea
 dd BBf5_177 + 0xabad1dea
 dd BBf5_178 + 0xabad1dea
 dd BBf5_179 + 0xabad1dea
 dd BBf5_180 + 0xabad1dea
 dd BBf5_181 + 0xabad1dea
 dd BBf5_182 + 0xabad1dea
 dd BBf5_183 + 0xabad1dea
 dd BBf5_184 + 0xabad1dea
 dd BBf5_185 + 0xabad1dea
 dd BBf5_186 + 0xabad1dea
 dd BBf5_187 + 0xabad1dea
 dd BBf5_188 + 0xabad1dea
 dd BBf5_189 + 0xabad1dea
 dd BBf5_190 + 0xabad1dea
 dd BBf5_191 + 0xabad1dea
 dd BBf5_192 + 0xabad1dea
 dd BBf5_193 + 0xabad1dea
 dd BBf5_194 + 0xabad1dea
 dd BBf5_195 + 0xabad1dea
 dd BBf5_196 + 0xabad1dea
 dd BBf5_197 + 0xabad1dea
 dd BBf5_198 + 0xabad1dea
 dd BBf5_199 + 0xabad1dea
 dd BBf5_200 + 0xabad1dea
 dd BBf5_201 + 0xabad1dea
 dd BBf5_202 + 0xabad1dea
 dd BBf5_203 + 0xabad1dea
 dd BBf5_204 + 0xabad1dea
 dd BBf5_205 + 0xabad1dea
 dd BBf5_206 + 0xabad1dea
 dd BBf5_207 + 0xabad1dea
 dd BBf5_208 + 0xabad1dea
 dd BBf5_209 + 0xabad1dea
 dd BBf5_210 + 0xabad1dea
 dd BBf5_211 + 0xabad1dea
 dd BBf5_212 + 0xabad1dea
 dd BBf5_213 + 0xabad1dea
 dd BBf5_214 + 0xabad1dea
 dd BBf5_215 + 0xabad1dea
 dd BBf5_216 + 0xabad1dea
 dd BBf5_217 + 0xabad1dea
 dd BBf5_218 + 0xabad1dea
 dd BBf5_219 + 0xabad1dea
 dd BBf5_220 + 0xabad1dea
 dd BBf5_221 + 0xabad1dea
 dd BBf5_222 + 0xabad1dea
 dd BBf5_223 + 0xabad1dea
 dd BBf5_224 + 0xabad1dea
 dd BBf5_225 + 0xabad1dea
 dd BBf5_226 + 0xabad1dea
 dd BBf5_227 + 0xabad1dea
 dd BBf5_228 + 0xabad1dea
 dd BBf5_229 + 0xabad1dea
 dd BBf5_230 + 0xabad1dea
 dd BBf5_231 + 0xabad1dea
 dd BBf5_232 + 0xabad1dea
 dd BBf5_233 + 0xabad1dea
 dd BBf5_234 + 0xabad1dea
 dd BBf5_235 + 0xabad1dea
 dd BBf5_236 + 0xabad1dea
 dd BBf5_237 + 0xabad1dea
 dd BBf5_238 + 0xabad1dea
 dd BBf5_239 + 0xabad1dea
 dd BBf5_240 + 0xabad1dea
 dd BBf5_241 + 0xabad1dea
 dd BBf5_242 + 0xabad1dea
 dd BBf5_243 + 0xabad1dea
 dd BBf5_244 + 0xabad1dea
 dd BBf5_245 + 0xabad1dea
 dd BBf5_246 + 0xabad1dea
 dd BBf5_247 + 0xabad1dea
 dd BBf5_248 + 0xabad1dea
 dd BBf5_249 + 0xabad1dea
 dd BBf5_250 + 0xabad1dea
 dd BBf5_251 + 0xabad1dea
 dd BBf5_252 + 0xabad1dea
 dd BBf5_253 + 0xabad1dea
 dd BBf5_254 + 0xabad1dea
 dd BBf5_255 + 0xabad1dea
 dd BBf5_256 + 0xabad1dea
 dd BBf5_257 + 0xabad1dea
 dd BBf5_258 + 0xabad1dea
 dd BBf5_259 + 0xabad1dea
 dd BBf5_260 + 0xabad1dea
 dd BBf5_261 + 0xabad1dea
 dd BBf5_262 + 0xabad1dea
 dd BBf5_263 + 0xabad1dea
 dd BBf5_264 + 0xabad1dea
 dd BBf5_265 + 0xabad1dea
 dd BBf5_266 + 0xabad1dea
 dd BBf5_267 + 0xabad1dea
 dd BBf5_268 + 0xabad1dea
 dd BBf5_269 + 0xabad1dea
 dd BBf5_270 + 0xabad1dea
 dd BBf5_271 + 0xabad1dea
 dd BBf5_272 + 0xabad1dea
 dd BBf5_273 + 0xabad1dea
 dd BBf5_274 + 0xabad1dea
 dd BBf5_275 + 0xabad1dea
 dd BBf5_276 + 0xabad1dea
 dd BBf5_277 + 0xabad1dea
 dd BBf5_278 + 0xabad1dea
 dd BBf5_279 + 0xabad1dea
 dd BBf5_280 + 0xabad1dea
 dd BBf5_281 + 0xabad1dea
 dd BBf5_282 + 0xabad1dea
 dd BBf5_283 + 0xabad1dea
 dd BBf5_284 + 0xabad1dea
 dd BBf5_285 + 0xabad1dea
 dd BBf5_286 + 0xabad1dea
 dd BBf5_287 + 0xabad1dea
 dd BBf5_288 + 0xabad1dea
 dd BBf5_289 + 0xabad1dea
 dd BBf5_290 + 0xabad1dea
 dd BBf5_291 + 0xabad1dea
 dd BBf5_292 + 0xabad1dea
 dd BBf5_293 + 0xabad1dea
 dd BBf5_294 + 0xabad1dea
 dd BBf5_295 + 0xabad1dea
 dd BBf5_296 + 0xabad1dea
 dd BBf5_297 + 0xabad1dea
 dd BBf5_298 + 0xabad1dea
 dd BBf5_299 + 0xabad1dea
 dd BBf5_300 + 0xabad1dea
 dd BBf5_301 + 0xabad1dea
 dd BBf5_302 + 0xabad1dea
 dd BBf5_303 + 0xabad1dea
 dd BBf5_304 + 0xabad1dea
 dd BBf5_305 + 0xabad1dea
 dd BBf5_306 + 0xabad1dea
 dd BBf5_307 + 0xabad1dea
 dd BBf5_308 + 0xabad1dea
 dd BBf5_309 + 0xabad1dea
 dd BBf5_310 + 0xabad1dea
 dd BBf5_311 + 0xabad1dea
 dd BBf5_312 + 0xabad1dea
 dd BBf5_313 + 0xabad1dea
 dd BBf5_314 + 0xabad1dea
 dd BBf5_315 + 0xabad1dea
 dd BBf5_316 + 0xabad1dea
 dd BBf5_317 + 0xabad1dea
 dd BBf5_318 + 0xabad1dea
 dd BBf5_319 + 0xabad1dea
 dd BBf5_320 + 0xabad1dea
 dd BBf5_321 + 0xabad1dea
 dd BBf5_322 + 0xabad1dea
 dd BBf5_323 + 0xabad1dea
 dd BBf5_324 + 0xabad1dea
 dd BBf5_325 + 0xabad1dea
 dd BBf5_326 + 0xabad1dea
 dd BBf5_327 + 0xabad1dea
 dd BBf5_328 + 0xabad1dea
 dd BBf5_329 + 0xabad1dea
 dd BBf5_330 + 0xabad1dea
 dd BBf5_331 + 0xabad1dea
 dd BBf5_332 + 0xabad1dea
 dd BBf5_333 + 0xabad1dea
 dd BBf5_334 + 0xabad1dea
 dd BBf5_335 + 0xabad1dea
 dd BBf5_336 + 0xabad1dea
 dd BBf5_337 + 0xabad1dea
 dd BBf5_338 + 0xabad1dea
 dd BBf5_339 + 0xabad1dea
 dd BBf5_340 + 0xabad1dea
 dd BBf5_341 + 0xabad1dea
 dd BBf5_342 + 0xabad1dea
 dd BBf5_343 + 0xabad1dea
 dd BBf5_344 + 0xabad1dea
 dd BBf5_345 + 0xabad1dea
 dd BBf5_346 + 0xabad1dea
 dd BBf5_347 + 0xabad1dea
 dd BBf5_348 + 0xabad1dea
 dd BBf5_349 + 0xabad1dea
 dd BBf5_350 + 0xabad1dea
 dd BBf5_351 + 0xabad1dea
 dd BBf5_352 + 0xabad1dea
 dd BBf5_353 + 0xabad1dea
 dd BBf5_354 + 0xabad1dea
 dd BBf5_355 + 0xabad1dea
 dd BBf5_356 + 0xabad1dea
 dd BBf5_357 + 0xabad1dea
 dd BBf5_358 + 0xabad1dea
 dd BBf5_359 + 0xabad1dea
 dd BBf5_360 + 0xabad1dea
 dd BBf5_361 + 0xabad1dea
 dd BBf5_362 + 0xabad1dea
 dd BBf5_363 + 0xabad1dea
 dd BBf5_364 + 0xabad1dea
 dd BBf5_365 + 0xabad1dea
 dd BBf5_366 + 0xabad1dea
 dd BBf5_367 + 0xabad1dea
 dd BBf5_368 + 0xabad1dea
 dd BBf5_369 + 0xabad1dea
 dd BBf5_370 + 0xabad1dea
 dd BBf5_371 + 0xabad1dea
 dd BBf5_372 + 0xabad1dea
 dd BBf5_373 + 0xabad1dea
 dd BBf5_374 + 0xabad1dea
 dd BBf5_375 + 0xabad1dea
 dd BBf5_376 + 0xabad1dea
 dd BBf5_377 + 0xabad1dea
 dd BBf5_378 + 0xabad1dea
 dd BBf5_379 + 0xabad1dea
 dd BBf5_380 + 0xabad1dea
 dd BBf5_381 + 0xabad1dea
 dd BBf5_382 + 0xabad1dea
 dd BBf5_383 + 0xabad1dea
 dd BBf5_384 + 0xabad1dea
 dd BBf5_385 + 0xabad1dea
 dd BBf5_386 + 0xabad1dea
 dd BBf5_387 + 0xabad1dea
 dd BBf5_388 + 0xabad1dea
 dd BBf5_389 + 0xabad1dea
 dd BBf5_390 + 0xabad1dea
 dd BBf5_391 + 0xabad1dea
 dd BBf5_392 + 0xabad1dea
 dd BBf5_393 + 0xabad1dea
 dd BBf5_394 + 0xabad1dea
 dd BBf5_395 + 0xabad1dea
 dd BBf5_396 + 0xabad1dea
 dd BBf5_397 + 0xabad1dea
 dd BBf5_398 + 0xabad1dea
 dd BBf5_399 + 0xabad1dea
 dd BBf5_400 + 0xabad1dea
 dd BBf5_401 + 0xabad1dea
 dd BBf5_402 + 0xabad1dea
 dd BBf5_403 + 0xabad1dea
 dd BBf5_404 + 0xabad1dea
 dd BBf5_405 + 0xabad1dea
 dd BBf5_406 + 0xabad1dea
 dd BBf5_407 + 0xabad1dea
 dd BBf5_408 + 0xabad1dea
 dd BBf5_409 + 0xabad1dea
 dd BBf5_410 + 0xabad1dea
 dd BBf5_411 + 0xabad1dea
 dd BBf5_412 + 0xabad1dea
 dd BBf5_413 + 0xabad1dea
 dd BBf5_414 + 0xabad1dea
 dd BBf5_415 + 0xabad1dea
 dd BBf5_416 + 0xabad1dea
 dd BBf5_417 + 0xabad1dea
 dd BBf5_418 + 0xabad1dea
 dd BBf5_419 + 0xabad1dea
 dd BBf5_420 + 0xabad1dea
 dd BBf5_421 + 0xabad1dea
 dd BBf5_422 + 0xabad1dea
 dd BBf5_423 + 0xabad1dea
 dd BBf5_424 + 0xabad1dea
 dd BBf5_425 + 0xabad1dea
 dd BBf5_426 + 0xabad1dea
 dd BBf5_427 + 0xabad1dea
 dd BBf5_428 + 0xabad1dea
 dd BBf5_429 + 0xabad1dea
 dd BBf5_430 + 0xabad1dea
 dd BBf5_431 + 0xabad1dea
 dd BBf5_432 + 0xabad1dea
 dd BBf5_433 + 0xabad1dea
 dd BBf5_434 + 0xabad1dea
 dd BBf5_435 + 0xabad1dea
 dd BBf5_436 + 0xabad1dea
 dd BBf5_437 + 0xabad1dea
 dd BBf5_438 + 0xabad1dea
 dd BBf5_439 + 0xabad1dea
 dd BBf5_440 + 0xabad1dea
 dd BBf5_441 + 0xabad1dea
 dd BBf5_442 + 0xabad1dea
 dd BBf5_443 + 0xabad1dea
 dd BBf5_444 + 0xabad1dea
 dd BBf5_445 + 0xabad1dea
 dd BBf5_446 + 0xabad1dea
 dd BBf5_447 + 0xabad1dea
 dd BBf5_448 + 0xabad1dea
 dd BBf5_449 + 0xabad1dea
 dd BBf5_450 + 0xabad1dea
 dd BBf5_451 + 0xabad1dea
 dd BBf5_452 + 0xabad1dea
 dd BBf5_453 + 0xabad1dea
 dd BBf5_454 + 0xabad1dea
 dd BBf5_455 + 0xabad1dea
 dd BBf5_456 + 0xabad1dea
 dd BBf5_457 + 0xabad1dea
 dd BBf5_458 + 0xabad1dea
 dd BBf5_459 + 0xabad1dea
 dd BBf5_460 + 0xabad1dea
 dd BBf5_461 + 0xabad1dea
 dd BBf5_462 + 0xabad1dea
 dd BBf5_463 + 0xabad1dea
 dd BBf5_464 + 0xabad1dea
 dd BBf5_465 + 0xabad1dea
 dd BBf5_466 + 0xabad1dea
 dd BBf5_467 + 0xabad1dea
 dd BBf5_468 + 0xabad1dea
 dd BBf5_469 + 0xabad1dea
 dd BBf5_470 + 0xabad1dea
 dd BBf5_471 + 0xabad1dea
 dd BBf5_472 + 0xabad1dea
 dd BBf5_473 + 0xabad1dea
 dd BBf5_474 + 0xabad1dea
 dd BBf5_475 + 0xabad1dea
 dd BBf5_476 + 0xabad1dea
 dd BBf5_477 + 0xabad1dea
 dd BBf5_478 + 0xabad1dea
 dd BBf5_479 + 0xabad1dea
 dd BBf5_480 + 0xabad1dea
 dd BBf5_481 + 0xabad1dea
 dd BBf5_482 + 0xabad1dea
 dd BBf5_483 + 0xabad1dea
 dd BBf5_484 + 0xabad1dea
 dd BBf5_485 + 0xabad1dea
 dd BBf5_486 + 0xabad1dea
 dd BBf5_487 + 0xabad1dea
 dd BBf5_488 + 0xabad1dea
 dd BBf5_489 + 0xabad1dea
 dd BBf5_490 + 0xabad1dea
 dd BBf5_491 + 0xabad1dea
 dd BBf5_492 + 0xabad1dea
 dd BBf5_493 + 0xabad1dea
 dd BBf5_494 + 0xabad1dea
 dd BBf5_495 + 0xabad1dea
 dd BBf5_496 + 0xabad1dea
 dd BBf5_497 + 0xabad1dea
 dd BBf5_498 + 0xabad1dea
 dd BBf5_499 + 0xabad1dea
 dd BBf5_500 + 0xabad1dea
 dd BBf5_501 + 0xabad1dea
 dd BBf5_502 + 0xabad1dea
 dd BBf5_503 + 0xabad1dea
 dd BBf5_504 + 0xabad1dea
 dd BBf5_505 + 0xabad1dea
 dd BBf5_506 + 0xabad1dea
 dd BBf5_507 + 0xabad1dea
 dd BBf5_508 + 0xabad1dea
 dd BBf5_509 + 0xabad1dea
 dd BBf5_510 + 0xabad1dea
 dd BBf5_511 + 0xabad1dea
 dd BBf5_512 + 0xabad1dea
 dd BBf5_513 + 0xabad1dea
 dd BBf5_514 + 0xabad1dea
 dd BBf5_515 + 0xabad1dea
 dd BBf5_516 + 0xabad1dea
 dd BBf5_517 + 0xabad1dea
 dd BBf5_518 + 0xabad1dea
 dd BBf5_519 + 0xabad1dea
 dd BBf5_520 + 0xabad1dea
 dd BBf5_521 + 0xabad1dea
 dd BBf5_522 + 0xabad1dea
 dd BBf5_523 + 0xabad1dea
 dd BBf5_524 + 0xabad1dea
 dd BBf5_525 + 0xabad1dea
 dd BBf5_526 + 0xabad1dea
 dd BBf5_527 + 0xabad1dea
 dd BBf5_528 + 0xabad1dea
 dd BBf5_529 + 0xabad1dea
 dd BBf5_530 + 0xabad1dea
 dd BBf5_531 + 0xabad1dea
 dd BBf5_532 + 0xabad1dea
 dd BBf5_533 + 0xabad1dea
 dd BBf5_534 + 0xabad1dea
 dd BBf5_535 + 0xabad1dea
 dd BBf5_536 + 0xabad1dea
 dd BBf5_537 + 0xabad1dea
 dd BBf5_538 + 0xabad1dea
 dd BBf5_539 + 0xabad1dea
 dd BBf5_540 + 0xabad1dea
 dd BBf5_541 + 0xabad1dea
 dd BBf5_542 + 0xabad1dea
 dd BBf5_543 + 0xabad1dea
 dd BBf5_544 + 0xabad1dea
 dd BBf5_545 + 0xabad1dea
 dd BBf5_546 + 0xabad1dea
 dd BBf5_547 + 0xabad1dea
 dd BBf5_548 + 0xabad1dea
 dd BBf5_549 + 0xabad1dea
 dd BBf5_550 + 0xabad1dea
 dd BBf5_551 + 0xabad1dea
 dd BBf5_552 + 0xabad1dea
 dd BBf5_553 + 0xabad1dea
 dd BBf5_554 + 0xabad1dea
 dd BBf5_555 + 0xabad1dea
 dd BBf5_556 + 0xabad1dea
 dd BBf5_557 + 0xabad1dea
 dd BBf5_558 + 0xabad1dea
 dd BBf5_559 + 0xabad1dea
 dd BBf5_560 + 0xabad1dea
 dd BBf5_561 + 0xabad1dea
 dd BBf5_562 + 0xabad1dea
 dd BBf5_563 + 0xabad1dea
 dd BBf5_564 + 0xabad1dea
 dd BBf5_565 + 0xabad1dea
 dd BBf5_566 + 0xabad1dea
 dd BBf5_567 + 0xabad1dea
 dd BBf5_568 + 0xabad1dea
 dd BBf5_569 + 0xabad1dea
 dd BBf5_570 + 0xabad1dea
 dd BBf5_571 + 0xabad1dea
 dd BBf5_572 + 0xabad1dea
 dd BBf5_573 + 0xabad1dea
 dd BBf5_574 + 0xabad1dea
 dd BBf5_575 + 0xabad1dea
 dd BBf5_576 + 0xabad1dea
 dd BBf5_577 + 0xabad1dea
 dd BBf5_578 + 0xabad1dea
 dd BBf5_579 + 0xabad1dea
 dd BBf5_580 + 0xabad1dea
 dd BBf5_581 + 0xabad1dea
 dd BBf5_582 + 0xabad1dea
 dd BBf5_583 + 0xabad1dea
 dd BBf5_584 + 0xabad1dea
 dd BBf5_585 + 0xabad1dea
 dd BBf5_586 + 0xabad1dea
 dd BBf5_587 + 0xabad1dea
 dd BBf5_588 + 0xabad1dea
 dd BBf5_589 + 0xabad1dea
 dd BBf5_590 + 0xabad1dea
 dd BBf5_591 + 0xabad1dea
 dd BBf5_592 + 0xabad1dea
 dd BBf5_593 + 0xabad1dea
 dd BBf5_594 + 0xabad1dea
 dd BBf5_595 + 0xabad1dea
 dd BBf5_596 + 0xabad1dea
 dd BBf5_597 + 0xabad1dea
 dd BBf5_598 + 0xabad1dea
 dd BBf5_599 + 0xabad1dea
 dd BBf5_600 + 0xabad1dea
 dd BBf5_601 + 0xabad1dea
 dd BBf5_602 + 0xabad1dea
 dd BBf5_603 + 0xabad1dea
 dd BBf5_604 + 0xabad1dea
 dd BBf5_605 + 0xabad1dea
 dd BBf5_606 + 0xabad1dea
 dd BBf5_607 + 0xabad1dea
 dd BBf5_608 + 0xabad1dea
 dd BBf5_609 + 0xabad1dea
 dd BBf5_610 + 0xabad1dea
; ----- End of func 0 -----